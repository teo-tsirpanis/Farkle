[{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle.html","title":"Farkle","content":"AST \nPostProcessors \nRuntimeFarkle \nAST \nFarkleError \nFarkleException \nITransformer\u003C\u0027TSymbol\u003E \nITransformerContext \nParserApplicationException \nParserApplicationExceptionWithPosition \nParserException \nPosition \nPostProcessor\u003C\u0027T\u003E \nPostProcessorException \nRuntimeFarkle\u003C\u0027TResult\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder.html","title":"Farkle.Builder","content":"DFABuild \nDesigntimeFarkle \nDesigntimeFarkleBuild \nDesigntimeFarkleOperators \nLALRBuild \nPredefinedSets \nRegex \nRegexGrammar \nRegexOperators \nTerminals \nBuildError \nBuildOptions \nComment \nDesigntimeFarkle \nDesigntimeFarkle\u003C\u0027T\u003E \nDesigntimeFarkleExtensions \nF\u003C\u0027T\u003E \nGrammarDefinition \nGrammarMetadata \nGroup \nLALRConflict \nLALRConflictReason \nLALRConflictState \nLALRConflictType \nNonterminal \nNonterminal\u003C\u0027T\u003E \nPrecompilableDesigntimeFarkle \nPrecompilableDesigntimeFarkle\u003C\u0027T\u003E \nPrecompiledGrammar \nPrecompilerExtensions \nPrecompilerLoaderException \nPredefinedSet \nProduction\u003C\u0027T\u003E \nProductionBuilder \nProductionBuilderExtensions \nRegex \nT\u003C\u0027T\u003E \nTerminal"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution.html","title":"Farkle.Builder.LALRConflictResolution","content":"ConflictResolutionDecision \nLALRConflictResolver"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence.html","title":"Farkle.Builder.OperatorPrecedence","content":"AssociativityGroup \nAssociativityType \nLeftAssociative \nNonAssociative \nOperatorScope \nPrecedenceOnly \nRightAssociative"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders.html","title":"Farkle.Builder.ProductionBuilders","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E \nProductionBuilder\u003C\u0027T1\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-untyped.html","title":"Farkle.Builder.Untyped","content":"Nonterminal"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections.html","title":"Farkle.Collections","content":"RangeMap \nRangeMap\u003C\u0027TKey, \u0027TValue\u003E \nRangeMapElement\u003C\u0027TKey, \u0027a\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar.html","title":"Farkle.Grammar","content":"DFASymbol \nEGT \nAdvanceMode \nDFAState \nDFASymbol \nEndingMode \nGrammar \nGrammarProperties \nGrammarSource \nGroup \nGroupEnd \nGroupStart \nIGrammarProvider \nLALRAction \nLALRState \nLALRSymbol \nNoise \nNonterminal \nProduction \nSymbols \nTerminal"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile.html","title":"Farkle.Grammar.EGTFile","content":"EGTFileException \nEntry"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io.html","title":"Farkle.IO","content":"CharStream \nCharStreamErrorReportingExtensions"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser.html","title":"Farkle.Parser","content":"LALRParser \nDefaultTokenizer \nExpectedSymbol \nParseErrorType \nParserError \nToken \nTokenizer \nTokenizerFactory"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-astmodule.html","title":"AST","content":"AST \n\n Functions to work with \u0060AST\u0060s.\n \nAST.simplify \nsimplify \nAST.toASCIITree \ntoASCIITree"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-astmodule.html#simplify","title":"AST.simplify","content":"AST.simplify \nsimplify \n\n Simplifies an \u0060AST\u0060 in the same fashion with GOLD Parser\u0027s \u0022trim reductions\u0022 option.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-astmodule.html#toASCIITree","title":"AST.toASCIITree","content":"AST.toASCIITree \ntoASCIITree \n\n Visualizes an \u0060AST\u0060 in the form of a textual \u0022parse tree\u0022.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-postprocessors.html","title":"PostProcessors","content":"PostProcessors \n\n Some reusable \u0060PostProcessor\u0060s.\n \nPostProcessors.syntaxCheck \nsyntaxCheck \nPostProcessors.ast \nast"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-postprocessors.html#syntaxCheck","title":"PostProcessors.syntaxCheck","content":"PostProcessors.syntaxCheck \nsyntaxCheck \n\n This post-processor does not return anything meaningful to its consumer.\n It is useful for checking the syntax of a string with respect to a grammar.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-postprocessors.html#ast","title":"PostProcessors.ast","content":"PostProcessors.ast \nast \n\n This post-processor creates a domain-ignorant \u0060AST\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html","title":"RuntimeFarkle","content":"RuntimeFarkle \n\n Functions to create and use \u0060RuntimeFarkle\u0060s.\n \nRuntimeFarkle.changePostProcessor \nchangePostProcessor \nRuntimeFarkle.cast \ncast \nRuntimeFarkle.changeTokenizer \nchangeTokenizer \nRuntimeFarkle.syntaxCheck \nsyntaxCheck \nRuntimeFarkle.create \ncreate \nRuntimeFarkle.build \nbuild \nRuntimeFarkle.buildUntyped \nbuildUntyped \nRuntimeFarkle.buildPrecompiled \nbuildPrecompiled \nRuntimeFarkle.buildPrecompiledUntyped \nbuildPrecompiledUntyped \nRuntimeFarkle.markForPrecompile \nmarkForPrecompile \nRuntimeFarkle.markForPrecompileU \nmarkForPrecompileU \nRuntimeFarkle.parseChars \nparseChars \nRuntimeFarkle.parseMemory \nparseMemory \nRuntimeFarkle.parseString \nparseString \nRuntimeFarkle.parseStream \nparseStream \nRuntimeFarkle.parseTextReader \nparseTextReader \nRuntimeFarkle.parseFile \nparseFile \nRuntimeFarkle.parse \nparse"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#changePostProcessor","title":"RuntimeFarkle.changePostProcessor","content":"RuntimeFarkle.changePostProcessor \nchangePostProcessor \n\n Changes the post-processor of a \u0060RuntimeFarkle\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#cast","title":"RuntimeFarkle.cast","content":"RuntimeFarkle.cast \ncast \n\n Changes the runtime Farkle\u0027s returning type\n to object, without changing its post-processor.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#changeTokenizer","title":"RuntimeFarkle.changeTokenizer","content":"RuntimeFarkle.changeTokenizer \nchangeTokenizer \n\n Changes the tokenizer that will be used by this runtime Farkle.\n This function accepts a function that takes a \u0060Grammar\u0060 and returns a \u0060Tokenizer\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#syntaxCheck","title":"RuntimeFarkle.syntaxCheck","content":"RuntimeFarkle.syntaxCheck \nsyntaxCheck \n\n Changes the post-processor of a runtime Farkle to a\n dummy one suitable for syntax-checking instead of parsing.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#create","title":"RuntimeFarkle.create","content":"RuntimeFarkle.create \ncreate \n\n Creates a \u0060RuntimeFarkle\u0060 from the given grammar and post-processor.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#build","title":"RuntimeFarkle.build","content":"RuntimeFarkle.build \nbuild \n\n Creates a \u0060RuntimeFarkle\u0060 from the given \u0060DesigntimeFarkle\u0026lt;\u0027T\u0026gt;\u0060.\n In case there is a problem with the grammar, the \u0060RuntimeFarkle\u0060 will\n fail every time it is used. If the designtime Farkle is marked for\n precompilation and a suitable precompiled grammar is found, it will be ignored.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#buildUntyped","title":"RuntimeFarkle.buildUntyped","content":"RuntimeFarkle.buildUntyped \nbuildUntyped \n\n Creates a syntax-checking \u0060RuntimeFarkle\u0060 from an untyped \u0060DesigntimeFarkle\u0060.\n No transformers or fusers from the designtime Farkle will be executed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#buildPrecompiled","title":"RuntimeFarkle.buildPrecompiled","content":"RuntimeFarkle.buildPrecompiled \nbuildPrecompiled \n\n Creates a \u0060RuntimeFarkle\u0060 from the given typed \u0060PrecompilableDesigntimeFarkle\u0060.\n In case the designtime Farkle has not been precompiled, the \u0060RuntimeFarkle\u0060 will\n fail every time it is used. The precompiler will run by installing the package\n \u0060Farkle.Tools.MSBuild\u0060. Learn more at https://teo-tsirpanis.github.io/Farkle/the-precompiler.html\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#buildPrecompiledUntyped","title":"RuntimeFarkle.buildPrecompiledUntyped","content":"RuntimeFarkle.buildPrecompiledUntyped \nbuildPrecompiledUntyped \n\n Creates a syntax-checking \u0060RuntimeFarkle\u0060 from the given untyped \u0060PrecompilableDesigntimeFarkle\u0060.\n In case the designtime Farkle has not been precompiled, the \u0060RuntimeFarkle\u0060 will\n fail every time it is used. The precompiler will run by installing the package\n \u0060Farkle.Tools.MSBuild\u0060. Learn more at https://teo-tsirpanis.github.io/Farkle/the-precompiler.html\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#markForPrecompile","title":"RuntimeFarkle.markForPrecompile","content":"RuntimeFarkle.markForPrecompile \nmarkForPrecompile \n\n Marks the given designtime as available to have its grammar\n precompiled ahead of time. Learn more, including usage restrictions\n at https://teo-tsirpanis.github.io/Farkle/the-precompiler.html\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#markForPrecompileU","title":"RuntimeFarkle.markForPrecompileU","content":"RuntimeFarkle.markForPrecompileU \nmarkForPrecompileU \n\n The untyped edition of \u0060markForPrecompile\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#parseChars","title":"RuntimeFarkle.parseChars","content":"RuntimeFarkle.parseChars \nparseChars \n\n Parses and post-processes a \u0060CharStream\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#parseMemory","title":"RuntimeFarkle.parseMemory","content":"RuntimeFarkle.parseMemory \nparseMemory \n\n Parses and post-processes a \u0060ReadOnlyMemory\u0060 of characters.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#parseString","title":"RuntimeFarkle.parseString","content":"RuntimeFarkle.parseString \nparseString \n\n Parses and post-processes a string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#parseStream","title":"RuntimeFarkle.parseStream","content":"RuntimeFarkle.parseStream \nparseStream \n\n Parses and post-processes a .NET \u0060Stream\u0060 with the\n given character encoding, which may be lazily read.\n Better use \u0060parseTextReader\u0060 instead.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#parseTextReader","title":"RuntimeFarkle.parseTextReader","content":"RuntimeFarkle.parseTextReader \nparseTextReader \n\n Parses and post-processes a .NET \u0060TextReader\u0060. Its content is lazily read.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#parseFile","title":"RuntimeFarkle.parseFile","content":"RuntimeFarkle.parseFile \nparseFile \n\n Parses and post-processes a file at the given path.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle.html#parse","title":"RuntimeFarkle.parse","content":"RuntimeFarkle.parse \nparse \n\n Parses and post-processes a string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-ast.html","title":"AST","content":"AST \n\n A domain-ignorant Abstract Syntax Tree that describes the output of a parser.\n \nAST.Content \nContent \nAST.Nonterminal \nNonterminal"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-ast.html#Content","title":"AST.Content","content":"AST.Content \nContent \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-ast.html#Nonterminal","title":"AST.Nonterminal","content":"AST.Nonterminal \nNonterminal \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-farkleerror.html","title":"FarkleError","content":"FarkleError \n\n A type signifying an error during the parsing process.\n \nFarkleError.ParseError \nParseError \nFarkleError.BuildError \nBuildError"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-farkleerror.html#ParseError","title":"FarkleError.ParseError","content":"FarkleError.ParseError \nParseError \n\n There was a parsing error.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-farkleerror.html#BuildError","title":"FarkleError.BuildError","content":"FarkleError.BuildError \nBuildError \n\n There had been errors while building the grammar.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-farkleexception.html","title":"FarkleException","content":"FarkleException \n\n The base class for all exceptions\n that might be thrown from Farkle.\n \nFarkleException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-farkleexception.html#\u0060\u0060.ctor\u0060\u0060","title":"FarkleException.\u0060\u0060.ctor\u0060\u0060","content":"FarkleException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-itransformer-1.html","title":"ITransformer\u003C\u0027TSymbol\u003E","content":"ITransformer\u003C\u0027TSymbol\u003E \nAn interface that transforms tokens from a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E.\n It is implemented by \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/postprocessor{tresult}\u0022\u003EPostProcessor{TResult}\u003C/a\u003Es. \nITransformer\u003C\u0027TSymbol\u003E.Transform \nTransform"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-itransformer-1.html#Transform","title":"ITransformer\u003C\u0027TSymbol\u003E.Transform","content":"ITransformer\u003C\u0027TSymbol\u003E.Transform \nTransform \nConverts a token into an object."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-itransformercontext.html","title":"ITransformerContext","content":"ITransformerContext \nA type that is passed to the transformers and\n provides additional information about the terminal being transformed. \nIt is explicitly implemented by \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E\n but casting it to this type is not recommended. Using this interface\n outside the scope of a transformer is not recommended either. \nITransformerContext.EndPosition \nEndPosition \nITransformerContext.ObjectStore \nObjectStore \nITransformerContext.StartPosition \nStartPosition"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-itransformercontext.html#EndPosition","title":"ITransformerContext.EndPosition","content":"ITransformerContext.EndPosition \nEndPosition \nThe position of the last character of the token. \nIn C# this property is shown as a read-write \u003Ccode\u003Eref\u003C/code\u003E due\n to compiler limitations. It will be changed to a \u003Ccode\u003Ereadonly ref\u003C/code\u003E\n at a future non-major release."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-itransformercontext.html#ObjectStore","title":"ITransformerContext.ObjectStore","content":"ITransformerContext.ObjectStore \nObjectStore \nAn associative collection of objects that\n can be indexed by a case-sensitive string. \nThe content of the object store is scoped to the\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E the tokens come from."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-itransformercontext.html#StartPosition","title":"ITransformerContext.StartPosition","content":"ITransformerContext.StartPosition \nStartPosition \nThe position of the first character of the token. \nIn C# this property is shown as a read-write \u003Ccode\u003Eref\u003C/code\u003E due\n to compiler limitations. It will be changed to a \u003Ccode\u003Ereadonly ref\u003C/code\u003E\n at a future non-major release."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserapplicationexception.html","title":"ParserApplicationException","content":"ParserApplicationException \nA parsing error that did not originate from\n the parser, but from user code during post-processing. \nExceptions of this type during post-processing\n will be specially treated by the runtime Farkle API\n as \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/parseerrortype.usererror\u0022\u003EUserError\u003C/a\u003Es.\n F# users can use the \u003Ccode\u003Eerror\u003C/code\u003E or \u003Ccode\u003Eerrorf\u003C/code\u003E functions\n in \u003Ccode\u003EFarkle.Builder\u003C/code\u003E. \nParserApplicationException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nParserApplicationException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nParserApplicationException.Position \nPosition"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserapplicationexception.html#\u0060\u0060.ctor\u0060\u0060","title":"ParserApplicationException.\u0060\u0060.ctor\u0060\u0060","content":"ParserApplicationException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n Creates an exception without a custom error position.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserapplicationexception.html#\u0060\u0060.ctor\u0060\u0060","title":"ParserApplicationException.\u0060\u0060.ctor\u0060\u0060","content":"ParserApplicationException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n Creates an exception with a custom error position.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserapplicationexception.html#Position","title":"ParserApplicationException.Position","content":"ParserApplicationException.Position \nPosition \n\n The optionally defined position of the error. If not set, it will\n default to the starting position of the token that was being created.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserapplicationexceptionwithposition.html","title":"ParserApplicationExceptionWithPosition","content":"ParserApplicationExceptionWithPosition \n \nParserApplicationExceptionWithPosition.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nParserApplicationExceptionWithPosition.Position \nPosition"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserapplicationexceptionwithposition.html#\u0060\u0060.ctor\u0060\u0060","title":"ParserApplicationExceptionWithPosition.\u0060\u0060.ctor\u0060\u0060","content":"ParserApplicationExceptionWithPosition.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserapplicationexceptionwithposition.html#Position","title":"ParserApplicationExceptionWithPosition.Position","content":"ParserApplicationExceptionWithPosition.Position \nPosition \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserexception.html","title":"ParserException","content":"ParserException \n\n An exception thrown by Farkle\u0027s parser on a snytax or lexical error.\n \nParserException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nParserException.Error \nError"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserexception.html#\u0060\u0060.ctor\u0060\u0060","title":"ParserException.\u0060\u0060.ctor\u0060\u0060","content":"ParserException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserexception.html#Error","title":"ParserException.Error","content":"ParserException.Error \nError \nThe \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parsererror.html\u0022\u003EParserError\u003C/a\u003E\n object this exception holds."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-position.html","title":"Position","content":"Position \n\n A point in 2D space with integer coordinates, suitable for the position of a character in a text.\n \nPosition.Advance \nAdvance \nPosition.Advance \nAdvance \nPosition.Create \nCreate \nPosition.Initial \nInitial \nPosition.Line \nLine \nPosition.Column \nColumn \nPosition.Index \nIndex"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-position.html#Advance","title":"Position.Advance","content":"Position.Advance \nAdvance \n\n Advances the position by a read-only span of characters and returns it.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-position.html#Advance","title":"Position.Advance","content":"Position.Advance \nAdvance \n\n Advances the position by one character and returns it.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-position.html#Create","title":"Position.Create","content":"Position.Create \nCreate \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-position.html#Initial","title":"Position.Initial","content":"Position.Initial \nInitial \n\n A \u0060Position\u0060 that points to the start of the text.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-position.html#Line","title":"Position.Line","content":"Position.Line \nLine \n\n The position\u0027s line.\n Numbering starts from 1.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-position.html#Column","title":"Position.Column","content":"Position.Column \nColumn \n\n The position\u0027s column.\n Numbering starts from 1.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-position.html#Index","title":"Position.Index","content":"Position.Index \nIndex \n\n The position\u0027s character index.\n Numbering starts from 0.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-postprocessor-1.html","title":"PostProcessor\u003C\u0027T\u003E","content":"PostProcessor\u003C\u0027T\u003E \nPost-processors convert strings of a grammar into more\n meaningful types for the library that uses the parser. \nPostProcessor\u003C\u0027T\u003E.Fuse \nFuse"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-postprocessor-1.html#Fuse","title":"PostProcessor\u003C\u0027T\u003E.Fuse","content":"PostProcessor\u003C\u0027T\u003E.Fuse \nFuse \nFuses the many members of a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-production.html\u0022\u003EProduction\u003C/a\u003E into one arbitrary object."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-postprocessorexception.html","title":"PostProcessorException","content":"PostProcessorException \n\n An exception thrown by Farkle when the post-processor throws\n another exception. That exception is wrapped to this one.\n \nPostProcessorException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nPostProcessorException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-postprocessorexception.html#\u0060\u0060.ctor\u0060\u0060","title":"PostProcessorException.\u0060\u0060.ctor\u0060\u0060","content":"PostProcessorException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-postprocessorexception.html#\u0060\u0060.ctor\u0060\u0060","title":"PostProcessorException.\u0060\u0060.ctor\u0060\u0060","content":"PostProcessorException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html","title":"RuntimeFarkle\u003C\u0027TResult\u003E","content":"RuntimeFarkle\u003C\u0027TResult\u003E \nA reusable parser and post-processor,\n created for a specific grammar, and returning\n a specific type of object that best describes\n an expression of the language of this grammar. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EIts parsing methods return an F# result\n type containing either the post-processed return\n type, or a type describing what did wrong and where.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EExceptions during post-processing (apart from\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserapplicationexception.html\u0022\u003EParserApplicationException\u003C/a\u003E) are thrown\n after being wrapped in a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-postprocessorexception.html\u0022\u003EPostProcessorException\u003C/a\u003E.\u003C/p\u003E \nRuntimeFarkle\u003C\u0027TResult\u003E.Cast \nCast \nRuntimeFarkle\u003C\u0027TResult\u003E.ChangePostProcessor \nChangePostProcessor \nRuntimeFarkle\u003C\u0027TResult\u003E.ChangeTokenizer \nChangeTokenizer \nRuntimeFarkle\u003C\u0027TResult\u003E.ChangeTokenizer \nChangeTokenizer \nRuntimeFarkle\u003C\u0027TResult\u003E.GetBuildErrorMessage \nGetBuildErrorMessage \nRuntimeFarkle\u003C\u0027TResult\u003E.GetBuildErrors \nGetBuildErrors \nRuntimeFarkle\u003C\u0027TResult\u003E.GetGrammar \nGetGrammar \nRuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nRuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nRuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nRuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nRuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nRuntimeFarkle\u003C\u0027TResult\u003E.ParseFile \nParseFile \nRuntimeFarkle\u003C\u0027TResult\u003E.SyntaxCheck \nSyntaxCheck \nRuntimeFarkle\u003C\u0027TResult\u003E.IsBuildSuccessful \nIsBuildSuccessful \nRuntimeFarkle\u003C\u0027TResult\u003E.Create \nCreate \nRuntimeFarkle\u003C\u0027TResult\u003E.Grammar \nGrammar \nRuntimeFarkle\u003C\u0027TResult\u003E.PostProcessor \nPostProcessor \nRuntimeFarkle\u003C\u0027TResult\u003E.TokenizerFactory \nTokenizerFactory"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#Cast","title":"RuntimeFarkle\u003C\u0027TResult\u003E.Cast","content":"RuntimeFarkle\u003C\u0027TResult\u003E.Cast \nCast \nChanges the runtime Farkle\u0027s returning type to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/object\u0022\u003EObject\u003C/a\u003E, without changing its post-processsor."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#ChangePostProcessor","title":"RuntimeFarkle\u003C\u0027TResult\u003E.ChangePostProcessor","content":"RuntimeFarkle\u003C\u0027TResult\u003E.ChangePostProcessor \nChangePostProcessor \nChanges the \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/postprocessor\u0022\u003EPostProcessor\u003C/a\u003E of this runtime Farkle."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#ChangeTokenizer","title":"RuntimeFarkle\u003C\u0027TResult\u003E.ChangeTokenizer","content":"RuntimeFarkle\u003C\u0027TResult\u003E.ChangeTokenizer \nChangeTokenizer \nChanges the \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizer.html\u0022\u003ETokenizer\u003C/a\u003E type this runtime Farkle will use. \nA new tokenizer will be created with each parse operation."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#ChangeTokenizer","title":"RuntimeFarkle\u003C\u0027TResult\u003E.ChangeTokenizer","content":"RuntimeFarkle\u003C\u0027TResult\u003E.ChangeTokenizer \nChangeTokenizer \nChanges the \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizerfactory.html\u0022\u003ETokenizerFactory\u003C/a\u003E of this runtime Farkle. \nA new tokenizer will be created with each parse operation."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#GetBuildErrorMessage","title":"RuntimeFarkle\u003C\u0027TResult\u003E.GetBuildErrorMessage","content":"RuntimeFarkle\u003C\u0027TResult\u003E.GetBuildErrorMessage \nGetBuildErrorMessage \n\n Returns a user-friendly error message that\n describes what had gone wrong while building,\n or an empty string if building had been successful.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#GetBuildErrors","title":"RuntimeFarkle\u003C\u0027TResult\u003E.GetBuildErrors","content":"RuntimeFarkle\u003C\u0027TResult\u003E.GetBuildErrors \nGetBuildErrors \n\n Returns a list of \u0060BuildError\u0060 objects that\n describe what had gone wrong while building, or returns\n an empty list if building had been successful.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#GetGrammar","title":"RuntimeFarkle\u003C\u0027TResult\u003E.GetGrammar","content":"RuntimeFarkle\u003C\u0027TResult\u003E.GetGrammar \nGetGrammar \nGets the \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html\u0022\u003EGrammar\u003C/a\u003E\n behind the \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/runtimefarkle{tresult}\u0022\u003ERuntimeFarkle{TResult}\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#Parse","title":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse","content":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nParses and post-processes a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.io.textreader\u0022\u003ETextReader\u003C/a\u003E. \nThe text reader\u0027s content will be lazily read."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#Parse","title":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse","content":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nParses and post-processes a\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.io.stream\u0022\u003EStream\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#Parse","title":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse","content":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nParses and post-processes a string."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#Parse","title":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse","content":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nParses and post-processes a\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/readonlymemory{char}\u0022\u003EReadOnlyMemory{Char}\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#Parse","title":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse","content":"RuntimeFarkle\u003C\u0027TResult\u003E.Parse \nParse \nParses and post-processes a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#ParseFile","title":"RuntimeFarkle\u003C\u0027TResult\u003E.ParseFile","content":"RuntimeFarkle\u003C\u0027TResult\u003E.ParseFile \nParseFile \nParses and post-processes a file. \nThe file\u0027s content will be lazily read."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#SyntaxCheck","title":"RuntimeFarkle\u003C\u0027TResult\u003E.SyntaxCheck","content":"RuntimeFarkle\u003C\u0027TResult\u003E.SyntaxCheck \nSyntaxCheck \nChanges the \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/postprocessor\u0022\u003EPostProcessor\u003C/a\u003E of this runtime Farkle to\n a dummy one that is useful for syntax-checking instead of parsing."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#IsBuildSuccessful","title":"RuntimeFarkle\u003C\u0027TResult\u003E.IsBuildSuccessful","content":"RuntimeFarkle\u003C\u0027TResult\u003E.IsBuildSuccessful \nIsBuildSuccessful \n\n Returns whether building was successful.\n If loaded from an EGT file, it will always return true.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#Create","title":"RuntimeFarkle\u003C\u0027TResult\u003E.Create","content":"RuntimeFarkle\u003C\u0027TResult\u003E.Create \nCreate \nCreates a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/runtimefarkle{tresult}\u0022\u003ERuntimeFarkle{TResult}\u003C/a\u003E from the given\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html\u0022\u003EGrammar\u003C/a\u003E and \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/postprocessor{tresult}\u0022\u003EPostProcessor{TResult}\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#Grammar","title":"RuntimeFarkle\u003C\u0027TResult\u003E.Grammar","content":"RuntimeFarkle\u003C\u0027TResult\u003E.Grammar \nGrammar \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#PostProcessor","title":"RuntimeFarkle\u003C\u0027TResult\u003E.PostProcessor","content":"RuntimeFarkle\u003C\u0027TResult\u003E.PostProcessor \nPostProcessor \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-runtimefarkle-1.html#TokenizerFactory","title":"RuntimeFarkle\u003C\u0027TResult\u003E.TokenizerFactory","content":"RuntimeFarkle\u003C\u0027TResult\u003E.TokenizerFactory \nTokenizerFactory \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-dfabuild.html","title":"DFABuild","content":"DFABuild \n\n Functions to generate Deterministic Finite Automata from \u0060Regex\u0060es.\n The algorithm is a modified edition of the one found at \u00A73.9.5 in\n \u0022Compilers: Principles, Techniques and Tools\u0022 by Aho, Lam, Sethi \u0026amp; Ullman.\n \nDFABuild.parseRegexString \nparseRegexString \nDFABuild.buildRegexesToDFAEx \nbuildRegexesToDFAEx \nDFABuild.buildRegexesToDFA \nbuildRegexesToDFA"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-dfabuild.html#parseRegexString","title":"DFABuild.parseRegexString","content":"DFABuild.parseRegexString \nparseRegexString \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-dfabuild.html#buildRegexesToDFAEx","title":"DFABuild.buildRegexesToDFAEx","content":"DFABuild.buildRegexesToDFAEx \nbuildRegexesToDFAEx \nBuilds a DFA that recignizes one of the given regexes."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-dfabuild.html#buildRegexesToDFA","title":"DFABuild.buildRegexesToDFA","content":"DFABuild.buildRegexesToDFA \nbuildRegexesToDFA \nBuilds a DFA that recignizes one of the given regexes."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html","title":"DesigntimeFarkle","content":"DesigntimeFarkle \n\n Functions to set metadata for designtime Farkles.\n With few exceptions, these functions will have to be applied to the topmost\n designtime Farkle that will get build, or they will have no effect.\n Designime Farkles that were applied the functions of this module must not\n be used with the original designtime Farkles in the same context; only\n one grammar symbol will be created, with undefined behavior.\n \nDesigntimeFarkle.withMetadata \nwithMetadata \nDesigntimeFarkle.withOperatorScope \nwithOperatorScope \nDesigntimeFarkle.cast \ncast \nDesigntimeFarkle.rename \nrename \nDesigntimeFarkle.caseSensitive \ncaseSensitive \nDesigntimeFarkle.autoWhitespace \nautoWhitespace \nDesigntimeFarkle.addNoiseSymbol \naddNoiseSymbol \nDesigntimeFarkle.addLineComment \naddLineComment \nDesigntimeFarkle.addBlockComment \naddBlockComment"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html#withMetadata","title":"DesigntimeFarkle.withMetadata","content":"DesigntimeFarkle.withMetadata \nwithMetadata \n\n Sets a \u0060GrammarMetadata\u0060 object to a designtime Farkle. Most\n other functions in this module are convenience wrappers over this function.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html#withOperatorScope","title":"DesigntimeFarkle.withOperatorScope","content":"DesigntimeFarkle.withOperatorScope \nwithOperatorScope \n\n Sets an \u0060OperatorScope\u0060 object to a designtime Farkle.\n This function can be applied in designtime Farkles that are not the\n topmost ones. Applying this function many times will discard the existing\n operator scope.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html#cast","title":"DesigntimeFarkle.cast","content":"DesigntimeFarkle.cast \ncast \n\n Converts an untyped designtime Farkle to a typed one that returns an object.\n The object the designtime Farkle this function will return is undefined.\n This function is no longer useful for applying metadata to untyped designtime Farkles.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html#rename","title":"DesigntimeFarkle.rename","content":"DesigntimeFarkle.rename \nrename \n\n Changes the name of a designtime Farkle. This function can be applied\n anywhere, not only to the topmost one, like with other metadata changes.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html#caseSensitive","title":"DesigntimeFarkle.caseSensitive","content":"DesigntimeFarkle.caseSensitive \ncaseSensitive \n\n Sets the \u0060CaseSensitive\u0060 field of a \u0060DesigntimeFarkle\u0060\u0027s metadata.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html#autoWhitespace","title":"DesigntimeFarkle.autoWhitespace","content":"DesigntimeFarkle.autoWhitespace \nautoWhitespace \n\n Sets the \u0060AutoWhitespace\u0060 field of a \u0060DesigntimeFarkle\u0060\u0027s metadata.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html#addNoiseSymbol","title":"DesigntimeFarkle.addNoiseSymbol","content":"DesigntimeFarkle.addNoiseSymbol \naddNoiseSymbol \n\n Adds a name-\u0060Regex\u0060 pair of noise symbols to the given \u0060DesigntimeFarkle\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html#addLineComment","title":"DesigntimeFarkle.addLineComment","content":"DesigntimeFarkle.addLineComment \naddLineComment \n\n Adds a line comment to the given \u0060DesigntimeFarkle\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklemodule.html#addBlockComment","title":"DesigntimeFarkle.addBlockComment","content":"DesigntimeFarkle.addBlockComment \naddBlockComment \n\n Adds a block comment to the given \u0060DesigntimeFarkle\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklebuild.html","title":"DesigntimeFarkleBuild","content":"DesigntimeFarkleBuild \n\n Functions to create \u0060Grammar\u0060s\n and \u0060PostProcessor\u0060s from \u0060DesigntimeFarkle\u0060s.\n \nDesigntimeFarkleBuild.createGrammarDefinition \ncreateGrammarDefinition \nDesigntimeFarkleBuild.buildGrammarOnlyEx \nbuildGrammarOnlyEx \nDesigntimeFarkleBuild.buildGrammarOnly \nbuildGrammarOnly \nDesigntimeFarkleBuild.buildEx \nbuildEx \nDesigntimeFarkleBuild.build \nbuild \nDesigntimeFarkleBuild.buildPostProcessorOnly \nbuildPostProcessorOnly"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklebuild.html#createGrammarDefinition","title":"DesigntimeFarkleBuild.createGrammarDefinition","content":"DesigntimeFarkleBuild.createGrammarDefinition \ncreateGrammarDefinition \n\n Creates a \u0060GrammarDefinition\u0060 from an untyped \u0060DesigntimeFarkle\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklebuild.html#buildGrammarOnlyEx","title":"DesigntimeFarkleBuild.buildGrammarOnlyEx","content":"DesigntimeFarkleBuild.buildGrammarOnlyEx \nbuildGrammarOnlyEx \n\n Creates a \u0060Grammar\u0060 from a \u0060GrammarDefinition\u0060. The operation\n can be cancelled, throwing an \u0060OperationCanceledException\u0060.\n It also accepts a \u0060BuildOptions\u0060 object, allowing further configuration.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklebuild.html#buildGrammarOnly","title":"DesigntimeFarkleBuild.buildGrammarOnly","content":"DesigntimeFarkleBuild.buildGrammarOnly \nbuildGrammarOnly \n\n Creates a \u0060Grammar\u0060 from a \u0060GrammarDefinition\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklebuild.html#buildEx","title":"DesigntimeFarkleBuild.buildEx","content":"DesigntimeFarkleBuild.buildEx \nbuildEx \n\n Creates a \u0060Grammar\u0060 and a \u0060PostProcessor\u0060 from a typed \u0060DesigntimeFarkle\u0060.\n The construction of the grammar may fail. In this case, the output of the\n post-processor is indeterminate. Using this function (and all others in this\n module) will always build a new grammar, even if a precompiled one is available.\n This function also allows the build to be cancelled and further configured.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklebuild.html#build","title":"DesigntimeFarkleBuild.build","content":"DesigntimeFarkleBuild.build \nbuild \n\n Creates a \u0060Grammar\u0060 and a \u0060PostProcessor\u0060 from a typed \u0060DesigntimeFarkle\u0060.\n The construction of the grammar may fail. In this case, the output of the\n post-processor is indeterminate. Using this function (and all others in this\n module) will always build a new grammar, even if a precompiled one is available.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarklebuild.html#buildPostProcessorOnly","title":"DesigntimeFarkleBuild.buildPostProcessorOnly","content":"DesigntimeFarkleBuild.buildPostProcessorOnly \nbuildPostProcessorOnly \n\n Creates a \u0060PostProcessor\u0060 from the given \u0060DesigntimeFarkle\u0060.\n By not creating a grammar, some potentially expensive steps are skipped.\n This function is useful only for some very limited scenarios, such as\n having many designtime Farkles with an identical grammar but different post-processors.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html","title":"DesigntimeFarkleOperators","content":"DesigntimeFarkleOperators \n\n F# operators to easily work with designtime Farkles and production builders.\n \nDesigntimeFarkleOperators.error \nerror \nDesigntimeFarkleOperators.errorf \nerrorf \nDesigntimeFarkleOperators.terminal \nterminal \nDesigntimeFarkleOperators.terminalU \nterminalU \nDesigntimeFarkleOperators.virtualTerminal \nvirtualTerminal \nDesigntimeFarkleOperators.literal \nliteral \nDesigntimeFarkleOperators.newline \nnewline \nDesigntimeFarkleOperators.nonterminal \nnonterminal \nDesigntimeFarkleOperators.nonterminalU \nnonterminalU \nDesigntimeFarkleOperators.(||=) \n(||=) \nDesigntimeFarkleOperators.(|||=) \n(|||=) \nDesigntimeFarkleOperators.(=%) \n(=%) \nDesigntimeFarkleOperators.asIs \nasIs \nDesigntimeFarkleOperators.prec \nprec \nDesigntimeFarkleOperators.empty \nempty \nDesigntimeFarkleOperators.(!%) \n(!%) \nDesigntimeFarkleOperators.(!\u0026) \n(!\u0026) \nDesigntimeFarkleOperators.(!@) \n(!@) \nDesigntimeFarkleOperators.(|\u003E\u003E) \n(|\u003E\u003E) \nDesigntimeFarkleOperators.manyCollection \nmanyCollection \nDesigntimeFarkleOperators.manyCollection1 \nmanyCollection1 \nDesigntimeFarkleOperators.many \nmany \nDesigntimeFarkleOperators.many1 \nmany1 \nDesigntimeFarkleOperators.sepByCollection1 \nsepByCollection1 \nDesigntimeFarkleOperators.sepByCollection \nsepByCollection \nDesigntimeFarkleOperators.sepBy1 \nsepBy1 \nDesigntimeFarkleOperators.sepBy \nsepBy \nDesigntimeFarkleOperators.opt \nopt"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#error","title":"DesigntimeFarkleOperators.error","content":"DesigntimeFarkleOperators.error \nerror \n\n Raises an error that happened during the parsing process.\n In contrast with raising an exception, these errors are caught\n by the \u0060RuntimeFarkle\u0060 API and track their position.\n Use this function when the error might occur under normal circumstances\n (such as an unknown identifier name in a programming language).\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#errorf","title":"DesigntimeFarkleOperators.errorf","content":"DesigntimeFarkleOperators.errorf \nerrorf \n\n An edition of \u0060error\u0060 that supports formatted strings.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#terminal","title":"DesigntimeFarkleOperators.terminal","content":"DesigntimeFarkleOperators.terminal \nterminal \n\n Creates a terminal with the given name, specified by the given \u0060Regex\u0060.\n Its content will be post-processed by the given \u0060T\u0060 delegate.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#terminalU","title":"DesigntimeFarkleOperators.terminalU","content":"DesigntimeFarkleOperators.terminalU \nterminalU \n\n Creates a terminal with the given name,\n specified by the given \u0060Regex\u0060,\n but not returning anything.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#virtualTerminal","title":"DesigntimeFarkleOperators.virtualTerminal","content":"DesigntimeFarkleOperators.virtualTerminal \nvirtualTerminal \n\n An alias for the \u0060Terminal.Virtual\u0060 function.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#literal","title":"DesigntimeFarkleOperators.literal","content":"DesigntimeFarkleOperators.literal \nliteral \n\n An alias for the \u0060Terminal.Literal\u0060 function.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#newline","title":"DesigntimeFarkleOperators.newline","content":"DesigntimeFarkleOperators.newline \nnewline \n\n An alias for \u0060Terminal.NewLine\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#nonterminal","title":"DesigntimeFarkleOperators.nonterminal","content":"DesigntimeFarkleOperators.nonterminal \nnonterminal \n\n Creates a \u0060Nonterminal\u0060 whose productions must be\n later set with \u0060SetProductions\u0060, or it will raise an\n error on building. Useful for recursive productions.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#nonterminalU","title":"DesigntimeFarkleOperators.nonterminalU","content":"DesigntimeFarkleOperators.nonterminalU \nnonterminalU \n\n Creates an \u0060Untyped.Nonterminal\u0060 whose productions must be\n later set with \u0060SetProductions\u0060, or it will raise an\n error on building. Useful for recursive productions.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#(||=)","title":"DesigntimeFarkleOperators.(||=)","content":"DesigntimeFarkleOperators.(||=) \n(||=) \n\n Creates a \u0060DesigntimeFarkle\u0026lt;\u0027T\u0026gt;\u0060 that represents\n a nonterminal with the given name and productions.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#(|||=)","title":"DesigntimeFarkleOperators.(|||=)","content":"DesigntimeFarkleOperators.(|||=) \n(|||=) \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#(=%)","title":"DesigntimeFarkleOperators.(=%)","content":"DesigntimeFarkleOperators.(=%) \n(=%) \n\n \u0060ProductionBuilder.FinishConstant\u0060 as an operator.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#asIs","title":"DesigntimeFarkleOperators.asIs","content":"DesigntimeFarkleOperators.asIs \nasIs \n\n An alias for \u0060\u0060ProductionBuilder\u00601.AsIs\u0060\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#prec","title":"DesigntimeFarkleOperators.prec","content":"DesigntimeFarkleOperators.prec \nprec \n\n An alias for the \u0060WithPrecedence\u0060 method of production builders.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#empty","title":"DesigntimeFarkleOperators.empty","content":"DesigntimeFarkleOperators.empty \nempty \n\n An alias for \u0060ProductionBuilder.Empty\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#(!%)","title":"DesigntimeFarkleOperators.(!%)","content":"DesigntimeFarkleOperators.(!%) \n(!%) \n\n Creates a production builder with one non-significant \u0060DesigntimeFarkle\u0060.\n This function is useful to start building a \u0060Production\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#(!\u0026)","title":"DesigntimeFarkleOperators.(!\u0026)","content":"DesigntimeFarkleOperators.(!\u0026) \n(!\u0026) \n\n Creates a production builder with one non-significant string literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#(!@)","title":"DesigntimeFarkleOperators.(!@)","content":"DesigntimeFarkleOperators.(!@) \n(!@) \n\n Creates a production builder with one significant \u0060DesigntimeFarkle\u0026lt;\u0027T\u0026gt;\u0060.\n This function is useful to start building a \u0060Production\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#(|\u003E\u003E)","title":"DesigntimeFarkleOperators.(|\u003E\u003E)","content":"DesigntimeFarkleOperators.(|\u003E\u003E) \n(|\u003E\u003E) \n\n Creates a new \u0060DesigntimeFarkle\u0026lt;\u0027T\u0026gt;\u0060 that transforms\n the output of the given one with the given function.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#manyCollection","title":"DesigntimeFarkleOperators.manyCollection","content":"DesigntimeFarkleOperators.manyCollection \nmanyCollection \n\n Creates a designtime Farkle that recognizes many occurrences\n of the given one and returns them in any collection type.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#manyCollection1","title":"DesigntimeFarkleOperators.manyCollection1","content":"DesigntimeFarkleOperators.manyCollection1 \nmanyCollection1 \n\n Creates a designtime Farkle that recognizes more than one occurrences\n of the given one and returns them in any collection type.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#many","title":"DesigntimeFarkleOperators.many","content":"DesigntimeFarkleOperators.many \nmany \n\n Creates a designtime Farkle that recognizes many\n occurrences of the given one and returns them in a list.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#many1","title":"DesigntimeFarkleOperators.many1","content":"DesigntimeFarkleOperators.many1 \nmany1 \n\n Creates a designtime Farkle that recognizes more than one\n occurrences of the given one and returns them in a list.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#sepByCollection1","title":"DesigntimeFarkleOperators.sepByCollection1","content":"DesigntimeFarkleOperators.sepByCollection1 \nsepByCollection1 \n\n Creates a designtime Farkle that recognizes more than one occurrences\n of \u0060df\u0060 separated by \u0060sep\u0060 and returns them in any collection type.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#sepByCollection","title":"DesigntimeFarkleOperators.sepByCollection","content":"DesigntimeFarkleOperators.sepByCollection \nsepByCollection \n\n Creates a designtime Farkle that recognizes many occurrences of\n \u0060df\u0060 separated by \u0060sep\u0060 and returns them in any collection type.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#sepBy1","title":"DesigntimeFarkleOperators.sepBy1","content":"DesigntimeFarkleOperators.sepBy1 \nsepBy1 \n\n Creates a designtime Farkle that recognizes more than one\n occurrences of \u0060df\u0060 separated by \u0060sep\u0060 and returns them in a list.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#sepBy","title":"DesigntimeFarkleOperators.sepBy","content":"DesigntimeFarkleOperators.sepBy \nsepBy \n\n Creates a designtime Farkle that recognizes many occurrences\n of \u0060df\u0060 separated by \u0060sep\u0060 and returns them in a list.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleoperators.html#opt","title":"DesigntimeFarkleOperators.opt","content":"DesigntimeFarkleOperators.opt \nopt \n\n Creates a \u0060DesigntimeFarkle\u0026lt;\u0027T\u0026gt;\u0060 that recognizes \u0060df\u0060,\n which might not be found. In this case, the resulting\n value is \u0060None\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrbuild.html","title":"LALRBuild","content":"LALRBuild \n\n Functions to generate LALR state tables from a grammar.\n \nLALRBuild.buildProductionsToLALRStatesEx \nbuildProductionsToLALRStatesEx \nLALRBuild.buildProductionsToLALRStates \nbuildProductionsToLALRStates"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrbuild.html#buildProductionsToLALRStatesEx","title":"LALRBuild.buildProductionsToLALRStatesEx","content":"LALRBuild.buildProductionsToLALRStatesEx \nbuildProductionsToLALRStatesEx \nBuilds an LALR parsing table."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrbuild.html#buildProductionsToLALRStates","title":"LALRBuild.buildProductionsToLALRStates","content":"LALRBuild.buildProductionsToLALRStates \nbuildProductionsToLALRStates \nBuilds an LALR parsing table."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html","title":"PredefinedSets","content":"PredefinedSets \n\n Some common character sets that were imported from GOLD Parser.\n \nPredefinedSets.HT \nHT \nPredefinedSets.LF \nLF \nPredefinedSets.VT \nVT \nPredefinedSets.FF \nFF \nPredefinedSets.CR \nCR \nPredefinedSets.Space \nSpace \nPredefinedSets.NBSP \nNBSP \nPredefinedSets.EuroSign \nEuroSign \nPredefinedSets.Whitespace \nWhitespace \nPredefinedSets.Letter \nLetter \nPredefinedSets.LetterExtended \nLetterExtended \nPredefinedSets.AllLatin \nAllLatin \nPredefinedSets.Number \nNumber \nPredefinedSets.AlphaNumeric \nAlphaNumeric \nPredefinedSets.Printable \nPrintable \nPredefinedSets.PrintableExtended \nPrintableExtended \nPredefinedSets.BasicLatin \nBasicLatin \nPredefinedSets.Latin1Supplement \nLatin1Supplement \nPredefinedSets.LatinExtendedA \nLatinExtendedA \nPredefinedSets.LatinExtendedB \nLatinExtendedB \nPredefinedSets.IPAExtensions \nIPAExtensions \nPredefinedSets.SpacingModifierLetters \nSpacingModifierLetters \nPredefinedSets.CombiningDiacriticalMarks \nCombiningDiacriticalMarks \nPredefinedSets.GreekAndCoptic \nGreekAndCoptic \nPredefinedSets.Cyrillic \nCyrillic \nPredefinedSets.CyrillicSupplement \nCyrillicSupplement \nPredefinedSets.Armenian \nArmenian \nPredefinedSets.Hebrew \nHebrew \nPredefinedSets.Arabic \nArabic \nPredefinedSets.Syriac \nSyriac \nPredefinedSets.ArabicSupplement \nArabicSupplement \nPredefinedSets.Thaana \nThaana \nPredefinedSets.NKo \nNKo \nPredefinedSets.Samaritan \nSamaritan \nPredefinedSets.Devanagari \nDevanagari \nPredefinedSets.Bengali \nBengali \nPredefinedSets.Gurmukhi \nGurmukhi \nPredefinedSets.Gujarati \nGujarati \nPredefinedSets.Oriya \nOriya \nPredefinedSets.Tamil \nTamil \nPredefinedSets.Telugu \nTelugu \nPredefinedSets.Kannada \nKannada \nPredefinedSets.Malayalam \nMalayalam \nPredefinedSets.Sinhala \nSinhala \nPredefinedSets.Thai \nThai \nPredefinedSets.Lao \nLao \nPredefinedSets.Tibetan \nTibetan \nPredefinedSets.Myanmar \nMyanmar \nPredefinedSets.Georgian \nGeorgian \nPredefinedSets.HangulJamo \nHangulJamo \nPredefinedSets.Ethiopic \nEthiopic \nPredefinedSets.EthiopicSupplement \nEthiopicSupplement \nPredefinedSets.Cherokee \nCherokee \nPredefinedSets.UnifiedCanadianAboriginalSyllabics \nUnifiedCanadianAboriginalSyllabics \nPredefinedSets.Ogham \nOgham \nPredefinedSets.Runic \nRunic \nPredefinedSets.Tagalog \nTagalog \nPredefinedSets.Hanunoo \nHanunoo \nPredefinedSets.Buhid \nBuhid \nPredefinedSets.Tagbanwa \nTagbanwa \nPredefinedSets.Khmer \nKhmer \nPredefinedSets.Mongolian \nMongolian \nPredefinedSets.UnifiedCanadianAboriginalSyllabicsExtended \nUnifiedCanadianAboriginalSyllabicsExtended \nPredefinedSets.Limbu \nLimbu \nPredefinedSets.TaiLe \nTaiLe \nPredefinedSets.NewTaiLue \nNewTaiLue \nPredefinedSets.KhmerSymbols \nKhmerSymbols \nPredefinedSets.Buginese \nBuginese \nPredefinedSets.TaiTham \nTaiTham \nPredefinedSets.Balinese \nBalinese \nPredefinedSets.Sundanese \nSundanese \nPredefinedSets.Lepcha \nLepcha \nPredefinedSets.OlChiki \nOlChiki \nPredefinedSets.VedicExtensions \nVedicExtensions \nPredefinedSets.PhoneticExtensions \nPhoneticExtensions \nPredefinedSets.PhoneticExtensionsSupplement \nPhoneticExtensionsSupplement \nPredefinedSets.CombiningDiacriticalMarksSupplement \nCombiningDiacriticalMarksSupplement \nPredefinedSets.LatinExtendedAdditional \nLatinExtendedAdditional \nPredefinedSets.GreekExtended \nGreekExtended \nPredefinedSets.GeneralPunctuation \nGeneralPunctuation \nPredefinedSets.SuperscriptsAndSubscripts \nSuperscriptsAndSubscripts \nPredefinedSets.CurrencySymbols \nCurrencySymbols \nPredefinedSets.CombiningDiacriticalMarksForSymbols \nCombiningDiacriticalMarksForSymbols \nPredefinedSets.LetterlikeSymbols \nLetterlikeSymbols \nPredefinedSets.NumberForms \nNumberForms \nPredefinedSets.Arrows \nArrows \nPredefinedSets.MathematicalOperators \nMathematicalOperators \nPredefinedSets.MiscellaneousTechnical \nMiscellaneousTechnical \nPredefinedSets.ControlPictures \nControlPictures \nPredefinedSets.OpticalCharacterRecognition \nOpticalCharacterRecognition \nPredefinedSets.EnclosedAlphanumerics \nEnclosedAlphanumerics \nPredefinedSets.BoxDrawing \nBoxDrawing \nPredefinedSets.BlockElements \nBlockElements \nPredefinedSets.GeometricShapes \nGeometricShapes \nPredefinedSets.MiscellaneousSymbols \nMiscellaneousSymbols \nPredefinedSets.Dingbats \nDingbats \nPredefinedSets.MiscellaneousMathematicalSymbolsA \nMiscellaneousMathematicalSymbolsA \nPredefinedSets.SupplementalArrowsA \nSupplementalArrowsA \nPredefinedSets.BraillePatterns \nBraillePatterns \nPredefinedSets.SupplementalArrowsB \nSupplementalArrowsB \nPredefinedSets.MiscellaneousMathematicalSymbolsB \nMiscellaneousMathematicalSymbolsB \nPredefinedSets.SupplementalMathematicalOperators \nSupplementalMathematicalOperators \nPredefinedSets.MiscellaneousSymbolsAndArrows \nMiscellaneousSymbolsAndArrows \nPredefinedSets.Glagolitic \nGlagolitic \nPredefinedSets.LatinExtendedC \nLatinExtendedC \nPredefinedSets.Coptic \nCoptic \nPredefinedSets.GeorgianSupplement \nGeorgianSupplement \nPredefinedSets.Tifinagh \nTifinagh \nPredefinedSets.EthiopicExtended \nEthiopicExtended \nPredefinedSets.CyrillicExtendedA \nCyrillicExtendedA \nPredefinedSets.SupplementalPunctuation \nSupplementalPunctuation \nPredefinedSets.CJKRadicalsSupplement \nCJKRadicalsSupplement \nPredefinedSets.KangxiRadicals \nKangxiRadicals \nPredefinedSets.IdeographicDescriptionCharacters \nIdeographicDescriptionCharacters \nPredefinedSets.CJKSymbolsAndPunctuation \nCJKSymbolsAndPunctuation \nPredefinedSets.Hiragana \nHiragana \nPredefinedSets.Katakana \nKatakana \nPredefinedSets.Bopomofo \nBopomofo \nPredefinedSets.HangulCompatibilityJamo \nHangulCompatibilityJamo \nPredefinedSets.Kanbun \nKanbun \nPredefinedSets.BopomofoExtended \nBopomofoExtended \nPredefinedSets.CJKStrokes \nCJKStrokes \nPredefinedSets.KatakanaPhoneticExtensions \nKatakanaPhoneticExtensions \nPredefinedSets.EnclosedCJKLettersAndMonths \nEnclosedCJKLettersAndMonths \nPredefinedSets.CJKCompatibility \nCJKCompatibility \nPredefinedSets.CJKUnifiedIdeographsExtensionA \nCJKUnifiedIdeographsExtensionA \nPredefinedSets.YijingHexagramSymbols \nYijingHexagramSymbols \nPredefinedSets.CJKUnifiedIdeographs \nCJKUnifiedIdeographs \nPredefinedSets.YiSyllables \nYiSyllables \nPredefinedSets.YiRadicals \nYiRadicals \nPredefinedSets.Lisu \nLisu \nPredefinedSets.Vai \nVai \nPredefinedSets.CyrillicExtendedB \nCyrillicExtendedB \nPredefinedSets.Bamum \nBamum \nPredefinedSets.ModifierToneLetters \nModifierToneLetters \nPredefinedSets.LatinExtendedD \nLatinExtendedD \nPredefinedSets.SylotiNagri \nSylotiNagri \nPredefinedSets.CommonIndicNumberForms \nCommonIndicNumberForms \nPredefinedSets.PhagsPa \nPhagsPa \nPredefinedSets.Saurashtra \nSaurashtra \nPredefinedSets.DevanagariExtended \nDevanagariExtended \nPredefinedSets.KayahLi \nKayahLi \nPredefinedSets.Rejang \nRejang \nPredefinedSets.HangulJamoExtendedA \nHangulJamoExtendedA \nPredefinedSets.Javanese \nJavanese \nPredefinedSets.Cham \nCham \nPredefinedSets.MyanmarExtendedA \nMyanmarExtendedA \nPredefinedSets.TaiViet \nTaiViet \nPredefinedSets.MeeteiMayek \nMeeteiMayek \nPredefinedSets.HangulSyllables \nHangulSyllables \nPredefinedSets.HangulJamoExtendedB \nHangulJamoExtendedB \nPredefinedSets.PrivateUseArea \nPrivateUseArea \nPredefinedSets.CJKCompatibilityIdeographs \nCJKCompatibilityIdeographs \nPredefinedSets.AlphabeticPresentationForms \nAlphabeticPresentationForms \nPredefinedSets.ArabicPresentationFormsA \nArabicPresentationFormsA \nPredefinedSets.VariationSelectors \nVariationSelectors \nPredefinedSets.VerticalForms \nVerticalForms \nPredefinedSets.CombiningHalfMarks \nCombiningHalfMarks \nPredefinedSets.CJKCompatibilityForms \nCJKCompatibilityForms \nPredefinedSets.SmallFormVariants \nSmallFormVariants \nPredefinedSets.ArabicPresentationFormsB \nArabicPresentationFormsB \nPredefinedSets.HalfwidthAndFullwidthForms \nHalfwidthAndFullwidthForms \nPredefinedSets.ANSIMapped \nANSIMapped \nPredefinedSets.ANSIPrintable \nANSIPrintable \nPredefinedSets.AllValid \nAllValid \nPredefinedSets.AllPrintable \nAllPrintable \nPredefinedSets.AllLetters \nAllLetters \nPredefinedSets.LS \nLS \nPredefinedSets.PS \nPS \nPredefinedSets.AllSpace \nAllSpace \nPredefinedSets.AllNewline \nAllNewline \nPredefinedSets.AllWhitespace \nAllWhitespace \nPredefinedSets.ControlCodes \nControlCodes \nPredefinedSets.Formatting \nFormatting"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#HT","title":"PredefinedSets.HT","content":"PredefinedSets.HT \nHT \n\n Horizontal Tab\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#LF","title":"PredefinedSets.LF","content":"PredefinedSets.LF \nLF \n\n Line Feed\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#VT","title":"PredefinedSets.VT","content":"PredefinedSets.VT \nVT \n\n Vertical Tab\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#FF","title":"PredefinedSets.FF","content":"PredefinedSets.FF \nFF \n\n Form Feed (new page)\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CR","title":"PredefinedSets.CR","content":"PredefinedSets.CR \nCR \n\n Carriage Return\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Space","title":"PredefinedSets.Space","content":"PredefinedSets.Space \nSpace \n\n Common space character\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#NBSP","title":"PredefinedSets.NBSP","content":"PredefinedSets.NBSP \nNBSP \n\n No-break Space\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#EuroSign","title":"PredefinedSets.EuroSign","content":"PredefinedSets.EuroSign \nEuroSign \n\n Currency sign for the European Monetary Union\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Whitespace","title":"PredefinedSets.Whitespace","content":"PredefinedSets.Whitespace \nWhitespace \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Letter","title":"PredefinedSets.Letter","content":"PredefinedSets.Letter \nLetter \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#LetterExtended","title":"PredefinedSets.LetterExtended","content":"PredefinedSets.LetterExtended \nLetterExtended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#AllLatin","title":"PredefinedSets.AllLatin","content":"PredefinedSets.AllLatin \nAllLatin \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Number","title":"PredefinedSets.Number","content":"PredefinedSets.Number \nNumber \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#AlphaNumeric","title":"PredefinedSets.AlphaNumeric","content":"PredefinedSets.AlphaNumeric \nAlphaNumeric \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Printable","title":"PredefinedSets.Printable","content":"PredefinedSets.Printable \nPrintable \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#PrintableExtended","title":"PredefinedSets.PrintableExtended","content":"PredefinedSets.PrintableExtended \nPrintableExtended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#BasicLatin","title":"PredefinedSets.BasicLatin","content":"PredefinedSets.BasicLatin \nBasicLatin \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Latin1Supplement","title":"PredefinedSets.Latin1Supplement","content":"PredefinedSets.Latin1Supplement \nLatin1Supplement \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#LatinExtendedA","title":"PredefinedSets.LatinExtendedA","content":"PredefinedSets.LatinExtendedA \nLatinExtendedA \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#LatinExtendedB","title":"PredefinedSets.LatinExtendedB","content":"PredefinedSets.LatinExtendedB \nLatinExtendedB \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#IPAExtensions","title":"PredefinedSets.IPAExtensions","content":"PredefinedSets.IPAExtensions \nIPAExtensions \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#SpacingModifierLetters","title":"PredefinedSets.SpacingModifierLetters","content":"PredefinedSets.SpacingModifierLetters \nSpacingModifierLetters \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CombiningDiacriticalMarks","title":"PredefinedSets.CombiningDiacriticalMarks","content":"PredefinedSets.CombiningDiacriticalMarks \nCombiningDiacriticalMarks \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#GreekAndCoptic","title":"PredefinedSets.GreekAndCoptic","content":"PredefinedSets.GreekAndCoptic \nGreekAndCoptic \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Cyrillic","title":"PredefinedSets.Cyrillic","content":"PredefinedSets.Cyrillic \nCyrillic \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CyrillicSupplement","title":"PredefinedSets.CyrillicSupplement","content":"PredefinedSets.CyrillicSupplement \nCyrillicSupplement \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Armenian","title":"PredefinedSets.Armenian","content":"PredefinedSets.Armenian \nArmenian \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Hebrew","title":"PredefinedSets.Hebrew","content":"PredefinedSets.Hebrew \nHebrew \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Arabic","title":"PredefinedSets.Arabic","content":"PredefinedSets.Arabic \nArabic \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Syriac","title":"PredefinedSets.Syriac","content":"PredefinedSets.Syriac \nSyriac \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#ArabicSupplement","title":"PredefinedSets.ArabicSupplement","content":"PredefinedSets.ArabicSupplement \nArabicSupplement \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Thaana","title":"PredefinedSets.Thaana","content":"PredefinedSets.Thaana \nThaana \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#NKo","title":"PredefinedSets.NKo","content":"PredefinedSets.NKo \nNKo \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Samaritan","title":"PredefinedSets.Samaritan","content":"PredefinedSets.Samaritan \nSamaritan \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Devanagari","title":"PredefinedSets.Devanagari","content":"PredefinedSets.Devanagari \nDevanagari \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Bengali","title":"PredefinedSets.Bengali","content":"PredefinedSets.Bengali \nBengali \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Gurmukhi","title":"PredefinedSets.Gurmukhi","content":"PredefinedSets.Gurmukhi \nGurmukhi \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Gujarati","title":"PredefinedSets.Gujarati","content":"PredefinedSets.Gujarati \nGujarati \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Oriya","title":"PredefinedSets.Oriya","content":"PredefinedSets.Oriya \nOriya \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Tamil","title":"PredefinedSets.Tamil","content":"PredefinedSets.Tamil \nTamil \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Telugu","title":"PredefinedSets.Telugu","content":"PredefinedSets.Telugu \nTelugu \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Kannada","title":"PredefinedSets.Kannada","content":"PredefinedSets.Kannada \nKannada \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Malayalam","title":"PredefinedSets.Malayalam","content":"PredefinedSets.Malayalam \nMalayalam \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Sinhala","title":"PredefinedSets.Sinhala","content":"PredefinedSets.Sinhala \nSinhala \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Thai","title":"PredefinedSets.Thai","content":"PredefinedSets.Thai \nThai \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Lao","title":"PredefinedSets.Lao","content":"PredefinedSets.Lao \nLao \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Tibetan","title":"PredefinedSets.Tibetan","content":"PredefinedSets.Tibetan \nTibetan \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Myanmar","title":"PredefinedSets.Myanmar","content":"PredefinedSets.Myanmar \nMyanmar \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Georgian","title":"PredefinedSets.Georgian","content":"PredefinedSets.Georgian \nGeorgian \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#HangulJamo","title":"PredefinedSets.HangulJamo","content":"PredefinedSets.HangulJamo \nHangulJamo \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Ethiopic","title":"PredefinedSets.Ethiopic","content":"PredefinedSets.Ethiopic \nEthiopic \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#EthiopicSupplement","title":"PredefinedSets.EthiopicSupplement","content":"PredefinedSets.EthiopicSupplement \nEthiopicSupplement \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Cherokee","title":"PredefinedSets.Cherokee","content":"PredefinedSets.Cherokee \nCherokee \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#UnifiedCanadianAboriginalSyllabics","title":"PredefinedSets.UnifiedCanadianAboriginalSyllabics","content":"PredefinedSets.UnifiedCanadianAboriginalSyllabics \nUnifiedCanadianAboriginalSyllabics \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Ogham","title":"PredefinedSets.Ogham","content":"PredefinedSets.Ogham \nOgham \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Runic","title":"PredefinedSets.Runic","content":"PredefinedSets.Runic \nRunic \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Tagalog","title":"PredefinedSets.Tagalog","content":"PredefinedSets.Tagalog \nTagalog \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Hanunoo","title":"PredefinedSets.Hanunoo","content":"PredefinedSets.Hanunoo \nHanunoo \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Buhid","title":"PredefinedSets.Buhid","content":"PredefinedSets.Buhid \nBuhid \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Tagbanwa","title":"PredefinedSets.Tagbanwa","content":"PredefinedSets.Tagbanwa \nTagbanwa \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Khmer","title":"PredefinedSets.Khmer","content":"PredefinedSets.Khmer \nKhmer \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Mongolian","title":"PredefinedSets.Mongolian","content":"PredefinedSets.Mongolian \nMongolian \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#UnifiedCanadianAboriginalSyllabicsExtended","title":"PredefinedSets.UnifiedCanadianAboriginalSyllabicsExtended","content":"PredefinedSets.UnifiedCanadianAboriginalSyllabicsExtended \nUnifiedCanadianAboriginalSyllabicsExtended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Limbu","title":"PredefinedSets.Limbu","content":"PredefinedSets.Limbu \nLimbu \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#TaiLe","title":"PredefinedSets.TaiLe","content":"PredefinedSets.TaiLe \nTaiLe \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#NewTaiLue","title":"PredefinedSets.NewTaiLue","content":"PredefinedSets.NewTaiLue \nNewTaiLue \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#KhmerSymbols","title":"PredefinedSets.KhmerSymbols","content":"PredefinedSets.KhmerSymbols \nKhmerSymbols \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Buginese","title":"PredefinedSets.Buginese","content":"PredefinedSets.Buginese \nBuginese \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#TaiTham","title":"PredefinedSets.TaiTham","content":"PredefinedSets.TaiTham \nTaiTham \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Balinese","title":"PredefinedSets.Balinese","content":"PredefinedSets.Balinese \nBalinese \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Sundanese","title":"PredefinedSets.Sundanese","content":"PredefinedSets.Sundanese \nSundanese \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Lepcha","title":"PredefinedSets.Lepcha","content":"PredefinedSets.Lepcha \nLepcha \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#OlChiki","title":"PredefinedSets.OlChiki","content":"PredefinedSets.OlChiki \nOlChiki \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#VedicExtensions","title":"PredefinedSets.VedicExtensions","content":"PredefinedSets.VedicExtensions \nVedicExtensions \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#PhoneticExtensions","title":"PredefinedSets.PhoneticExtensions","content":"PredefinedSets.PhoneticExtensions \nPhoneticExtensions \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#PhoneticExtensionsSupplement","title":"PredefinedSets.PhoneticExtensionsSupplement","content":"PredefinedSets.PhoneticExtensionsSupplement \nPhoneticExtensionsSupplement \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CombiningDiacriticalMarksSupplement","title":"PredefinedSets.CombiningDiacriticalMarksSupplement","content":"PredefinedSets.CombiningDiacriticalMarksSupplement \nCombiningDiacriticalMarksSupplement \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#LatinExtendedAdditional","title":"PredefinedSets.LatinExtendedAdditional","content":"PredefinedSets.LatinExtendedAdditional \nLatinExtendedAdditional \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#GreekExtended","title":"PredefinedSets.GreekExtended","content":"PredefinedSets.GreekExtended \nGreekExtended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#GeneralPunctuation","title":"PredefinedSets.GeneralPunctuation","content":"PredefinedSets.GeneralPunctuation \nGeneralPunctuation \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#SuperscriptsAndSubscripts","title":"PredefinedSets.SuperscriptsAndSubscripts","content":"PredefinedSets.SuperscriptsAndSubscripts \nSuperscriptsAndSubscripts \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CurrencySymbols","title":"PredefinedSets.CurrencySymbols","content":"PredefinedSets.CurrencySymbols \nCurrencySymbols \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CombiningDiacriticalMarksForSymbols","title":"PredefinedSets.CombiningDiacriticalMarksForSymbols","content":"PredefinedSets.CombiningDiacriticalMarksForSymbols \nCombiningDiacriticalMarksForSymbols \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#LetterlikeSymbols","title":"PredefinedSets.LetterlikeSymbols","content":"PredefinedSets.LetterlikeSymbols \nLetterlikeSymbols \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#NumberForms","title":"PredefinedSets.NumberForms","content":"PredefinedSets.NumberForms \nNumberForms \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Arrows","title":"PredefinedSets.Arrows","content":"PredefinedSets.Arrows \nArrows \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#MathematicalOperators","title":"PredefinedSets.MathematicalOperators","content":"PredefinedSets.MathematicalOperators \nMathematicalOperators \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#MiscellaneousTechnical","title":"PredefinedSets.MiscellaneousTechnical","content":"PredefinedSets.MiscellaneousTechnical \nMiscellaneousTechnical \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#ControlPictures","title":"PredefinedSets.ControlPictures","content":"PredefinedSets.ControlPictures \nControlPictures \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#OpticalCharacterRecognition","title":"PredefinedSets.OpticalCharacterRecognition","content":"PredefinedSets.OpticalCharacterRecognition \nOpticalCharacterRecognition \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#EnclosedAlphanumerics","title":"PredefinedSets.EnclosedAlphanumerics","content":"PredefinedSets.EnclosedAlphanumerics \nEnclosedAlphanumerics \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#BoxDrawing","title":"PredefinedSets.BoxDrawing","content":"PredefinedSets.BoxDrawing \nBoxDrawing \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#BlockElements","title":"PredefinedSets.BlockElements","content":"PredefinedSets.BlockElements \nBlockElements \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#GeometricShapes","title":"PredefinedSets.GeometricShapes","content":"PredefinedSets.GeometricShapes \nGeometricShapes \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#MiscellaneousSymbols","title":"PredefinedSets.MiscellaneousSymbols","content":"PredefinedSets.MiscellaneousSymbols \nMiscellaneousSymbols \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Dingbats","title":"PredefinedSets.Dingbats","content":"PredefinedSets.Dingbats \nDingbats \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#MiscellaneousMathematicalSymbolsA","title":"PredefinedSets.MiscellaneousMathematicalSymbolsA","content":"PredefinedSets.MiscellaneousMathematicalSymbolsA \nMiscellaneousMathematicalSymbolsA \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#SupplementalArrowsA","title":"PredefinedSets.SupplementalArrowsA","content":"PredefinedSets.SupplementalArrowsA \nSupplementalArrowsA \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#BraillePatterns","title":"PredefinedSets.BraillePatterns","content":"PredefinedSets.BraillePatterns \nBraillePatterns \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#SupplementalArrowsB","title":"PredefinedSets.SupplementalArrowsB","content":"PredefinedSets.SupplementalArrowsB \nSupplementalArrowsB \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#MiscellaneousMathematicalSymbolsB","title":"PredefinedSets.MiscellaneousMathematicalSymbolsB","content":"PredefinedSets.MiscellaneousMathematicalSymbolsB \nMiscellaneousMathematicalSymbolsB \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#SupplementalMathematicalOperators","title":"PredefinedSets.SupplementalMathematicalOperators","content":"PredefinedSets.SupplementalMathematicalOperators \nSupplementalMathematicalOperators \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#MiscellaneousSymbolsAndArrows","title":"PredefinedSets.MiscellaneousSymbolsAndArrows","content":"PredefinedSets.MiscellaneousSymbolsAndArrows \nMiscellaneousSymbolsAndArrows \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Glagolitic","title":"PredefinedSets.Glagolitic","content":"PredefinedSets.Glagolitic \nGlagolitic \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#LatinExtendedC","title":"PredefinedSets.LatinExtendedC","content":"PredefinedSets.LatinExtendedC \nLatinExtendedC \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Coptic","title":"PredefinedSets.Coptic","content":"PredefinedSets.Coptic \nCoptic \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#GeorgianSupplement","title":"PredefinedSets.GeorgianSupplement","content":"PredefinedSets.GeorgianSupplement \nGeorgianSupplement \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Tifinagh","title":"PredefinedSets.Tifinagh","content":"PredefinedSets.Tifinagh \nTifinagh \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#EthiopicExtended","title":"PredefinedSets.EthiopicExtended","content":"PredefinedSets.EthiopicExtended \nEthiopicExtended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CyrillicExtendedA","title":"PredefinedSets.CyrillicExtendedA","content":"PredefinedSets.CyrillicExtendedA \nCyrillicExtendedA \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#SupplementalPunctuation","title":"PredefinedSets.SupplementalPunctuation","content":"PredefinedSets.SupplementalPunctuation \nSupplementalPunctuation \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CJKRadicalsSupplement","title":"PredefinedSets.CJKRadicalsSupplement","content":"PredefinedSets.CJKRadicalsSupplement \nCJKRadicalsSupplement \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#KangxiRadicals","title":"PredefinedSets.KangxiRadicals","content":"PredefinedSets.KangxiRadicals \nKangxiRadicals \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#IdeographicDescriptionCharacters","title":"PredefinedSets.IdeographicDescriptionCharacters","content":"PredefinedSets.IdeographicDescriptionCharacters \nIdeographicDescriptionCharacters \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CJKSymbolsAndPunctuation","title":"PredefinedSets.CJKSymbolsAndPunctuation","content":"PredefinedSets.CJKSymbolsAndPunctuation \nCJKSymbolsAndPunctuation \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Hiragana","title":"PredefinedSets.Hiragana","content":"PredefinedSets.Hiragana \nHiragana \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Katakana","title":"PredefinedSets.Katakana","content":"PredefinedSets.Katakana \nKatakana \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Bopomofo","title":"PredefinedSets.Bopomofo","content":"PredefinedSets.Bopomofo \nBopomofo \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#HangulCompatibilityJamo","title":"PredefinedSets.HangulCompatibilityJamo","content":"PredefinedSets.HangulCompatibilityJamo \nHangulCompatibilityJamo \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Kanbun","title":"PredefinedSets.Kanbun","content":"PredefinedSets.Kanbun \nKanbun \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#BopomofoExtended","title":"PredefinedSets.BopomofoExtended","content":"PredefinedSets.BopomofoExtended \nBopomofoExtended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CJKStrokes","title":"PredefinedSets.CJKStrokes","content":"PredefinedSets.CJKStrokes \nCJKStrokes \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#KatakanaPhoneticExtensions","title":"PredefinedSets.KatakanaPhoneticExtensions","content":"PredefinedSets.KatakanaPhoneticExtensions \nKatakanaPhoneticExtensions \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#EnclosedCJKLettersAndMonths","title":"PredefinedSets.EnclosedCJKLettersAndMonths","content":"PredefinedSets.EnclosedCJKLettersAndMonths \nEnclosedCJKLettersAndMonths \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CJKCompatibility","title":"PredefinedSets.CJKCompatibility","content":"PredefinedSets.CJKCompatibility \nCJKCompatibility \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CJKUnifiedIdeographsExtensionA","title":"PredefinedSets.CJKUnifiedIdeographsExtensionA","content":"PredefinedSets.CJKUnifiedIdeographsExtensionA \nCJKUnifiedIdeographsExtensionA \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#YijingHexagramSymbols","title":"PredefinedSets.YijingHexagramSymbols","content":"PredefinedSets.YijingHexagramSymbols \nYijingHexagramSymbols \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CJKUnifiedIdeographs","title":"PredefinedSets.CJKUnifiedIdeographs","content":"PredefinedSets.CJKUnifiedIdeographs \nCJKUnifiedIdeographs \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#YiSyllables","title":"PredefinedSets.YiSyllables","content":"PredefinedSets.YiSyllables \nYiSyllables \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#YiRadicals","title":"PredefinedSets.YiRadicals","content":"PredefinedSets.YiRadicals \nYiRadicals \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Lisu","title":"PredefinedSets.Lisu","content":"PredefinedSets.Lisu \nLisu \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Vai","title":"PredefinedSets.Vai","content":"PredefinedSets.Vai \nVai \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CyrillicExtendedB","title":"PredefinedSets.CyrillicExtendedB","content":"PredefinedSets.CyrillicExtendedB \nCyrillicExtendedB \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Bamum","title":"PredefinedSets.Bamum","content":"PredefinedSets.Bamum \nBamum \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#ModifierToneLetters","title":"PredefinedSets.ModifierToneLetters","content":"PredefinedSets.ModifierToneLetters \nModifierToneLetters \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#LatinExtendedD","title":"PredefinedSets.LatinExtendedD","content":"PredefinedSets.LatinExtendedD \nLatinExtendedD \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#SylotiNagri","title":"PredefinedSets.SylotiNagri","content":"PredefinedSets.SylotiNagri \nSylotiNagri \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CommonIndicNumberForms","title":"PredefinedSets.CommonIndicNumberForms","content":"PredefinedSets.CommonIndicNumberForms \nCommonIndicNumberForms \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#PhagsPa","title":"PredefinedSets.PhagsPa","content":"PredefinedSets.PhagsPa \nPhagsPa \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Saurashtra","title":"PredefinedSets.Saurashtra","content":"PredefinedSets.Saurashtra \nSaurashtra \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#DevanagariExtended","title":"PredefinedSets.DevanagariExtended","content":"PredefinedSets.DevanagariExtended \nDevanagariExtended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#KayahLi","title":"PredefinedSets.KayahLi","content":"PredefinedSets.KayahLi \nKayahLi \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Rejang","title":"PredefinedSets.Rejang","content":"PredefinedSets.Rejang \nRejang \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#HangulJamoExtendedA","title":"PredefinedSets.HangulJamoExtendedA","content":"PredefinedSets.HangulJamoExtendedA \nHangulJamoExtendedA \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Javanese","title":"PredefinedSets.Javanese","content":"PredefinedSets.Javanese \nJavanese \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Cham","title":"PredefinedSets.Cham","content":"PredefinedSets.Cham \nCham \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#MyanmarExtendedA","title":"PredefinedSets.MyanmarExtendedA","content":"PredefinedSets.MyanmarExtendedA \nMyanmarExtendedA \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#TaiViet","title":"PredefinedSets.TaiViet","content":"PredefinedSets.TaiViet \nTaiViet \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#MeeteiMayek","title":"PredefinedSets.MeeteiMayek","content":"PredefinedSets.MeeteiMayek \nMeeteiMayek \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#HangulSyllables","title":"PredefinedSets.HangulSyllables","content":"PredefinedSets.HangulSyllables \nHangulSyllables \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#HangulJamoExtendedB","title":"PredefinedSets.HangulJamoExtendedB","content":"PredefinedSets.HangulJamoExtendedB \nHangulJamoExtendedB \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#PrivateUseArea","title":"PredefinedSets.PrivateUseArea","content":"PredefinedSets.PrivateUseArea \nPrivateUseArea \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CJKCompatibilityIdeographs","title":"PredefinedSets.CJKCompatibilityIdeographs","content":"PredefinedSets.CJKCompatibilityIdeographs \nCJKCompatibilityIdeographs \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#AlphabeticPresentationForms","title":"PredefinedSets.AlphabeticPresentationForms","content":"PredefinedSets.AlphabeticPresentationForms \nAlphabeticPresentationForms \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#ArabicPresentationFormsA","title":"PredefinedSets.ArabicPresentationFormsA","content":"PredefinedSets.ArabicPresentationFormsA \nArabicPresentationFormsA \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#VariationSelectors","title":"PredefinedSets.VariationSelectors","content":"PredefinedSets.VariationSelectors \nVariationSelectors \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#VerticalForms","title":"PredefinedSets.VerticalForms","content":"PredefinedSets.VerticalForms \nVerticalForms \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CombiningHalfMarks","title":"PredefinedSets.CombiningHalfMarks","content":"PredefinedSets.CombiningHalfMarks \nCombiningHalfMarks \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#CJKCompatibilityForms","title":"PredefinedSets.CJKCompatibilityForms","content":"PredefinedSets.CJKCompatibilityForms \nCJKCompatibilityForms \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#SmallFormVariants","title":"PredefinedSets.SmallFormVariants","content":"PredefinedSets.SmallFormVariants \nSmallFormVariants \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#ArabicPresentationFormsB","title":"PredefinedSets.ArabicPresentationFormsB","content":"PredefinedSets.ArabicPresentationFormsB \nArabicPresentationFormsB \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#HalfwidthAndFullwidthForms","title":"PredefinedSets.HalfwidthAndFullwidthForms","content":"PredefinedSets.HalfwidthAndFullwidthForms \nHalfwidthAndFullwidthForms \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#ANSIMapped","title":"PredefinedSets.ANSIMapped","content":"PredefinedSets.ANSIMapped \nANSIMapped \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#ANSIPrintable","title":"PredefinedSets.ANSIPrintable","content":"PredefinedSets.ANSIPrintable \nANSIPrintable \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#AllValid","title":"PredefinedSets.AllValid","content":"PredefinedSets.AllValid \nAllValid \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#AllPrintable","title":"PredefinedSets.AllPrintable","content":"PredefinedSets.AllPrintable \nAllPrintable \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#AllLetters","title":"PredefinedSets.AllLetters","content":"PredefinedSets.AllLetters \nAllLetters \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#LS","title":"PredefinedSets.LS","content":"PredefinedSets.LS \nLS \n\n Unicode Line Separator\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#PS","title":"PredefinedSets.PS","content":"PredefinedSets.PS \nPS \n\n Unicode Paragraph Separator\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#AllSpace","title":"PredefinedSets.AllSpace","content":"PredefinedSets.AllSpace \nAllSpace \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#AllNewline","title":"PredefinedSets.AllNewline","content":"PredefinedSets.AllNewline \nAllNewline \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#AllWhitespace","title":"PredefinedSets.AllWhitespace","content":"PredefinedSets.AllWhitespace \nAllWhitespace \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#ControlCodes","title":"PredefinedSets.ControlCodes","content":"PredefinedSets.ControlCodes \nControlCodes \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedsets.html#Formatting","title":"PredefinedSets.Formatting","content":"PredefinedSets.Formatting \nFormatting \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html","title":"Regex","content":"Regex \n\n F#-friendly members of the \u0060Regex\u0060 class.\n Please consult the members of the \u0060Regex\u0060 class for documentation.\n \nRegex.char \nchar \nRegex.chars \nchars \nRegex.any \nany \nRegex.allButChars \nallButChars \nRegex.string \nstring \nRegex.concat \nconcat \nRegex.choice \nchoice \nRegex.repeat \nrepeat \nRegex.optional \noptional \nRegex.between \nbetween \nRegex.atLeast \natLeast \nRegex.star \nstar \nRegex.plus \nplus \nRegex.regexString \nregexString"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#char","title":"Regex.char","content":"Regex.char \nchar \n\n An alias for \u0060Regex.Literal\u0060 that takes a character.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#chars","title":"Regex.chars","content":"Regex.chars \nchars \n\n An alias for \u0060Regex.OneOf\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#any","title":"Regex.any","content":"Regex.any \nany \n\n An alias for \u0060Regex.Any\u0060.\n See the documentation of it for caveats.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#allButChars","title":"Regex.allButChars","content":"Regex.allButChars \nallButChars \n\n An alias for \u0060Regex.NotOneOf\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#string","title":"Regex.string","content":"Regex.string \nstring \n\n An alias for \u0060Regex.Literal\u0060 that takes a string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#concat","title":"Regex.concat","content":"Regex.concat \nconcat \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#choice","title":"Regex.choice","content":"Regex.choice \nchoice \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#repeat","title":"Regex.repeat","content":"Regex.repeat \nrepeat \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#optional","title":"Regex.optional","content":"Regex.optional \noptional \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#between","title":"Regex.between","content":"Regex.between \nbetween \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#atLeast","title":"Regex.atLeast","content":"Regex.atLeast \natLeast \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#star","title":"Regex.star","content":"Regex.star \nstar \n\n An alias for \u0060Regex.ZeroOrMore\u0060.\n The name alludes to the Kleene Star.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#plus","title":"Regex.plus","content":"Regex.plus \nplus \n\n An alias for \u0060atLeast 1\u0060.\n The name alludes to the plus symbol of regular expressions.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexmodule.html#regexString","title":"Regex.regexString","content":"Regex.regexString \nregexString \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexgrammar.html","title":"RegexGrammar","content":"RegexGrammar \nParses regexes from strings. The language\u0027s syntax is exmplained\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/string-regexes.html\u0022\u003Eat\r\n the project\u0027s documentation\u003C/a\u003E. \nRegexGrammar.designtime \ndesigntime \nRegexGrammar.runtime \nruntime"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexgrammar.html#designtime","title":"RegexGrammar.designtime","content":"RegexGrammar.designtime \ndesigntime \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexgrammar.html#runtime","title":"RegexGrammar.runtime","content":"RegexGrammar.runtime \nruntime \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexoperators.html","title":"RegexOperators","content":"RegexOperators \n\n F# operators to easily create \u0060Regex\u0060es.\n \nRegexOperators.(\u003C\u0026\u003E) \n(\u003C\u0026\u003E) \nRegexOperators.(\u003C|\u003E) \n(\u003C|\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexoperators.html#(\u003C\u0026\u003E)","title":"RegexOperators.(\u003C\u0026\u003E)","content":"RegexOperators.(\u003C\u0026\u003E) \n(\u003C\u0026\u003E) \n\n \u0060Regex.And\u0060 as an operator.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regexoperators.html#(\u003C|\u003E)","title":"RegexOperators.(\u003C|\u003E)","content":"RegexOperators.(\u003C|\u003E) \n(\u003C|\u003E) \n\n \u0060Regex.Or\u0060 as an operator.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html","title":"Terminals","content":"Terminals \nSome designtime Farkles that\n are commonly used in many grammars. \n\n These functions take a name and create\n a designtime Farkle which is meant to be\n reused everywhere it is needed in the grammar.\n Creating and using many designtime Farkles\n of the same or similar kind\n will almost certainly lead to an error. \nTerminals.Internal \nInternal \nTerminals.unsignedIntRegex \nunsignedIntRegex \nTerminals.genericUnsigned \ngenericUnsigned \nTerminals.signedIntRegex \nsignedIntRegex \nTerminals.genericSigned \ngenericSigned \nTerminals.int \nint \nTerminals.int64 \nint64 \nTerminals.uint32 \nuint32 \nTerminals.uint64 \nuint64 \nTerminals.unsignedRealRegex \nunsignedRealRegex \nTerminals.signedRealRegex \nsignedRealRegex \nTerminals.genericReal \ngenericReal \nTerminals.float32 \nfloat32 \nTerminals.float \nfloat \nTerminals.decimal \ndecimal \nTerminals.stringEx \nstringEx \nTerminals.string \nstring"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#unsignedIntRegex","title":"Terminals.unsignedIntRegex","content":"Terminals.unsignedIntRegex \nunsignedIntRegex \n\n A \u0060Regex\u0060 that recognizes a series of decimal digits.\n Leading zeros are accepted.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#genericUnsigned","title":"Terminals.genericUnsigned","content":"Terminals.genericUnsigned \ngenericUnsigned \n\n Creates a designtimeFarkle that parses an unsigned decimal integer\n into the desired number type. No bounds checking is performed.\n Using this function from a language other than F# will throw an exception.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#signedIntRegex","title":"Terminals.signedIntRegex","content":"Terminals.signedIntRegex \nsignedIntRegex \n\n A \u0060Regex\u0060 that recognizes a series of decimal digits\n that might be prefixed with a minus sign \u0022-\u0022.\n Leading zeros are accepted.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#genericSigned","title":"Terminals.genericSigned","content":"Terminals.genericSigned \ngenericSigned \n\n Creates a designtime Farkle that parses a signed decimal integer\n into the desired number type. No bounds checking is performed.\n The type parameter must support the unary negation operator.\n Using this function from a language other than F# will throw an exception.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#int","title":"Terminals.int","content":"Terminals.int \nint \n\n Creates a designtime Farkle that parses and returns a\n signed 32-bit signed integer. No bounds checking is performed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#int64","title":"Terminals.int64","content":"Terminals.int64 \nint64 \n\n Creates a designtime Farkle that parses and returns a\n signed 64-bit signed integer. No bounds checking is performed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#uint32","title":"Terminals.uint32","content":"Terminals.uint32 \nuint32 \n\n Creates a designtime Farkle that parses and returns a\n signed 32-bit unsigned integer. No bounds checking is performed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#uint64","title":"Terminals.uint64","content":"Terminals.uint64 \nuint64 \n\n Creates a designtime Farkle that parses and returns a\n signed 64-bit unsigned integer. No bounds checking is performed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#unsignedRealRegex","title":"Terminals.unsignedRealRegex","content":"Terminals.unsignedRealRegex \nunsignedRealRegex \n\n A \u0060Regex\u0060 that recognizes an unsigned real number.\n The number is expected to be written in scientific\n notation, with the decimal point symbol being the dot.\n Numbers before or after the dot are optional, but they\n must exist in at least one of the two places.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#signedRealRegex","title":"Terminals.signedRealRegex","content":"Terminals.signedRealRegex \nsignedRealRegex \n\n Like \u0060unsignedRealRegex\u0060, but with an optional\n sign in the beginning being allowed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#genericReal","title":"Terminals.genericReal","content":"Terminals.genericReal \ngenericReal \n\n Creates a designtime Farkle that parses a real number\n into the desired number type. No bounds checking is performed.\n Using this function from a language other than F# will throw an exception.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#float32","title":"Terminals.float32","content":"Terminals.float32 \nfloat32 \n\n Creates a designtime Farkle that parses and returns\n a signed single-precision floating-point number. The number\n is expected to be written in scientific notation, with\n the decimal point symbol being the dot. Special values\n such as NaN or infinity are not recognized.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#float","title":"Terminals.float","content":"Terminals.float \nfloat \n\n Creates a designtime Farkle that parses and returns\n a signed double-precision floating-point number. The number\n is expected to be written in scientific notation, with\n the decimal point symbol being the dot. Special values\n such as NaN or infinity are not recognized.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#decimal","title":"Terminals.decimal","content":"Terminals.decimal \ndecimal \n\n Creates a designtime Farkle that parses and returns\n a signed decimal floating-point number. The number\n is expected to be written in scientific notation, with\n the decimal point symbol being the dot.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#stringEx","title":"Terminals.stringEx","content":"Terminals.stringEx \nstringEx \nCreates a designtime Farkle that can recognize a C-like\n string. It supports escaping with a backslash \u0022\\\\\u0022."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals.html#string","title":"Terminals.string","content":"Terminals.string \nstring \n\n Creates a designtime Farkle that can recognize a single-line, C-like string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals-internal.html","title":"Internal","content":"Internal \n\n This module is public due to compiler limitations.\n Do not use it; it is subject to be removed or altered at any time.\n \nInternal.Characters \nCharacters \nInternal.toCharacters \ntoCharacters"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals-internal.html#toCharacters","title":"Internal.toCharacters","content":"Internal.toCharacters \ntoCharacters \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals-internal-characters.html","title":"Characters","content":"Characters \n \nCharacters.Chars \nChars \nCharacters.Length \nLength"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals-internal-characters.html#Chars","title":"Characters.Chars","content":"Characters.Chars \nChars \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminals-internal-characters.html#Length","title":"Characters.Length","content":"Characters.Length \nLength \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html","title":"BuildError","content":"BuildError \n\n An error the builder encountered.\n \nBuildError.SymbolLimit \nSymbolLimit \nBuildError.IndistinguishableSymbols \nIndistinguishableSymbols \nBuildError.IndistinguishableSymbols2 \nIndistinguishableSymbols2 \nBuildError.NullableSymbol \nNullableSymbol \nBuildError.LALRConflict \nLALRConflict \nBuildError.LALRConflictReport \nLALRConflictReport \nBuildError.EmptyNonterminal \nEmptyNonterminal \nBuildError.DuplicateProduction \nDuplicateProduction \nBuildError.RegexParseError \nRegexParseError \nBuildError.SymbolLimitExceeded \nSymbolLimitExceeded \nBuildError.GrammarNotPrecompiled \nGrammarNotPrecompiled"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#SymbolLimit","title":"BuildError.SymbolLimit","content":"BuildError.SymbolLimit \nSymbolLimit \n\n The maximum number of terminals and nonterminals\n a grammar built by Farkle can have.\n Currently set to 2^20; sixteen times more of what\n GOLD Parser can handle. To be more specific, a\n grammar can have at most 2^20 terminals _and_ 2^20\n nonterminals.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#IndistinguishableSymbols","title":"BuildError.IndistinguishableSymbols","content":"BuildError.IndistinguishableSymbols \nIndistinguishableSymbols \n\n Some symbols cannot be distinguished from each other.\n Superseded by \u0060IndistinguishableSymbols2\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#IndistinguishableSymbols2","title":"BuildError.IndistinguishableSymbols2","content":"BuildError.IndistinguishableSymbols2 \nIndistinguishableSymbols2 \n\n Some symbols cannot be distinguished from each other.\n Also provides an example string that all symbols match.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#NullableSymbol","title":"BuildError.NullableSymbol","content":"BuildError.NullableSymbol \nNullableSymbol \n\n A symbol can contain zero characters.\n If many symbols are nullable, they will\n be marked as indistinguishable instead.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#LALRConflict","title":"BuildError.LALRConflict","content":"BuildError.LALRConflict \nLALRConflict \n\n An LALR conflict did occur.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#LALRConflictReport","title":"BuildError.LALRConflictReport","content":"BuildError.LALRConflictReport \nLALRConflictReport \n\n There were LALR conflicts.\n This error type comes after the specific conflict\n error messages and contains the grammar\u0027s LALR states,\n including the conflicting actions. It is not displayed\n when a \u0060FarkleError\u0060 is converted to a string, but is\n used by the precompiler to create an HTML report when\n a precompiled grammar has conflicts.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#EmptyNonterminal","title":"BuildError.EmptyNonterminal","content":"BuildError.EmptyNonterminal \nEmptyNonterminal \n\n A nonterminal has no productions.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#DuplicateProduction","title":"BuildError.DuplicateProduction","content":"BuildError.DuplicateProduction \nDuplicateProduction \n\n A production is defined twice.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#RegexParseError","title":"BuildError.RegexParseError","content":"BuildError.RegexParseError \nRegexParseError \n\n An error occurred while parsing a regular expression.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#SymbolLimitExceeded","title":"BuildError.SymbolLimitExceeded","content":"BuildError.SymbolLimitExceeded \nSymbolLimitExceeded \n\n The grammar has more symbols than the supported limit.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-builderror.html#GrammarNotPrecompiled","title":"BuildError.GrammarNotPrecompiled","content":"BuildError.GrammarNotPrecompiled \nGrammarNotPrecompiled \n\n A precompilable designtime Farkle was attempted to be\n built with its grammar having not been precompiled.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-buildoptions.html","title":"BuildOptions","content":"BuildOptions \n\n Additional options to configure the building process,\n intended to be used by advanced scenarios. This class\n is currently empty; options will be added in future releases.\n \nBuildOptions.Default \nDefault"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-buildoptions.html#Default","title":"BuildOptions.Default","content":"BuildOptions.Default \nDefault \n\n The default options.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-comment.html","title":"Comment","content":"Comment \n\n A type of source code comment. As everybody might know,\n comments are the text fragments that are ignored by the parser.\n \nComment.LineComment \nLineComment \nComment.BlockComment \nBlockComment"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-comment.html#LineComment","title":"Comment.LineComment","content":"Comment.LineComment \nLineComment \n\n A line comment. It starts when the given literal is encountered,\n and ends when the line ends.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-comment.html#BlockComment","title":"Comment.BlockComment","content":"Comment.BlockComment \nBlockComment \n\n A block comment. It starts when the first literal is encountered,\n and ends when when the second literal is encountered.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html","title":"DesigntimeFarkle","content":"DesigntimeFarkle \nThe base interface of \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{t}\u0022\u003EDesigntimeFarkle{T}\u003C/a\u003E. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EIn contrast with its typed descendant, untyped designtime\n Farkles do not return any value. They typically represent literal symbols\n that can only take one value. Building an untyped designtime Farkle will\n result in a syntax-checking runtime Farkle with no custom post-processor.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EUser code must not implement this interface,\n or an exception might be thrown.\u003C/p\u003E \nDesigntimeFarkle.Metadata \nMetadata \nDesigntimeFarkle.Name \nName"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html#Metadata","title":"DesigntimeFarkle.Metadata","content":"DesigntimeFarkle.Metadata \nMetadata \nThe associated \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html\u0022\u003EGrammarMetadata\u003C/a\u003E object."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html#Name","title":"DesigntimeFarkle.Name","content":"DesigntimeFarkle.Name \nName \nThe designtime Farkle\u0027s name. \nA totally informative property, it matches\n the corresponding grammar symbol\u0027s name. Many designtime\n Farkles in a grammar can have the same name."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle-1.html","title":"DesigntimeFarkle\u003C\u0027T\u003E","content":"DesigntimeFarkle\u003C\u0027T\u003E \nAn object representing a grammar symbol created by Farkle.Builder.\n It corresponds to either a standalone terminal or a nonterminal\n that contains other designtime Farkles. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EDesigntime Farkles cannot be used to parse text but can be\n composed into larger designtime Farkles. To actually use them, they\n have to be converted to a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/runtimefarkle{t}\u0022\u003ERuntimeFarkle{T}\u003C/a\u003E which however\n is not composable. This one-way conversion is performed by the \u003Ccode\u003ERuntimeFarkle.build\u003C/code\u003E\n function or the \u003Ccode\u003EBuild\u003C/code\u003E extension method.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EThis interface has no members on its own; they are\n inherited from \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EUser code must not implement this interface,\n or an exception might be thrown.\u003C/p\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html","title":"DesigntimeFarkleExtensions","content":"DesigntimeFarkleExtensions \nExtension methods for \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003Es. \nMost of these methods must be applied to the topmost designtime Farkle\n that will eventually be built. Use \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/cast\u0022\u003ECast\u003C/a\u003E first to use these functions\n on untyped designtime Farkles. \nDesigntimeFarkleExtensions.AddBlockComment \nAddBlockComment \nDesigntimeFarkleExtensions.AddLineComment \nAddLineComment \nDesigntimeFarkleExtensions.AddNoiseSymbol \nAddNoiseSymbol \nDesigntimeFarkleExtensions.AutoWhitespace \nAutoWhitespace \nDesigntimeFarkleExtensions.Build \nBuild \nDesigntimeFarkleExtensions.BuildUntyped \nBuildUntyped \nDesigntimeFarkleExtensions.CaseSensitive \nCaseSensitive \nDesigntimeFarkleExtensions.Cast \nCast \nDesigntimeFarkleExtensions.Many \nMany \nDesigntimeFarkleExtensions.Nullable \nNullable \nDesigntimeFarkleExtensions.Optional \nOptional \nDesigntimeFarkleExtensions.Rename \nRename \nDesigntimeFarkleExtensions.Select \nSelect \nDesigntimeFarkleExtensions.SeparatedBy \nSeparatedBy \nDesigntimeFarkleExtensions.WithMetadata \nWithMetadata \nDesigntimeFarkleExtensions.WithOperatorScope \nWithOperatorScope"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#AddBlockComment","title":"DesigntimeFarkleExtensions.AddBlockComment","content":"DesigntimeFarkleExtensions.AddBlockComment \nAddBlockComment \nAdds a block comment to the given\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#AddLineComment","title":"DesigntimeFarkleExtensions.AddLineComment","content":"DesigntimeFarkleExtensions.AddLineComment \nAddLineComment \nAdds a line comment to the given\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#AddNoiseSymbol","title":"DesigntimeFarkleExtensions.AddNoiseSymbol","content":"DesigntimeFarkleExtensions.AddNoiseSymbol \nAddNoiseSymbol \nAdds a symbol specified by the given \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html\u0022\u003ERegex\u003C/a\u003E\n that will be ignored in input text, to the given \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#AutoWhitespace","title":"DesigntimeFarkleExtensions.AutoWhitespace","content":"DesigntimeFarkleExtensions.AutoWhitespace \nAutoWhitespace \nControls whether the given \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E\n would automatically ignore whitespace in input text."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#Build","title":"DesigntimeFarkleExtensions.Build","content":"DesigntimeFarkleExtensions.Build \nBuild \nBuilds a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tresult}\u0022\u003EDesigntimeFarkle{TResult}\u003C/a\u003E\n into a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/runtimefarkle{tresult}\u0022\u003ERuntimeFarkle{TResult}\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#BuildUntyped","title":"DesigntimeFarkleExtensions.BuildUntyped","content":"DesigntimeFarkleExtensions.BuildUntyped \nBuildUntyped \nBuilds a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E into a syntax-checking\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/runtimefarkle{system.object}\u0022\u003EObject}\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#CaseSensitive","title":"DesigntimeFarkleExtensions.CaseSensitive","content":"DesigntimeFarkleExtensions.CaseSensitive \nCaseSensitive \nControls whether the given \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E\n is case sensitive."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#Cast","title":"DesigntimeFarkleExtensions.Cast","content":"DesigntimeFarkleExtensions.Cast \nCast \nCasts a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E\n into a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{object}\u0022\u003EDesigntimeFarkle{Object}\u003C/a\u003E \nThe object \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Edf\u003C/span\u003E will return is undefined."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#Many","title":"DesigntimeFarkleExtensions.Many","content":"DesigntimeFarkleExtensions.Many \nMany \nCreates a new \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tcollection}\u0022\u003EDesigntimeFarkle{TCollection}\u003C/a\u003E\n that recognizes many occurrences of the given\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tresult}\u0022\u003EDesigntimeFarkle{TResult}\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#Nullable","title":"DesigntimeFarkleExtensions.Nullable","content":"DesigntimeFarkleExtensions.Nullable \nNullable \n\u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/optional\u0022\u003EOptional\u003C/a\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#Optional","title":"DesigntimeFarkleExtensions.Optional","content":"DesigntimeFarkleExtensions.Optional \nOptional \nCreates a new \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tresult}\u0022\u003EDesigntimeFarkle{TResult}\u003C/a\u003E\n that might recognize the given one, or not. In the latter\n case, it returns the default value of the result type."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#Rename","title":"DesigntimeFarkleExtensions.Rename","content":"DesigntimeFarkleExtensions.Rename \nRename \nChanges the name of a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tresult}\u0022\u003EDesigntimeFarkle{TResult}\u003C/a\u003E. \nUseful for diagnostic purposes."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#Select","title":"DesigntimeFarkleExtensions.Select","content":"DesigntimeFarkleExtensions.Select \nSelect \nCreates a new \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tresult}\u0022\u003EDesigntimeFarkle{TResult}\u003C/a\u003E\n that transforms the output of the given one with the given delegate."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#SeparatedBy","title":"DesigntimeFarkleExtensions.SeparatedBy","content":"DesigntimeFarkleExtensions.SeparatedBy \nSeparatedBy \nCreates a new \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tcollection}\u0022\u003EDesigntimeFarkle{TCollection}\u003C/a\u003E\n that recognizes many occurrences of the given\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tresult}\u0022\u003EDesigntimeFarkle{TResult}\u003C/a\u003E, separated by another\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#WithMetadata","title":"DesigntimeFarkleExtensions.WithMetadata","content":"DesigntimeFarkleExtensions.WithMetadata \nWithMetadata \nSets a custom \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html\u0022\u003EGrammarMetadata\u003C/a\u003E\n object to a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkleextensions.html#WithOperatorScope","title":"DesigntimeFarkleExtensions.WithOperatorScope","content":"DesigntimeFarkleExtensions.WithOperatorScope \nWithOperatorScope \nSets an \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-operatorscope.html\u0022\u003EOperatorScope\u003C/a\u003E\n to a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E. Any previous ones -if exist- are discarded."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-fuser-1.html","title":"F\u003C\u0027T\u003E","content":"F\u003C\u0027T\u003E \nA delegate that fuses the many members\n of a production into one arbitrary object. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EIn F# this type is shortened to\n \u003Ccode\u003EF\u003C/code\u003E to avoid clutter in user code.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EA .NET delegate was used because read-only\n spans are incompatible with F# functions.\u003C/p\u003E \nF\u003C\u0027T\u003E.Invoke \nInvoke"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-fuser-1.html#Invoke","title":"F\u003C\u0027T\u003E.Invoke","content":"F\u003C\u0027T\u003E.Invoke \nInvoke \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammardefinition.html","title":"GrammarDefinition","content":"GrammarDefinition \n\n An object containing the symbols of a grammar,\n but lacking the LALR and DFA states.\n \nGrammarDefinition.Metadata \nMetadata \nGrammarDefinition.StartSymbol \nStartSymbol \nGrammarDefinition.Symbols \nSymbols \nGrammarDefinition.Productions \nProductions \nGrammarDefinition.Groups \nGroups \nGrammarDefinition.DFASymbols \nDFASymbols \nGrammarDefinition.ConflictResolver \nConflictResolver"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammardefinition.html#Metadata","title":"GrammarDefinition.Metadata","content":"GrammarDefinition.Metadata \nMetadata \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammardefinition.html#StartSymbol","title":"GrammarDefinition.StartSymbol","content":"GrammarDefinition.StartSymbol \nStartSymbol \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammardefinition.html#Symbols","title":"GrammarDefinition.Symbols","content":"GrammarDefinition.Symbols \nSymbols \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammardefinition.html#Productions","title":"GrammarDefinition.Productions","content":"GrammarDefinition.Productions \nProductions \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammardefinition.html#Groups","title":"GrammarDefinition.Groups","content":"GrammarDefinition.Groups \nGroups \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammardefinition.html#DFASymbols","title":"GrammarDefinition.DFASymbols","content":"GrammarDefinition.DFASymbols \nDFASymbols \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammardefinition.html#ConflictResolver","title":"GrammarDefinition.ConflictResolver","content":"GrammarDefinition.ConflictResolver \nConflictResolver \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html","title":"GrammarMetadata","content":"GrammarMetadata \nAdditional information about a grammar to be built. \nEach \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E has one, but the metadata object that\n will be taken into consideration when building will be the one belonging\n to the topmost designtime Farkle, on which a build function was called.\n An exception is made for the operator scopes, which are found in all\n designtime Farkles of a grammar. \nGrammarMetadata.Default \nDefault \nGrammarMetadata.Strict \nStrict \nGrammarMetadata.CaseSensitive \nCaseSensitive \nGrammarMetadata.AutoWhitespace \nAutoWhitespace \nGrammarMetadata.Comments \nComments \nGrammarMetadata.NoiseSymbols \nNoiseSymbols \nGrammarMetadata.OperatorScope \nOperatorScope"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html#Default","title":"GrammarMetadata.Default","content":"GrammarMetadata.Default \nDefault \n\n The default metadata of a grammar.\n According to them, the grammar is not case sensitive\n and white space is discarded.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html#Strict","title":"GrammarMetadata.Strict","content":"GrammarMetadata.Strict \nStrict \n\n A stricter set of metadata for a grammar.\n They specify a case sensitive grammar without any whitespace allowed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html#CaseSensitive","title":"GrammarMetadata.CaseSensitive","content":"GrammarMetadata.CaseSensitive \nCaseSensitive \n\n Whether the grammar is case sensitive.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html#AutoWhitespace","title":"GrammarMetadata.AutoWhitespace","content":"GrammarMetadata.AutoWhitespace \nAutoWhitespace \n\n Whether to discard any whitespace characters encountered\n outside of any terminal. Farkle considers whitespace the\n characters: Space, Horizontal Tab, Carriage Return and Line feed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html#Comments","title":"GrammarMetadata.Comments","content":"GrammarMetadata.Comments \nComments \n\n The comments this grammar accepts.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html#NoiseSymbols","title":"GrammarMetadata.NoiseSymbols","content":"GrammarMetadata.NoiseSymbols \nNoiseSymbols \n\n Any other symbols definable by a regular expression that will\n be discarded if they appear anywhere outside of any terminal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-grammarmetadata.html#OperatorScope","title":"GrammarMetadata.OperatorScope","content":"GrammarMetadata.OperatorScope \nOperatorScope \nAn \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-operatorscope.html\u0022\u003EOperatorScope\u003C/a\u003E to assist\n the conflict resolution when building the grammar. \nThis property will be considered when set in\n any designtime Farkle of a grammar; not only the\n topmost one."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-group.html","title":"Group","content":"Group \n\n A helper static class to create groups.\n Groups are used to define lexical elements that start and\n end with specified literals, and contain arbitrary characters.\n Groups are a tokenizer\u0027s construct, and their content is\n considered to be a terminal by the parser.\n Comments are essentially groups, but this class\n creates groups that have significant content.\n \nGroup.Block \nBlock \nGroup.Block \nBlock \nGroup.Line \nLine \nGroup.Line \nLine"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-group.html#Block","title":"Group.Block","content":"Group.Block \nBlock \nCreates a line group that does not contain any significant\n information for the parsing application."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-group.html#Block","title":"Group.Block","content":"Group.Block \nBlock \nCreates a block group. Block groups end with a string literal."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-group.html#Line","title":"Group.Line","content":"Group.Line \nLine \nCreates a line group that does not contain any significant\n information for the parsing application."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-group.html#Line","title":"Group.Line","content":"Group.Line \nLine \nCreates a line group. As the name says, it ends with a new line."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflict.html","title":"LALRConflict","content":"LALRConflict \n\n An LALR conflict.\n It arises when the parser can take different\n actions when encountering a \u0060Terminal\u0060 or the end.\n \nLALRConflict.StateIndex \nStateIndex \nLALRConflict.Symbol \nSymbol \nLALRConflict.Type \nType \nLALRConflict.Reason \nReason"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflict.html#StateIndex","title":"LALRConflict.StateIndex","content":"LALRConflict.StateIndex \nStateIndex \n\n The index of the \u0060LALRState\u0060 the conflict is taking place.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflict.html#Symbol","title":"LALRConflict.Symbol","content":"LALRConflict.Symbol \nSymbol \n\n The symbol upon whose encounter, the conflict happens.\n \u0060None\u0060 means the conflict happens when the parser reaches the end of input.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflict.html#Type","title":"LALRConflict.Type","content":"LALRConflict.Type \nType \n\n The type of the conflict.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflict.html#Reason","title":"LALRConflict.Reason","content":"LALRConflict.Reason \nReason \n\n The reason Farkle could not resolve the conflict.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictreason.html","title":"LALRConflictReason","content":"LALRConflictReason \n\n The reason an LALR conflict failed to be resolved.\n \nLALRConflictReason.NoPrecedenceInfo \nNoPrecedenceInfo \nLALRConflictReason.PartialPrecedenceInfo \nPartialPrecedenceInfo \nLALRConflictReason.DifferentOperatorScope \nDifferentOperatorScope \nLALRConflictReason.PrecedenceOnlySpecified \nPrecedenceOnlySpecified \nLALRConflictReason.SamePrecedence \nSamePrecedence \nLALRConflictReason.CannotResolveReduceReduce \nCannotResolveReduceReduce"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictreason.html#NoPrecedenceInfo","title":"LALRConflictReason.NoPrecedenceInfo","content":"LALRConflictReason.NoPrecedenceInfo \nNoPrecedenceInfo \n\n No prececence info were specified.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictreason.html#PartialPrecedenceInfo","title":"LALRConflictReason.PartialPrecedenceInfo","content":"LALRConflictReason.PartialPrecedenceInfo \nPartialPrecedenceInfo \n\n Precedence info were specified in only one of the two objects.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictreason.html#DifferentOperatorScope","title":"LALRConflictReason.DifferentOperatorScope","content":"LALRConflictReason.DifferentOperatorScope \nDifferentOperatorScope \n\n The objects were specified in different operator scopes.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictreason.html#PrecedenceOnlySpecified","title":"LALRConflictReason.PrecedenceOnlySpecified","content":"LALRConflictReason.PrecedenceOnlySpecified \nPrecedenceOnlySpecified \n\n The objects have the same precedence but no associativity.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictreason.html#SamePrecedence","title":"LALRConflictReason.SamePrecedence","content":"LALRConflictReason.SamePrecedence \nSamePrecedence \n\n The productions have the same precedence. This\n reason is specified only on Reduce-Reduce conflicts.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictreason.html#CannotResolveReduceReduce","title":"LALRConflictReason.CannotResolveReduceReduce","content":"LALRConflictReason.CannotResolveReduceReduce \nCannotResolveReduceReduce \n\n The operator scope cannot resolve Reduce-Reduce conflicts.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictstate.html","title":"LALRConflictState","content":"LALRConflictState \n\n An LALR state that might have a conflict. Its API is\n almost identical to \u0060Farkle.Grammar.LALRState\u0060 type,\n except that for each terminal or end of input there\n can be many possible actions.\n \nLALRConflictState.Index \nIndex \nLALRConflictState.Actions \nActions \nLALRConflictState.EOFActions \nEOFActions \nLALRConflictState.GotoActions \nGotoActions"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictstate.html#Index","title":"LALRConflictState.Index","content":"LALRConflictState.Index \nIndex \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictstate.html#Actions","title":"LALRConflictState.Actions","content":"LALRConflictState.Actions \nActions \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictstate.html#EOFActions","title":"LALRConflictState.EOFActions","content":"LALRConflictState.EOFActions \nEOFActions \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictstate.html#GotoActions","title":"LALRConflictState.GotoActions","content":"LALRConflictState.GotoActions \nGotoActions \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflicttype.html","title":"LALRConflictType","content":"LALRConflictType \n\n The type of an LALR conflict.\n \nLALRConflictType.Create \nCreate \nLALRConflictType.ShiftReduce \nShiftReduce \nLALRConflictType.ReduceReduce \nReduceReduce"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflicttype.html#Create","title":"LALRConflictType.Create","content":"LALRConflictType.Create \nCreate \n\n Creates an \u0060LALRConflictType\u0060 from the given conflicting \u0060LALRAction\u0060s.\n An exception is raised if the actions are neither both \u0022reduce\u0022 nor a \u0022shift\u0022 and a \u0022reduce\u0022.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflicttype.html#ShiftReduce","title":"LALRConflictType.ShiftReduce","content":"LALRConflictType.ShiftReduce \nShiftReduce \n\n A Shift-Reduce conflict\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflicttype.html#ReduceReduce","title":"LALRConflictType.ReduceReduce","content":"LALRConflictType.ReduceReduce \nReduceReduce \n\n A Reduce-Reduce conflict\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-nonterminal.html","title":"Nonterminal","content":"Nonterminal \n\n A helper static class to create nonterminals.\n \nNonterminal.Create \nCreate \nNonterminal.Create \nCreate \nNonterminal.CreateUntyped \nCreateUntyped \nNonterminal.CreateUntyped \nCreateUntyped"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-nonterminal.html#Create","title":"Nonterminal.Create","content":"Nonterminal.Create \nCreate \nCreates a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{t}\u0022\u003EDesigntimeFarkle{T}\u003C/a\u003E that represents\n a nonterminal with a given name and productions."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-nonterminal.html#Create","title":"Nonterminal.Create","content":"Nonterminal.Create \nCreate \nCreates a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/nonterminal{t}\u0022\u003ENonterminal{T}\u003C/a\u003E whose productions must be\n later set with \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/setproductions\u0022\u003ESetProductions\u003C/a\u003E. Useful for recursive productions. \nIf the productions are not set, an error will be raised on building."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-nonterminal.html#CreateUntyped","title":"Nonterminal.CreateUntyped","content":"Nonterminal.CreateUntyped \nCreateUntyped \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-nonterminal.html#CreateUntyped","title":"Nonterminal.CreateUntyped","content":"Nonterminal.CreateUntyped \nCreateUntyped \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-nonterminal-1.html","title":"Nonterminal\u003C\u0027T\u003E","content":"Nonterminal\u003C\u0027T\u003E \nA nonterminal symbol. It is made of \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/production{t}\u0022\u003EProduction{T}\u003C/a\u003Es. \nUser code must not inherit from this class,\n or an exception might be thrown. \nNonterminal\u003C\u0027T\u003E.SetProductions \nSetProductions \nNonterminal\u003C\u0027T\u003E.Name \nName"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-nonterminal-1.html#SetProductions","title":"Nonterminal\u003C\u0027T\u003E.SetProductions","content":"Nonterminal\u003C\u0027T\u003E.SetProductions \nSetProductions \nSets the nonterminal\u0027s productions. \nThis method must only be called once, and before\n building a designtime Farkle containing this nonterminal.\n Subsequent calls, and these after building are ignored."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-nonterminal-1.html#Name","title":"Nonterminal\u003C\u0027T\u003E.Name","content":"Nonterminal\u003C\u0027T\u003E.Name \nName \n\n The nonterminal\u0027s name.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle.html","title":"PrecompilableDesigntimeFarkle","content":"PrecompilableDesigntimeFarkle \nAn object holding a designtime Farkle whose\n grammar can be precompiled ahead of time. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EPrecompilable designtime Farkles are\n created by the \u003Ccode\u003ERuntimeFarkle.markForPrecompile\u003C/code\u003E\n function, the \u003Ccode\u003EMarkForPrecompile\u003C/code\u003E extension method,\n or their untyped variations. In F# they are built using\n the \u003Ccode\u003ERuntimeFarkle.buildPrecompiled\u003C/code\u003E function or\n its untyped variation.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EDespite their name, they lack the most fundamental\n property of designtime Farkles: composability. A designtime\n Farkle is meant to be marked for precompilation once, at the\n end of the grammar building process.\u003C/p\u003E \nPrecompilableDesigntimeFarkle.CreateGrammarDefinition \nCreateGrammarDefinition \nPrecompilableDesigntimeFarkle.TryGetPrecompiledGrammar \nTryGetPrecompiledGrammar \nPrecompilableDesigntimeFarkle.GrammarDefinition \nGrammarDefinition \nPrecompilableDesigntimeFarkle.Name \nName \nPrecompilableDesigntimeFarkle.InnerDesigntimeFarkle \nInnerDesigntimeFarkle \nPrecompilableDesigntimeFarkle.Assembly \nAssembly"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle.html#CreateGrammarDefinition","title":"PrecompilableDesigntimeFarkle.CreateGrammarDefinition","content":"PrecompilableDesigntimeFarkle.CreateGrammarDefinition \nCreateGrammarDefinition \n\n Creates a \u0060GrammarDefinition\u0060 from this precompiled designtime Farkle.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle.html#TryGetPrecompiledGrammar","title":"PrecompilableDesigntimeFarkle.TryGetPrecompiledGrammar","content":"PrecompilableDesigntimeFarkle.TryGetPrecompiledGrammar \nTryGetPrecompiledGrammar \n\n Tries to get the \u0060PrecompiledGrammar\u0060 object, if it exists in the assembly.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle.html#GrammarDefinition","title":"PrecompilableDesigntimeFarkle.GrammarDefinition","content":"PrecompilableDesigntimeFarkle.GrammarDefinition \nGrammarDefinition \n\n The \u0060GrammarDefinition\u0060 of this designtime Farkle.\n Deprecated, use \u0060CreateGrammarDefinition\u0060 instead.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle.html#Name","title":"PrecompilableDesigntimeFarkle.Name","content":"PrecompilableDesigntimeFarkle.Name \nName \n\n The name of the designtime Farkle held by this object.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle.html#InnerDesigntimeFarkle","title":"PrecompilableDesigntimeFarkle.InnerDesigntimeFarkle","content":"PrecompilableDesigntimeFarkle.InnerDesigntimeFarkle \nInnerDesigntimeFarkle \n\n The designtime Farkle held by this object.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle.html#Assembly","title":"PrecompilableDesigntimeFarkle.Assembly","content":"PrecompilableDesigntimeFarkle.Assembly \nAssembly \n\n The assembly from which this object was created.\n It must match the assembly that is being compiled.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle-1.html","title":"PrecompilableDesigntimeFarkle\u003C\u0027T\u003E","content":"PrecompilableDesigntimeFarkle\u003C\u0027T\u003E \nThe typed edition of \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle.html\u0022\u003EPrecompilableDesigntimeFarkle\u003C/a\u003E. \nPrecompilableDesigntimeFarkle\u003C\u0027T\u003E.InnerDesigntimeFarkle \nInnerDesigntimeFarkle"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilabledesigntimefarkle-1.html#InnerDesigntimeFarkle","title":"PrecompilableDesigntimeFarkle\u003C\u0027T\u003E.InnerDesigntimeFarkle","content":"PrecompilableDesigntimeFarkle\u003C\u0027T\u003E.InnerDesigntimeFarkle \nInnerDesigntimeFarkle \n\n The typed designtime Farkle held by this object.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompiledgrammar.html","title":"PrecompiledGrammar","content":"PrecompiledGrammar \n\n An object that represents a precompiled grammar inside an assembly.\n \nPrecompiledGrammar.GetGrammar \nGetGrammar \nPrecompiledGrammar.GrammarName \nGrammarName \nPrecompiledGrammar.Assembly \nAssembly \nPrecompiledGrammar.GetAllFromAssembly \nGetAllFromAssembly"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompiledgrammar.html#GetGrammar","title":"PrecompiledGrammar.GetGrammar","content":"PrecompiledGrammar.GetGrammar \nGetGrammar \n\n Gets the actual \u0060Grammar\u0060 of this object.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompiledgrammar.html#GrammarName","title":"PrecompiledGrammar.GrammarName","content":"PrecompiledGrammar.GrammarName \nGrammarName \n\n The precompiled grammar\u0027s name.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompiledgrammar.html#Assembly","title":"PrecompiledGrammar.Assembly","content":"PrecompiledGrammar.Assembly \nAssembly \n\n The \u0060Assembly\u0060 that contains this precompiled grammar.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompiledgrammar.html#GetAllFromAssembly","title":"PrecompiledGrammar.GetAllFromAssembly","content":"PrecompiledGrammar.GetAllFromAssembly \nGetAllFromAssembly \n\n Gets all precompiled grammars of an assembly.\n This function is safe to call from multiple threads and efficient to\n call many times with the same assembly. The cache it internally uses\n does not prevent the assembly from being unloaded.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilerextensions.html","title":"PrecompilerExtensions","content":"PrecompilerExtensions \n\n Extension methods that create and build precompilable designtime Farkles.\n \nPrecompilerExtensions.Build \nBuild \nPrecompilerExtensions.BuildUntyped \nBuildUntyped \nPrecompilerExtensions.MarkForPrecompile \nMarkForPrecompile \nPrecompilerExtensions.MarkForPrecompile \nMarkForPrecompile \nPrecompilerExtensions.MarkForPrecompile \nMarkForPrecompile \nPrecompilerExtensions.MarkForPrecompile \nMarkForPrecompile"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilerextensions.html#Build","title":"PrecompilerExtensions.Build","content":"PrecompilerExtensions.Build \nBuild \nBuilds a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/precompilabledesigntimefarkle{tresult}\u0022\u003EPrecompilableDesigntimeFarkle{TResult}\u003C/a\u003E into\n a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/runtimefarkle{tresult}\u0022\u003ERuntimeFarkle{TResult}\u003C/a\u003E. \nIf the designtime Farkle is not precompiled the resulting\n runtime Farkle will fail every time it is used."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilerextensions.html#BuildUntyped","title":"PrecompilerExtensions.BuildUntyped","content":"PrecompilerExtensions.BuildUntyped \nBuildUntyped \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilerextensions.html#MarkForPrecompile","title":"PrecompilerExtensions.MarkForPrecompile","content":"PrecompilerExtensions.MarkForPrecompile \nMarkForPrecompile \nMarks an untyped \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E\n as available to have its grammar precompiled ahead of time. \nThis function was introduced to allow using the precompiler from AOT environments where\n getting the calling assembly is not supported. Learn more, including usage restrictions at\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/the-precompiler.html\u0022 /\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilerextensions.html#MarkForPrecompile","title":"PrecompilerExtensions.MarkForPrecompile","content":"PrecompilerExtensions.MarkForPrecompile \nMarkForPrecompile \nMarks a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tresult}\u0022\u003EDesigntimeFarkle{TResult}\u003C/a\u003E as available\n to have its grammar precompiled ahead of time. \nThis function was introduced to allow using the precompiler from AOT environments where\n getting the calling assembly is not supported. Learn more, including usage restrictions at\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/the-precompiler.html\u0022 /\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilerextensions.html#MarkForPrecompile","title":"PrecompilerExtensions.MarkForPrecompile","content":"PrecompilerExtensions.MarkForPrecompile \nMarkForPrecompile \nMarks an untyped \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tresult}\u0022\u003EDesigntimeFarkle{TResult}\u003C/a\u003E\n as available to have its grammar precompiled ahead of time. \nThis function has to be directly called from\n user code. Learn more, including usage restrictions at\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/the-precompiler.html\u0022 /\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilerextensions.html#MarkForPrecompile","title":"PrecompilerExtensions.MarkForPrecompile","content":"PrecompilerExtensions.MarkForPrecompile \nMarkForPrecompile \nMarks a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{tresult}\u0022\u003EDesigntimeFarkle{TResult}\u003C/a\u003E as available\n to have its grammar precompiled ahead of time. \nThis function has to be directly called from\n user code. Learn more, including usage restrictions at\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/the-precompiler.html\u0022 /\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilerloaderexception.html","title":"PrecompilerLoaderException","content":"PrecompilerLoaderException \n\n This exception gets thrown when Farkle fails to load a precompiled grammar.\n Such exceptions indicate bugs and should they ever occur, opening an issue\n on GitHub would be very helpful.\n \nPrecompilerLoaderException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-precompilerloaderexception.html#\u0060\u0060.ctor\u0060\u0060","title":"PrecompilerLoaderException.\u0060\u0060.ctor\u0060\u0060","content":"PrecompilerLoaderException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedset.html","title":"PredefinedSet","content":"PredefinedSet \n\n A commonly used set of characters.\n \nPredefinedSet.Count \nCount \nPredefinedSet.CharacterRanges \nCharacterRanges \nPredefinedSet.Characters \nCharacters \nPredefinedSet.Name \nName \nPredefinedSet.Create \nCreate \nPredefinedSet._Name \n_Name \nPredefinedSet._CharacterRanges \n_CharacterRanges \nPredefinedSet.CharactersThunk \nCharactersThunk"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedset.html#Count","title":"PredefinedSet.Count","content":"PredefinedSet.Count \nCount \n\n The set\u0027s character count.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedset.html#CharacterRanges","title":"PredefinedSet.CharacterRanges","content":"PredefinedSet.CharacterRanges \nCharacterRanges \n\n A sequence of tuples that show the inclusive ranges of characters that belong to this set.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedset.html#Characters","title":"PredefinedSet.Characters","content":"PredefinedSet.Characters \nCharacters \n\n The set\u0027s characters.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedset.html#Name","title":"PredefinedSet.Name","content":"PredefinedSet.Name \nName \n\n The set\u0027s name. Used for informative purposes.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedset.html#Create","title":"PredefinedSet.Create","content":"PredefinedSet.Create \nCreate \n\n Creates a \u0060PredefinedSet\u0060 with the specified name and character ranges.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedset.html#_Name","title":"PredefinedSet._Name","content":"PredefinedSet._Name \n_Name \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedset.html#_CharacterRanges","title":"PredefinedSet._CharacterRanges","content":"PredefinedSet._CharacterRanges \n_CharacterRanges \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-predefinedset.html#CharactersThunk","title":"PredefinedSet.CharactersThunk","content":"PredefinedSet.CharactersThunk \nCharactersThunk \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-production-1.html","title":"Production\u003C\u0027T\u003E","content":"Production\u003C\u0027T\u003E \nA production. Productions are parts of \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/nonterminal{t}\u0022\u003ENonterminal{T}\u003C/a\u003Es. \nUser code must not implement this interface, or an exception might be thrown."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html","title":"ProductionBuilder","content":"ProductionBuilder \nThe base, untyped class of the production builders. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EA production builder is an object that helps to fluently construct \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/production{t}\u0022\u003EProduction{T}\u003C/a\u003Es\n     by aggregating the types of its significant members. The types of the production\u0027s\n     significant members are indicated by the type parameters. For example, a \u003Ccode\u003EProductionBuilder\u003C/code\u003E has no\n     significant members, and a \u003Ccode\u003EProductionBuilder{int, string}\u003C/code\u003E has two significant members: an integer\n     and a string.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EProduction builders have these common methods.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003E\u003Ccode\u003EAppend\u003C/code\u003E returns a production builder with the same significant members,\n     but the given \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E at the end of it. Alternatively, it can\n     accept a string which will be appended to the production as a literal.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003E\u003Ccode\u003EExtend\u003C/code\u003E returns a production builder with one more significant member,\n     whose type is determined by the given \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/designtimefarkle{t}\u0022\u003EDesigntimeFarkle{T}\u003C/a\u003E that will\n     be appended to it.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003E\u003Ccode\u003EFinish\u003C/code\u003E accepts a function that converts all the builder\u0027s significant members\n     into the eventual type of the returned \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/production{t}\u0022\u003EProduction{T}\u003C/a\u003E. It comes in two editions:\n     one that takes an F# function and another one that takes a delegate.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003E\u003Ccode\u003EWithPrecedence\u003C/code\u003E accepts a unique object which will represent the production in\n     operator scopes, providing contextual precedence. An overload of this method accepts\n     a reference to a variable that will hold the object, which will be created by Farkle.\n     It allows C# programmers to use \u003Ccode\u003Eout var\u003C/code\u003E instead of creating their own object.\u003C/p\u003E \nProductionBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nProductionBuilder.Append \nAppend \nProductionBuilder.Append \nAppend \nProductionBuilder.Extend \nExtend \nProductionBuilder.Finish \nFinish \nProductionBuilder.FinishConstant \nFinishConstant \nProductionBuilder.FinishFSharp \nFinishFSharp \nProductionBuilder.FinishRaw \nFinishRaw \nProductionBuilder.WithPrecedence \nWithPrecedence \nProductionBuilder.WithPrecedence \nWithPrecedence \nProductionBuilder.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder.(=\u003E) \n(=\u003E) \nProductionBuilder.Empty \nEmpty"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"ProductionBuilder.\u0060\u0060.ctor\u0060\u0060","content":"ProductionBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n Creates a production builder whose members are the given objects.\n The objects must be either strings or characters (where they will be\n interpreted as literals), or designtime Farkles. Passing an object of\n different type will raise an exception.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#Append","title":"ProductionBuilder.Append","content":"ProductionBuilder.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#Append","title":"ProductionBuilder.Append","content":"ProductionBuilder.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#Extend","title":"ProductionBuilder.Extend","content":"ProductionBuilder.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#Finish","title":"ProductionBuilder.Finish","content":"ProductionBuilder.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#FinishConstant","title":"ProductionBuilder.FinishConstant","content":"ProductionBuilder.FinishConstant \nFinishConstant \nCreates a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/production{t}\u0022\u003EProduction{T}\u003C/a\u003E that\n always returns a constant value."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#FinishFSharp","title":"ProductionBuilder.FinishFSharp","content":"ProductionBuilder.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#FinishRaw","title":"ProductionBuilder.FinishRaw","content":"ProductionBuilder.FinishRaw \nFinishRaw \nLike \u003Ccode\u003EFinish\u003C/code\u003E, but the given function accepts\n a read-only span of all the production\u0027s members as objects. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EThis method is intended to be used when finishing\n     a production with many significant members.\u003C/p\u003E"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#WithPrecedence","title":"ProductionBuilder.WithPrecedence","content":"ProductionBuilder.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence token\n assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#WithPrecedence","title":"ProductionBuilder.WithPrecedence","content":"ProductionBuilder.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#(.\u003E\u003E)","title":"ProductionBuilder.(.\u003E\u003E)","content":"ProductionBuilder.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#(.\u003E\u003E)","title":"ProductionBuilder.(.\u003E\u003E)","content":"ProductionBuilder.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#(.\u003E\u003E.)","title":"ProductionBuilder.(.\u003E\u003E.)","content":"ProductionBuilder.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#(=\u003E)","title":"ProductionBuilder.(=\u003E)","content":"ProductionBuilder.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilder.html#Empty","title":"ProductionBuilder.Empty","content":"ProductionBuilder.Empty \nEmpty \n\n A production builder with no members.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html","title":"ProductionBuilderExtensions","content":"ProductionBuilderExtensions \n\n Extension methods to create production builders.\n \nProductionBuilderExtensions.Appended \nAppended \nProductionBuilderExtensions.Appended \nAppended \nProductionBuilderExtensions.AsIs \nAsIs \nProductionBuilderExtensions.Extended \nExtended \nProductionBuilderExtensions.Finish \nFinish \nProductionBuilderExtensions.Finish \nFinish \nProductionBuilderExtensions.Finish \nFinish \nProductionBuilderExtensions.FinishConstant \nFinishConstant \nProductionBuilderExtensions.FinishConstant \nFinishConstant"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html#Appended","title":"ProductionBuilderExtensions.Appended","content":"ProductionBuilderExtensions.Appended \nAppended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html#Appended","title":"ProductionBuilderExtensions.Appended","content":"ProductionBuilderExtensions.Appended \nAppended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html#AsIs","title":"ProductionBuilderExtensions.AsIs","content":"ProductionBuilderExtensions.AsIs \nAsIs \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html#Extended","title":"ProductionBuilderExtensions.Extended","content":"ProductionBuilderExtensions.Extended \nExtended \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html#Finish","title":"ProductionBuilderExtensions.Finish","content":"ProductionBuilderExtensions.Finish \nFinish \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html#Finish","title":"ProductionBuilderExtensions.Finish","content":"ProductionBuilderExtensions.Finish \nFinish \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html#Finish","title":"ProductionBuilderExtensions.Finish","content":"ProductionBuilderExtensions.Finish \nFinish \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html#FinishConstant","title":"ProductionBuilderExtensions.FinishConstant","content":"ProductionBuilderExtensions.FinishConstant \nFinishConstant \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilderextensions.html#FinishConstant","title":"ProductionBuilderExtensions.FinishConstant","content":"ProductionBuilderExtensions.FinishConstant \nFinishConstant \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html","title":"Regex","content":"Regex \nA regular expression that is used to specify a tokenizer symbol. \nChecking two regular expressions for equality does not mean that they\n recognize the same symbols, but that their internal structure is the same. \nRegex.And \nAnd \nRegex.AtLeast \nAtLeast \nRegex.Between \nBetween \nRegex.Optional \nOptional \nRegex.Or \nOr \nRegex.Repeat \nRepeat \nRegex.ZeroOrMore \nZeroOrMore \nRegex.Choice \nChoice \nRegex.FromRegexString \nFromRegexString \nRegex.Join \nJoin \nRegex.Literal \nLiteral \nRegex.Literal \nLiteral \nRegex.NotOneOf \nNotOneOf \nRegex.OneOf \nOneOf \nRegex.Any \nAny \nRegex.Empty \nEmpty"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#And","title":"Regex.And","content":"Regex.And \nAnd \n\n Concatenates two regexes into a new one that recognizes\n a string of the first one, and then a string of the second.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#AtLeast","title":"Regex.AtLeast","content":"Regex.AtLeast \nAtLeast \n\n Returns a regex that recognizes at least a number of\n consecutive strings that are recognized by the given regex.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Between","title":"Regex.Between","content":"Regex.Between \nBetween \n\n Returns a regex that recognizes a ranged number\n of strings that are recognized by the given regex.\n The range is closed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Optional","title":"Regex.Optional","content":"Regex.Optional \nOptional \n\n Returns a regex that recognizes either the given regex or the empty string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Or","title":"Regex.Or","content":"Regex.Or \nOr \n\n Returns a regex that recognizes either a string of the first or the second given regex.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Repeat","title":"Regex.Repeat","content":"Regex.Repeat \nRepeat \n\n Returns a regex that recognizes an exact number\n of strings that are recognized by the given regex.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#ZeroOrMore","title":"Regex.ZeroOrMore","content":"Regex.ZeroOrMore \nZeroOrMore \n\n Returns a regex that recognizes zero or more\n strings that are recognized by the given regex.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Choice","title":"Regex.Choice","content":"Regex.Choice \nChoice \nReturns a regex that recognizes a string that\n is recognized by either of the given regexes. \nThis is an optimized edition of\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/or\u0022\u003EOr\u003C/a\u003E for many regexes."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#FromRegexString","title":"Regex.FromRegexString","content":"Regex.FromRegexString \nFromRegexString \n\n Returns a regex specified by a string.\n An invalid regex string will make the building process fail.\n See more at https://teo-tsirpanis.github.io/Farkle/string-regexes.html\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Join","title":"Regex.Join","content":"Regex.Join \nJoin \nConcatenates many regexes. \nThis is an optimized edition of\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/and\u0022\u003EAnd\u003C/a\u003E for many regexes."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Literal","title":"Regex.Literal","content":"Regex.Literal \nLiteral \n\n Returns a regex that only recognizes a single literal character.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Literal","title":"Regex.Literal","content":"Regex.Literal \nLiteral \n\n Returns a regex that only recognizes a literal string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#NotOneOf","title":"Regex.NotOneOf","content":"Regex.NotOneOf \nNotOneOf \n\n Returns a regex that recognizes any character,\n except of these on the given sequence.\n An empty sequence is equivalent to \u0060Regex.Any\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#OneOf","title":"Regex.OneOf","content":"Regex.OneOf \nOneOf \n\n Returns a regex that recognizes only one character\n of these on the given sequence of characters.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Any","title":"Regex.Any","content":"Regex.Any \nAny \nA regex that recognizes any single character\n that was not matched by anything else. \nNote that it\u0027s not the same with \u0022any character\u0022. See more at\n https://teo-tsirpanis.github.io/Farkle/string-regexes.html#The-dot-regex"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-regex.html#Empty","title":"Regex.Empty","content":"Regex.Empty \nEmpty \n\n A regex that recognizes only the empty string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-transformer-1.html","title":"T\u003C\u0027T\u003E","content":"T\u003C\u0027T\u003E \nA delegate that transforms the content\n of a terminal to an arbitrary object. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EIn F# this type is shortened to\n \u003Ccode\u003ET\u003C/code\u003E to avoid clutter in user code.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EA .NET delegate was used because read-only\n spans are incompatible with F# functions.\u003C/p\u003E \nT\u003C\u0027T\u003E.Invoke \nInvoke"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-transformer-1.html#Invoke","title":"T\u003C\u0027T\u003E.Invoke","content":"T\u003C\u0027T\u003E.Invoke \nInvoke \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminal.html","title":"Terminal","content":"Terminal \n\n A helper static class to create terminals.\n \nTerminal.Create \nCreate \nTerminal.Create \nCreate \nTerminal.Literal \nLiteral \nTerminal.Virtual \nVirtual \nTerminal.NewLine \nNewLine"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminal.html#Create","title":"Terminal.Create","content":"Terminal.Create \nCreate \nCreates a terminal that does not contain any significant\n information for the parsing application."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminal.html#Create","title":"Terminal.Create","content":"Terminal.Create \nCreate \nCreates a terminal that contains significant\n information of type \u003Ctypeparamref name=\u0022T\u0022 /\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminal.html#Literal","title":"Terminal.Literal","content":"Terminal.Literal \nLiteral \nCreates a terminal that recognizes a literal string. \nIt does not return anything."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminal.html#Virtual","title":"Terminal.Virtual","content":"Terminal.Virtual \nVirtual \nCreates a virtual terminal. This method is\n intended for use in advanced scenarios."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminal.html#NewLine","title":"Terminal.NewLine","content":"Terminal.NewLine \nNewLine \nA special kind of \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E\n that represents a new line. \nThis is different and better than a literal of\n newline characters. If used anywhere in a grammar, it indicates that it\n is line-based, which means that newline characters are not noise.\n Newline characters are considered the character sequences\n \u003Ccode\u003E\\r\u003C/code\u003E (deprecated and will be removed in a future release),\n \u003Ccode\u003E\\n\u003C/code\u003E, or \u003Ccode\u003E\\r\\n\u003C/code\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-conflictresolutiondecision.html","title":"ConflictResolutionDecision","content":"ConflictResolutionDecision \nThe decision a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-lalrconflictresolver.html\u0022\u003ELALRConflictResolver\u003C/a\u003E took. \nConflictResolutionDecision.ChooseOption1 \nChooseOption1 \nConflictResolutionDecision.ChooseOption2 \nChooseOption2 \nConflictResolutionDecision.ChooseNeither \nChooseNeither \nConflictResolutionDecision.CannotChoose \nCannotChoose"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-conflictresolutiondecision.html#ChooseOption1","title":"ConflictResolutionDecision.ChooseOption1","content":"ConflictResolutionDecision.ChooseOption1 \nChooseOption1 \nThe resolver chose the first option. \nIn Shift-Reduce conflicts it means to shift.\n In Reduce-Reduce conflicts it means to reduce the first production."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-conflictresolutiondecision.html#ChooseOption2","title":"ConflictResolutionDecision.ChooseOption2","content":"ConflictResolutionDecision.ChooseOption2 \nChooseOption2 \nThe resolver chose the second option. \nIn Shift-Reduce conflicts it means to reduce.\n In Reduce-Reduce conflicts it means to reduce the second production."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-conflictresolutiondecision.html#ChooseNeither","title":"ConflictResolutionDecision.ChooseNeither","content":"ConflictResolutionDecision.ChooseNeither \nChooseNeither \nThe resolver chose neither option. \nThe parser will fail with a syntax error."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-conflictresolutiondecision.html#CannotChoose","title":"ConflictResolutionDecision.CannotChoose","content":"ConflictResolutionDecision.CannotChoose \nCannotChoose \n\n The resolver cannot choose an action. The reason is specified.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-lalrconflictresolver.html","title":"LALRConflictResolver","content":"LALRConflictResolver \n\n An object that resolves LALR conflicts. By default\n its virtual methods fail to perform any resolution.\n \nLALRConflictResolver.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nLALRConflictResolver.ResolveReduceReduceConflict \nResolveReduceReduceConflict \nLALRConflictResolver.ResolveShiftReduceConflict \nResolveShiftReduceConflict \nLALRConflictResolver.Default \nDefault"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-lalrconflictresolver.html#\u0060\u0060.ctor\u0060\u0060","title":"LALRConflictResolver.\u0060\u0060.ctor\u0060\u0060","content":"LALRConflictResolver.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-lalrconflictresolver.html#ResolveReduceReduceConflict","title":"LALRConflictResolver.ResolveReduceReduceConflict","content":"LALRConflictResolver.ResolveReduceReduceConflict \nResolveReduceReduceConflict \n\n Tries to resolve a Reduce-Reduce conflict.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-lalrconflictresolver.html#ResolveShiftReduceConflict","title":"LALRConflictResolver.ResolveShiftReduceConflict","content":"LALRConflictResolver.ResolveShiftReduceConflict \nResolveShiftReduceConflict \n\n Tries to resolve a Shift-Reduce conflict.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-lalrconflictresolution-lalrconflictresolver.html#Default","title":"LALRConflictResolver.Default","content":"LALRConflictResolver.Default \nDefault \n\n A default resolver that always fails.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-associativitygroup.html","title":"AssociativityGroup","content":"AssociativityGroup \nA group of symbols that have the same associativity and precedence.\n This class and its descendants accept arrays of objects that correspond\n to symbols. \n\u003Cp class=\u0027fsdocs-para\u0027\u003ETerminals and things that will turn into terminals correspond\n to their designtime Farkle. Literals also correspond to their content as a\n string and productions correspond to the object passed or returned from the\n \u003Ccode\u003EWithPrecedence\u003C/code\u003E family of functions in production builders.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EPrior to Farkle 6.3.0, using the same terminal with multiple\n designtime Farkles (such as the original and a renamed one) would\n cause undefined behavior.\u003C/p\u003E \nAssociativityGroup.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAssociativityGroup.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAssociativityGroup.AssociativityType \nAssociativityType"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-associativitygroup.html#\u0060\u0060.ctor\u0060\u0060","title":"AssociativityGroup.\u0060\u0060.ctor\u0060\u0060","content":"AssociativityGroup.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-associativitygroup.html#\u0060\u0060.ctor\u0060\u0060","title":"AssociativityGroup.\u0060\u0060.ctor\u0060\u0060","content":"AssociativityGroup.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-associativitygroup.html#AssociativityType","title":"AssociativityGroup.AssociativityType","content":"AssociativityGroup.AssociativityType \nAssociativityType \n\n The group\u0027s symbols\u0027 associativity.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-associativitytype.html","title":"AssociativityType","content":"AssociativityType \n\n An associativity group\u0027s type. It determines the course of action in\n case of Shift-Reduce conflicts between symbols with the same precedence.\n \nAssociativityType.NonAssociative \nNonAssociative \nAssociativityType.LeftAssociative \nLeftAssociative \nAssociativityType.RightAssociative \nRightAssociative \nAssociativityType.PrecedenceOnly \nPrecedenceOnly"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-associativitytype.html#NonAssociative","title":"AssociativityType.NonAssociative","content":"AssociativityType.NonAssociative \nNonAssociative \n\n The group\u0027s symbols are non-associative. Shift-Reduce\n conflicts will be resolved in favor of neither, failing\n with a syntax error at parse time.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-associativitytype.html#LeftAssociative","title":"AssociativityType.LeftAssociative","content":"AssociativityType.LeftAssociative \nLeftAssociative \n\n The group\u0027s symbols are left-associative. Shift-Reduce\n conflicts will be resolved in favor of Reduce.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-associativitytype.html#RightAssociative","title":"AssociativityType.RightAssociative","content":"AssociativityType.RightAssociative \nRightAssociative \n\n The group\u0027s symbols are right-associative. Shift-Reduce\n conflicts will be resolved in favor of Shift.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-associativitytype.html#PrecedenceOnly","title":"AssociativityType.PrecedenceOnly","content":"AssociativityType.PrecedenceOnly \nPrecedenceOnly \n\n Thr group\u0027s symbols have no associativity; only precedence.\n Shift-Reduce conflicts will not be resolved and will fail the build.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-leftassociative.html","title":"LeftAssociative","content":"LeftAssociative \n\n A shortcut for creating left-associative groups.\n \nLeftAssociative.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-leftassociative.html#\u0060\u0060.ctor\u0060\u0060","title":"LeftAssociative.\u0060\u0060.ctor\u0060\u0060","content":"LeftAssociative.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-nonassociative.html","title":"NonAssociative","content":"NonAssociative \n\n A shortcut for creating non-associative groups.\n \nNonAssociative.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-nonassociative.html#\u0060\u0060.ctor\u0060\u0060","title":"NonAssociative.\u0060\u0060.ctor\u0060\u0060","content":"NonAssociative.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-operatorscope.html","title":"OperatorScope","content":"OperatorScope \nA group of associativity groups sorted by precedence. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EA symbol in an operator scope has higher precedence than\n another one if it appears in a group below the former symbol\u0027s group.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EIf the same symbol is specified in multiple associativity groups,\n it will have the precedence of the earliest group in which it appeared.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003ESymbols from multiple operator scopes cannot be compared for precedence.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EA symbol can belong in only one operator scope; if it belongs in more,\n the operator scope to which the symbol will be assigned is undefined.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EOperator scopes are used to automatically resolve Shift-Reduce conflicts.\n Resolving Reduce-Reduce conflicts can also happen but it must be explicitly\n opt-in by passing a boolean argument of  in the first\n argument of the appropriate operator scope\u0027s constructor overloads.\u003C/p\u003E \nOperatorScope.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nOperatorScope.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nOperatorScope.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nOperatorScope.ResolvesReduceReduceConflict \nResolvesReduceReduceConflict \nOperatorScope.Empty \nEmpty"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-operatorscope.html#\u0060\u0060.ctor\u0060\u0060","title":"OperatorScope.\u0060\u0060.ctor\u0060\u0060","content":"OperatorScope.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-operatorscope.html#\u0060\u0060.ctor\u0060\u0060","title":"OperatorScope.\u0060\u0060.ctor\u0060\u0060","content":"OperatorScope.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-operatorscope.html#\u0060\u0060.ctor\u0060\u0060","title":"OperatorScope.\u0060\u0060.ctor\u0060\u0060","content":"OperatorScope.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-operatorscope.html#ResolvesReduceReduceConflict","title":"OperatorScope.ResolvesReduceReduceConflict","content":"OperatorScope.ResolvesReduceReduceConflict \nResolvesReduceReduceConflict \n\n Whether Farkle uses this operator scope to automatically resolve\n Reduce-Reduce conflicts. Because the impact of this feature is\n unknown, it is set to false by default. It can be changed by\n passing true to a constructor overload that accepts a boolean.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-operatorscope.html#Empty","title":"OperatorScope.Empty","content":"OperatorScope.Empty \nEmpty \n\n An operator scope that does not contain any associativity groups.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-precedenceonly.html","title":"PrecedenceOnly","content":"PrecedenceOnly \n\n A shortcut for creating associativity groups with only precedence and no associativity between them.\n \nPrecedenceOnly.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-precedenceonly.html#\u0060\u0060.ctor\u0060\u0060","title":"PrecedenceOnly.\u0060\u0060.ctor\u0060\u0060","content":"PrecedenceOnly.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-rightassociative.html","title":"RightAssociative","content":"RightAssociative \n\n A shortcut for creating right-associative groups.\n \nRightAssociative.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-operatorprecedence-rightassociative.html#\u0060\u0060.ctor\u0060\u0060","title":"RightAssociative.\u0060\u0060.ctor\u0060\u0060","content":"RightAssociative.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E \nA production builder with 16 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-16.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15, \u0027T16\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E \nA production builder with 15 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-15.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14, \u0027T15\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E \nA production builder with 14 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-14.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13, \u0027T14\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E \nA production builder with 13 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-13.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12, \u0027T13\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E \nA production builder with 12 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-12.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11, \u0027T12\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E \nA production builder with 11 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-11.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10, \u0027T11\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E \nA production builder with 10 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-10.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9, \u0027T10\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E \nA production builder with 9 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-9.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8, \u0027T9\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E \nA production builder with 8 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-8.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E \nA production builder with 7 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-7.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E \nA production builder with 6 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-6.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E \nA production builder with 5 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-5.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E \nA production builder with 4 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-4.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E \nA production builder with 3 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-3.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2, \u0027T3\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E \nA production builder with 2 significant members. \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#Append","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Append","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#Extend","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#Finish","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-2.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1, \u0027T2\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html","title":"ProductionBuilder\u003C\u0027T1\u003E","content":"ProductionBuilder\u003C\u0027T1\u003E \nA production builder with 1 significant member. \nProductionBuilder\u003C\u0027T1\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1\u003E.Append \nAppend \nProductionBuilder\u003C\u0027T1\u003E.AsIs \nAsIs \nProductionBuilder\u003C\u0027T1\u003E.Extend \nExtend \nProductionBuilder\u003C\u0027T1\u003E.Finish \nFinish \nProductionBuilder\u003C\u0027T1\u003E.FinishFSharp \nFinishFSharp \nProductionBuilder\u003C\u0027T1\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1\u003E.WithPrecedence \nWithPrecedence \nProductionBuilder\u003C\u0027T1\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nProductionBuilder\u003C\u0027T1\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nProductionBuilder\u003C\u0027T1\u003E.(=\u003E) \n(=\u003E)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#Append","title":"ProductionBuilder\u003C\u0027T1\u003E.Append","content":"ProductionBuilder\u003C\u0027T1\u003E.Append \nAppend \n\n Creates a production builder from this one with\n the given string added to the end as a literal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#Append","title":"ProductionBuilder\u003C\u0027T1\u003E.Append","content":"ProductionBuilder\u003C\u0027T1\u003E.Append \nAppend \n\n Creates a production builder from this one with the given untyped\n designtime Farkle added to the end as a not significant member.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#AsIs","title":"ProductionBuilder\u003C\u0027T1\u003E.AsIs","content":"ProductionBuilder\u003C\u0027T1\u003E.AsIs \nAsIs \n\n Returns a production that returns its significant member without changing it.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#Extend","title":"ProductionBuilder\u003C\u0027T1\u003E.Extend","content":"ProductionBuilder\u003C\u0027T1\u003E.Extend \nExtend \n\n Creates a production builder from this one with the given typed\n designtime Farkle added to the end as a significant member.\n Up to sixteen significant members can be added to a production builder.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#Finish","title":"ProductionBuilder\u003C\u0027T1\u003E.Finish","content":"ProductionBuilder\u003C\u0027T1\u003E.Finish \nFinish \n\n Finishes the production\u0027s construction and returns it.\n This method accepts a delegate that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#FinishFSharp","title":"ProductionBuilder\u003C\u0027T1\u003E.FinishFSharp","content":"ProductionBuilder\u003C\u0027T1\u003E.FinishFSharp \nFinishFSharp \n\n Finishes the production\u0027s construction and returns it.\n This method accepts an F# function that accepts the production\u0027s\n significant members and returns the production\u0027s output.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with a unique contextual precedence\n token assigned to it, which is also returned by reference. \nThis method allows a simpler experience for C# users."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#WithPrecedence","title":"ProductionBuilder\u003C\u0027T1\u003E.WithPrecedence","content":"ProductionBuilder\u003C\u0027T1\u003E.WithPrecedence \nWithPrecedence \nReturns a production builder with the given contextual precedence token."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(string)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#(.\u003E\u003E)","title":"ProductionBuilder\u003C\u0027T1\u003E.(.\u003E\u003E)","content":"ProductionBuilder\u003C\u0027T1\u003E.(.\u003E\u003E) \n(.\u003E\u003E) \nThe \u003Ccode\u003EAppend(DesigntimeFarkle)\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#(.\u003E\u003E.)","title":"ProductionBuilder\u003C\u0027T1\u003E.(.\u003E\u003E.)","content":"ProductionBuilder\u003C\u0027T1\u003E.(.\u003E\u003E.) \n(.\u003E\u003E.) \nThe \u003Ccode\u003EExtend\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-productionbuilders-productionbuilder-1.html#(=\u003E)","title":"ProductionBuilder\u003C\u0027T1\u003E.(=\u003E)","content":"ProductionBuilder\u003C\u0027T1\u003E.(=\u003E) \n(=\u003E) \nThe \u003Ccode\u003EFinishFSharp\u003C/code\u003E method as an F# operator."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-untyped-nonterminal.html","title":"Nonterminal","content":"Nonterminal \nA nonterminal that does not have an associated return type. \n\u003Cp class=\u0027fsdocs-para\u0027\u003EThis type is easier to work with if you want to just\n define a grammar as you would do in GOLD Parser. Because it only implements\n the untyped \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E interface,\n it can only be \u003Ccode\u003EAppend\u003C/code\u003Eed but not \u003Ccode\u003EExtend\u003C/code\u003Eed in\n production builders. Overall, it is a normal designtime Farkle.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EUser code must not inherit from this class,\n or an exception might be thrown.\u003C/p\u003E \nNonterminal.SetProductions \nSetProductions \nNonterminal.Name \nName \nNonterminal.Create \nCreate \nNonterminal.Create \nCreate"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-untyped-nonterminal.html#SetProductions","title":"Nonterminal.SetProductions","content":"Nonterminal.SetProductions \nSetProductions \n \nThis method must only be called once, and before\n building a designtime Farkle containing this nonterminal.\n Subsequent calls, and these after building are ignored.\n It accepts un\u003Ccode\u003EFinish\u003C/code\u003Eed production builders with no significant members."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-untyped-nonterminal.html#Name","title":"Nonterminal.Name","content":"Nonterminal.Name \nName \n\n The nonterminal\u0027s name.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-untyped-nonterminal.html#Create","title":"Nonterminal.Create","content":"Nonterminal.Create \nCreate \nCreates an untyped \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-designtimefarkle.html\u0022\u003EDesigntimeFarkle\u003C/a\u003E\n from a nonterminal with the given name and productions,\n declared as production builders."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-untyped-nonterminal.html#Create","title":"Nonterminal.Create","content":"Nonterminal.Create \nCreate \nCreates an untyped \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-nonterminal.html\u0022\u003ENonterminal\u003C/a\u003E.\n Its productions must be set later. \nThis function is useful for the creation of recursive productions."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap.html","title":"RangeMap","content":"RangeMap \n\n This module is public due to compiler limitations.\n Do not use it; it is subject to be removed or altered at any time.\n \nRangeMap.ofGroupedRanges \nofGroupedRanges \nRangeMap.ofSeqEx \nofSeqEx \nRangeMap.toSeqEx \ntoSeqEx"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap.html#ofGroupedRanges","title":"RangeMap.ofGroupedRanges","content":"RangeMap.ofGroupedRanges \nofGroupedRanges \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap.html#ofSeqEx","title":"RangeMap.ofSeqEx","content":"RangeMap.ofSeqEx \nofSeqEx \n\n Creates a \u0060RangeMap\u0060 from a sequence of key-value pairs.\n The keys can be of any type that can has the notion of \u0022one\u0022 and equality checking.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap.html#toSeqEx","title":"RangeMap.toSeqEx","content":"RangeMap.toSeqEx \ntoSeqEx \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap-2.html","title":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E","content":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E \n\n An associative data structure that assigns ranges of keys to a value.\n \nRangeMap\u003C\u0027TKey, \u0027TValue\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nRangeMap\u003C\u0027TKey, \u0027TValue\u003E.ContainsKey \nContainsKey \nRangeMap\u003C\u0027TKey, \u0027TValue\u003E.GetEnumerator \nGetEnumerator \nRangeMap\u003C\u0027TKey, \u0027TValue\u003E.TryFind \nTryFind \nRangeMap\u003C\u0027TKey, \u0027TValue\u003E.Elements \nElements \nRangeMap\u003C\u0027TKey, \u0027TValue\u003E.IsEmpty \nIsEmpty \nRangeMap\u003C\u0027TKey, \u0027TValue\u003E.Empty \nEmpty"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap-2.html#\u0060\u0060.ctor\u0060\u0060","title":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.\u0060\u0060.ctor\u0060\u0060","content":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\n Creates a range map from a sequence of range-value pairs.\n An exception will be raised if some ranges overlap.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap-2.html#ContainsKey","title":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.ContainsKey","content":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.ContainsKey \nContainsKey \n\n Checks if the given element exists in this range map.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap-2.html#GetEnumerator","title":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.GetEnumerator","content":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.GetEnumerator \nGetEnumerator \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap-2.html#TryFind","title":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.TryFind","content":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.TryFind \nTryFind \n\n Tries to find an element, returning its\n corresponding value, if it exists.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap-2.html#Elements","title":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.Elements","content":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.Elements \nElements \n\n A read-only span containing the elements of the range map.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap-2.html#IsEmpty","title":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.IsEmpty","content":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.IsEmpty \nIsEmpty \n\n Whether this range map is empty.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemap-2.html#Empty","title":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.Empty","content":"RangeMap\u003C\u0027TKey, \u0027TValue\u003E.Empty \nEmpty \n\n An empty range map.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemapelement-2.html","title":"RangeMapElement\u003C\u0027TKey, \u0027a\u003E","content":"RangeMapElement\u003C\u0027TKey, \u0027a\u003E \n\n \u0391 closed interval whose elements are assigned a value.\n \nRangeMapElement\u003C\u0027TKey, \u0027a\u003E.KeyFrom \nKeyFrom \nRangeMapElement\u003C\u0027TKey, \u0027a\u003E.KeyTo \nKeyTo \nRangeMapElement\u003C\u0027TKey, \u0027a\u003E.Value \nValue"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemapelement-2.html#KeyFrom","title":"RangeMapElement\u003C\u0027TKey, \u0027a\u003E.KeyFrom","content":"RangeMapElement\u003C\u0027TKey, \u0027a\u003E.KeyFrom \nKeyFrom \n\n The start of the interval.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemapelement-2.html#KeyTo","title":"RangeMapElement\u003C\u0027TKey, \u0027a\u003E.KeyTo","content":"RangeMapElement\u003C\u0027TKey, \u0027a\u003E.KeyTo \nKeyTo \n\n The end of the interval.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-collections-rangemapelement-2.html#Value","title":"RangeMapElement\u003C\u0027TKey, \u0027a\u003E.Value","content":"RangeMapElement\u003C\u0027TKey, \u0027a\u003E.Value \nValue \n\n The value that gets assigned\n to the elements of the interval.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-dfasymbolmodule.html","title":"DFASymbol","content":"DFASymbol \n\n Functions to work with \u0060DFASymbol\u0060s.\n \nDFASymbol.toString \ntoString"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-dfasymbolmodule.html#toString","title":"DFASymbol.toString","content":"DFASymbol.toString \ntoString \n\n Converts a \u0060DFASymbol\u0060 to a string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egt.html","title":"EGT","content":"EGT \n\n Functions to read and write grammars from EGT files.\n Grammars can be read either from GOLD Parser\u0027s Enhanced\n Grammar Tables (version 5.0) or from Farkle\u0027s EGTneo format.\n EGTneo (new encoding option) is a file format designed for Farkle that\n is more compact and easier to read. GOLD Parser cannot read EGTneo files.\n Grammars can only be written in the EGTneo format.\n \nEGT.ofStream \nofStream \nEGT.ofBase64String \nofBase64String \nEGT.ofFile \nofFile \nEGT.toStreamNeo \ntoStreamNeo"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egt.html#ofStream","title":"EGT.ofStream","content":"EGT.ofStream \nofStream \n\n Reads a \u0060Grammar\u0060 from a stream.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egt.html#ofBase64String","title":"EGT.ofBase64String","content":"EGT.ofBase64String \nofBase64String \n\n Reads a \u0060Grammar\u0060 from a Base64-encoded string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egt.html#ofFile","title":"EGT.ofFile","content":"EGT.ofFile \nofFile \n\n Reads an EGT file from the file system and returns a \u0060Grammar\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egt.html#toStreamNeo","title":"EGT.toStreamNeo","content":"EGT.toStreamNeo \ntoStreamNeo \n\n Writes the given \u0060Grammar\u0060 to a stream in the EGTneo format.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-advancemode.html","title":"AdvanceMode","content":"AdvanceMode \n\n A type indicating how a group advances.\n \nAdvanceMode.Token \nToken \nAdvanceMode.Character \nCharacter"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-advancemode.html#Token","title":"AdvanceMode.Token","content":"AdvanceMode.Token \nToken \n\n The group advances by one token at a time.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-advancemode.html#Character","title":"AdvanceMode.Character","content":"AdvanceMode.Character \nCharacter \n\n The group advances by one character at a time.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-dfastate.html","title":"DFAState","content":"DFAState \n\n A DFA state. It defines the logic that produces tokens out of strings.\n It consists of edges that the tokenizer follows, depending on the character it encounters.\n \nDFAState.Index \nIndex \nDFAState.Edges \nEdges \nDFAState.AcceptSymbol \nAcceptSymbol \nDFAState.AnythingElse \nAnythingElse"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-dfastate.html#Index","title":"DFAState.Index","content":"DFAState.Index \nIndex \n\n The index of the state in the DFA state table.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-dfastate.html#Edges","title":"DFAState.Edges","content":"DFAState.Edges \nEdges \n\n The edges of the state, that match a character to a\n next state, using a custom data structure. A character\n can be set to explicitly fail, prohibiting the use of\n \u0060AnythingElse\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-dfastate.html#AcceptSymbol","title":"DFAState.AcceptSymbol","content":"DFAState.AcceptSymbol \nAcceptSymbol \n\n Whether this state accepts a symbol or not.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-dfastate.html#AnythingElse","title":"DFAState.AnythingElse","content":"DFAState.AnythingElse \nAnythingElse \n\n The state to maybe go to (or fail) in\n case the character had no matching edge.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-dfasymbol.html","title":"DFASymbol","content":"DFASymbol \n\n A symbol that can be yielded by the DFA.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-endingmode.html","title":"EndingMode","content":"EndingMode \n\n A type indicating how the ending symbol of a group is handled.\n \nEndingMode.Open \nOpen \nEndingMode.Closed \nClosed"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-endingmode.html#Open","title":"EndingMode.Open","content":"EndingMode.Open \nOpen \n\n The ending symbol is preserved on the input queue.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-endingmode.html#Closed","title":"EndingMode.Closed","content":"EndingMode.Closed \nClosed \n\n The ending symbol is consumed.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html","title":"Grammar","content":"Grammar \n\n A context-free grammar according to which Farkle can parse text.\n \nGrammar.GetTerminalByName \nGetTerminalByName \nGrammar.Groups \nGroups \nGrammar.StartSymbol \nStartSymbol \nGrammar.Symbols \nSymbols \nGrammar.Properties \nProperties \nGrammar.DFAStates \nDFAStates \nGrammar.LALRStates \nLALRStates \nGrammar.Productions \nProductions \nGrammar._Properties \n_Properties \nGrammar._StartSymbol \n_StartSymbol \nGrammar._Symbols \n_Symbols \nGrammar._Productions \n_Productions \nGrammar._Groups \n_Groups \nGrammar._LALRStates \n_LALRStates \nGrammar._DFAStates \n_DFAStates"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#GetTerminalByName","title":"Grammar.GetTerminalByName","content":"Grammar.GetTerminalByName \nGetTerminalByName \nFinds a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-builder-terminal.html\u0022\u003ETerminal\u003C/a\u003E with a specific name. \nThis method is useful for those that write custom\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizer.html\u0022\u003ETokenizer\u003C/a\u003E. It executes in linear\n time. For this reason, it is advised to be called once per terminal name."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#Groups","title":"Grammar.Groups","content":"Grammar.Groups \nGroups \n\n The grammar\u0027s \u0060Group\u0060s.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#StartSymbol","title":"Grammar.StartSymbol","content":"Grammar.StartSymbol \nStartSymbol \n\n The grammar\u0027s start \u0060Nonterminal\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#Symbols","title":"Grammar.Symbols","content":"Grammar.Symbols \nSymbols \n\n The grammar\u0027s terminals, nonterminals, and noise symbols.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#Properties","title":"Grammar.Properties","content":"Grammar.Properties \nProperties \n\n Additional information about the grammar.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#DFAStates","title":"Grammar.DFAStates","content":"Grammar.DFAStates \nDFAStates \n\n The grammar\u0027s DFA state table.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#LALRStates","title":"Grammar.LALRStates","content":"Grammar.LALRStates \nLALRStates \n\n The grammar\u0027s LALR state table.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#Productions","title":"Grammar.Productions","content":"Grammar.Productions \nProductions \n\n The grammar\u0027s \u0060Production\u0060s.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#_Properties","title":"Grammar._Properties","content":"Grammar._Properties \n_Properties \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#_StartSymbol","title":"Grammar._StartSymbol","content":"Grammar._StartSymbol \n_StartSymbol \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#_Symbols","title":"Grammar._Symbols","content":"Grammar._Symbols \n_Symbols \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#_Productions","title":"Grammar._Productions","content":"Grammar._Productions \n_Productions \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#_Groups","title":"Grammar._Groups","content":"Grammar._Groups \n_Groups \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#_LALRStates","title":"Grammar._LALRStates","content":"Grammar._LALRStates \n_LALRStates \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html#_DFAStates","title":"Grammar._DFAStates","content":"Grammar._DFAStates \n_DFAStates \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarproperties.html","title":"GrammarProperties","content":"GrammarProperties \n\n Stores additional information about a grammar. The members of this\n type are purely informative and not used by Farkle\u0027s parser in any way.\n They are mostly used from the templates.\n \nGrammarProperties.Name \nName \nGrammarProperties.CaseSensitive \nCaseSensitive \nGrammarProperties.AutoWhitespace \nAutoWhitespace \nGrammarProperties.GeneratedBy \nGeneratedBy \nGrammarProperties.GeneratedDate \nGeneratedDate \nGrammarProperties.Source \nSource"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarproperties.html#Name","title":"GrammarProperties.Name","content":"GrammarProperties.Name \nName \n\n The grammar\u0027s name. Usually it is the starting symbol\u0027s name.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarproperties.html#CaseSensitive","title":"GrammarProperties.CaseSensitive","content":"GrammarProperties.CaseSensitive \nCaseSensitive \n\n Whether the grammar was declared to be case-sensitive.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarproperties.html#AutoWhitespace","title":"GrammarProperties.AutoWhitespace","content":"GrammarProperties.AutoWhitespace \nAutoWhitespace \n\n Whether the grammar was declared to ignore whitespace characters.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarproperties.html#GeneratedBy","title":"GrammarProperties.GeneratedBy","content":"GrammarProperties.GeneratedBy \nGeneratedBy \n\n The tool that created this grammar.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarproperties.html#GeneratedDate","title":"GrammarProperties.GeneratedDate","content":"GrammarProperties.GeneratedDate \nGeneratedDate \n\n When the grammar was created.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarproperties.html#Source","title":"GrammarProperties.Source","content":"GrammarProperties.Source \nSource \n\n Where the grammar came from.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarsource.html","title":"GrammarSource","content":"GrammarSource \n\n Indicates where a grammar came from.\n \nGrammarSource.Built \nBuilt \nGrammarSource.LoadedFromFile \nLoadedFromFile \nGrammarSource.Precompiled \nPrecompiled"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarsource.html#Built","title":"GrammarSource.Built","content":"GrammarSource.Built \nBuilt \n\n The grammar was built by Farkle using the Farkle.Builder API.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarsource.html#LoadedFromFile","title":"GrammarSource.LoadedFromFile","content":"GrammarSource.LoadedFromFile \nLoadedFromFile \n\n The grammar was loaded from a grammar file\n using the Farkle.Grammar.EGT module\u0027s functions.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammarsource.html#Precompiled","title":"GrammarSource.Precompiled","content":"GrammarSource.Precompiled \nPrecompiled \n\n The grammar had been precompiled and was loaded from an assembly.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html","title":"Group","content":"Group \n\n A lexical group.\n In GOLD, lexical groups are used for situations where a number\n of recognized tokens should be organized into a single \u0022group\u0022.\n This mechanism is most commonly used to handle line and block comments.\n However, it is not limited to \u0022noise\u0022, but can be used for any content.\n \nGroup.IsEndedBy \nIsEndedBy \nGroup.IsTerminal \nIsTerminal \nGroup.IsEndedByNewline \nIsEndedByNewline \nGroup.Name \nName \nGroup.ContainerSymbol \nContainerSymbol \nGroup.Start \nStart \nGroup.End \nEnd \nGroup.AdvanceMode \nAdvanceMode \nGroup.EndingMode \nEndingMode \nGroup.Nesting \nNesting"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#IsEndedBy","title":"Group.IsEndedBy","content":"Group.IsEndedBy \nIsEndedBy \n\n Whether this group is ended by the given \u0060DFASymbol\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#IsTerminal","title":"Group.IsTerminal","content":"Group.IsTerminal \nIsTerminal \n\n Whether this group\u0027s content is a terminal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#IsEndedByNewline","title":"Group.IsEndedByNewline","content":"Group.IsEndedByNewline \nIsEndedByNewline \n\n Whether this group is ended by a new line.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#Name","title":"Group.Name","content":"Group.Name \nName \n\n The name of the group.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#ContainerSymbol","title":"Group.ContainerSymbol","content":"Group.ContainerSymbol \nContainerSymbol \n\n The symbol that represents the group\u0027s content.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#Start","title":"Group.Start","content":"Group.Start \nStart \n\n The symbol that represents the group\u0027s start.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#End","title":"Group.End","content":"Group.End \nEnd \n\n The symbol that represents the group\u0027s end.\n None (or null in C#) means that the group is ended by a new line.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#AdvanceMode","title":"Group.AdvanceMode","content":"Group.AdvanceMode \nAdvanceMode \n\n The way the group advances.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#EndingMode","title":"Group.EndingMode","content":"Group.EndingMode \nEndingMode \n\n The way the group ends.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-group.html#Nesting","title":"Group.Nesting","content":"Group.Nesting \nNesting \n\n A set of indexes whose corresponding groups can be nested inside this group.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-groupend.html","title":"GroupEnd","content":"GroupEnd \n\n A symbol signifying the end of a group.\n \nGroupEnd.GroupEnd \nGroupEnd"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-groupend.html#GroupEnd","title":"GroupEnd.GroupEnd","content":"GroupEnd.GroupEnd \nGroupEnd \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-groupstart.html","title":"GroupStart","content":"GroupStart \n\n A symbol signifying the start of a group.\n \nGroupStart.GroupStart \nGroupStart"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-groupstart.html#GroupStart","title":"GroupStart.GroupStart","content":"GroupStart.GroupStart \nGroupStart \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-igrammarprovider.html","title":"IGrammarProvider","content":"IGrammarProvider \nThis interface is implemented by \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html\u0022\u003EGrammar\u003C/a\u003Es and\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/runtimefarkle{tresult}\u0022\u003ERuntimeFarkle{TResult}\u003C/a\u003Es and provides a uniform\n way to work with grammars inside runtime Farkles and grammars\n themselves, while accounting for potential build errors in an\n exception-free way. \nIGrammarProvider.GetBuildErrorMessage \nGetBuildErrorMessage \nIGrammarProvider.GetGrammar \nGetGrammar \nIGrammarProvider.IsBuildSuccessful \nIsBuildSuccessful"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-igrammarprovider.html#GetBuildErrorMessage","title":"IGrammarProvider.GetBuildErrorMessage","content":"IGrammarProvider.GetBuildErrorMessage \nGetBuildErrorMessage \n\n Returns a user-friendly error message that\n describes what had gone wrong while building,\n or an empty string if building had been successful.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-igrammarprovider.html#GetGrammar","title":"IGrammarProvider.GetGrammar","content":"IGrammarProvider.GetGrammar \nGetGrammar \nGets the \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-grammar.html\u0022\u003EGrammar\u003C/a\u003E of this provider."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-igrammarprovider.html#IsBuildSuccessful","title":"IGrammarProvider.IsBuildSuccessful","content":"IGrammarProvider.IsBuildSuccessful \nIsBuildSuccessful \nWhether the grammar has been successfuly built. \nA  value of this property indicates\n that \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/getgrammar\u0022\u003EGetGrammar\u003C/a\u003E is safe to be called."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalraction.html","title":"LALRAction","content":"LALRAction \n\n An action to be taken by the LALR parser according to the given \u0060Terminal\u0060.\n \nLALRAction.Shift \nShift \nLALRAction.Reduce \nReduce \nLALRAction.Accept \nAccept"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalraction.html#Shift","title":"LALRAction.Shift","content":"LALRAction.Shift \nShift \n\n This action indicates the parser to shift to the specified \u0060LALRState\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalraction.html#Reduce","title":"LALRAction.Reduce","content":"LALRAction.Reduce \nReduce \n\n This action indicates the parser to reduce a \u0060Production\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalraction.html#Accept","title":"LALRAction.Accept","content":"LALRAction.Accept \nAccept \n\n When the parser encounters this action for a given symbol,\n the input text is accepted as correct and parsing ends.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalrstate.html","title":"LALRState","content":"LALRState \n\n A LALR state. Together, many of them define the parsing logic of a \u0060Grammar\u0060.\n \nLALRState.Index \nIndex \nLALRState.Actions \nActions \nLALRState.EOFAction \nEOFAction \nLALRState.GotoActions \nGotoActions"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalrstate.html#Index","title":"LALRState.Index","content":"LALRState.Index \nIndex \n\n The index of the state.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalrstate.html#Actions","title":"LALRState.Actions","content":"LALRState.Actions \nActions \n\n The available next \u0060LALRAction\u0060s of the state,\n depending on the next \u0060Terminal\u0060 encountered.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalrstate.html#EOFAction","title":"LALRState.EOFAction","content":"LALRState.EOFAction \nEOFAction \n\n The available \u0060LALRAction\u0060 to be taken if input ends.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalrstate.html#GotoActions","title":"LALRState.GotoActions","content":"LALRState.GotoActions \nGotoActions \n\n The available GOTO actions of the state. These actions\n are used when a production is reduced and the parser\n jumps to the state that represents the shifted nonterminal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalrsymbol.html","title":"LALRSymbol","content":"LALRSymbol \n\n A symbol that is relevant to the LALR parser.\n \nLALRSymbol.Terminal \nTerminal \nLALRSymbol.Nonterminal \nNonterminal"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalrsymbol.html#Terminal","title":"LALRSymbol.Terminal","content":"LALRSymbol.Terminal \nTerminal \n\n The symbol is a terminal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-lalrsymbol.html#Nonterminal","title":"LALRSymbol.Nonterminal","content":"LALRSymbol.Nonterminal \nNonterminal \n\n The symbol is a nonterminal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-noise.html","title":"Noise","content":"Noise \n\n A symbol which is produced through a DFA, but is not significant for the grammar and is discarded.\n An example of a noise symbol would be a source code comment.\n \nNoise.Noise \nNoise"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-noise.html#Noise","title":"Noise.Noise","content":"Noise.Noise \nNoise \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-nonterminal.html","title":"Nonterminal","content":"Nonterminal \n\n A symbol which is produced by a concatenation of other \u0060Terminal\u0060s\n and \u0060Nonterminal\u0060s, as the LALR parser dictates. Nonterminals with\n the same index are considered equal.\n \nNonterminal.Nonterminal \nNonterminal"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-nonterminal.html#Nonterminal","title":"Nonterminal.Nonterminal","content":"Nonterminal.Nonterminal \nNonterminal \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-production.html","title":"Production","content":"Production \n\n A sequence of \u0060Terminal\u0060s and \u0060Nonterminal\u0060s that can produce a specific \u0060Nonterminal\u0060.\n \nProduction.CompareTo \nCompareTo \nProduction.Equals \nEquals \nProduction.Index \nIndex \nProduction.Head \nHead \nProduction.Handle \nHandle"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-production.html#CompareTo","title":"Production.CompareTo","content":"Production.CompareTo \nCompareTo \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-production.html#Equals","title":"Production.Equals","content":"Production.Equals \nEquals \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-production.html#Index","title":"Production.Index","content":"Production.Index \nIndex \n\n The index of the production. Productions\n with the same index are considered equal.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-production.html#Head","title":"Production.Head","content":"Production.Head \nHead \n\n The \u0060Nonterminal\u0060 the production is referring to.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-production.html#Handle","title":"Production.Handle","content":"Production.Handle \nHandle \n\n The \u0060Terminals\u0060s and \u0060Nonterminal\u0060s, the production is made of.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-symbols.html","title":"Symbols","content":"Symbols \n\n A type containing all symbols of a grammar, grouped by kind.\n Group start and end symbols can be found at the group table.\n \nSymbols.Terminals \nTerminals \nSymbols.Nonterminals \nNonterminals \nSymbols.NoiseSymbols \nNoiseSymbols"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-symbols.html#Terminals","title":"Symbols.Terminals","content":"Symbols.Terminals \nTerminals \n\n The grammar\u0027s terminals.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-symbols.html#Nonterminals","title":"Symbols.Nonterminals","content":"Symbols.Nonterminals \nNonterminals \n\n The grammar\u0027s nonterminals.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-symbols.html#NoiseSymbols","title":"Symbols.NoiseSymbols","content":"Symbols.NoiseSymbols \nNoiseSymbols \n\n The grammar\u0027s noise symbols.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-terminal.html","title":"Terminal","content":"Terminal \n\n A symbol which is produced through a DFA, and is significant for the grammar.\n Terminals with the same index are considered equal.\n \nTerminal.Terminal \nTerminal"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-terminal.html#Terminal","title":"Terminal.Terminal","content":"Terminal.Terminal \nTerminal \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile-egtfileexception.html","title":"EGTFileException","content":"EGTFileException \n\n An exception that gets thrown when\n reading an EGT file goes wrong.\n \nEGTFileException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile-egtfileexception.html#\u0060\u0060.ctor\u0060\u0060","title":"EGTFileException.\u0060\u0060.ctor\u0060\u0060","content":"EGTFileException.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile-entry.html","title":"Entry","content":"Entry \nAn entry of an EGT file. \nEntry.Int \nInt \nEntry.Empty \nEmpty \nEntry.Byte \nByte \nEntry.Boolean \nBoolean \nEntry.UInt32 \nUInt32 \nEntry.String \nString"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile-entry.html#Int","title":"Entry.Int","content":"Entry.Int \nInt \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile-entry.html#Empty","title":"Entry.Empty","content":"Entry.Empty \nEmpty \n\n The entry has no data.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile-entry.html#Byte","title":"Entry.Byte","content":"Entry.Byte \nByte \n\n The entry has a byte.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile-entry.html#Boolean","title":"Entry.Boolean","content":"Entry.Boolean \nBoolean \n\n The entry has a boolean value.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile-entry.html#UInt32","title":"Entry.UInt32","content":"Entry.UInt32 \nUInt32 \n\n The entry has an unsigned 32-bit integer.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-grammar-egtfile-entry.html#String","title":"Entry.String","content":"Entry.String \nString \n\n The entry has a string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html","title":"CharStream","content":"CharStream \n\n A data structure that supports efficient access to a\n read-only sequence of characters. It is not thread-safe.\n \nCharStream.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCharStream.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCharStream.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCharStream.AdvanceBy \nAdvanceBy \nCharStream.GetPositionAtOffset \nGetPositionAtOffset \nCharStream.TryExpandPastOffset \nTryExpandPastOffset \nCharStream.ObjectStore \nObjectStore \nCharStream.CurrentPosition \nCurrentPosition \nCharStream.CharacterBuffer \nCharacterBuffer"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html#\u0060\u0060.ctor\u0060\u0060","title":"CharStream.\u0060\u0060.ctor\u0060\u0060","content":"CharStream.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E that lazily reads\n its characters from a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/textreader\u0022\u003ETextReader\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html#\u0060\u0060.ctor\u0060\u0060","title":"CharStream.\u0060\u0060.ctor\u0060\u0060","content":"CharStream.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E from a string."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html#\u0060\u0060.ctor\u0060\u0060","title":"CharStream.\u0060\u0060.ctor\u0060\u0060","content":"CharStream.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E from a\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/readonlymemory{char}\u0022\u003EReadOnlyMemory{Char}\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html#AdvanceBy","title":"CharStream.AdvanceBy","content":"CharStream.AdvanceBy \nAdvanceBy \nAdvances the stream\u0027s current position by \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Ecount\u003C/span\u003E\n characters. This function invalidates the indices for the stream\u0027s\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/characterbuffer\u0022\u003ECharacterBuffer\u003C/a\u003E and the characters that were advanced\n might later be released from memory. \nBoth Windows line ending chatacters must be advanced at the same\n time, otherwise the stream\u0027s current position will be incorrect."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html#GetPositionAtOffset","title":"CharStream.GetPositionAtOffset","content":"CharStream.GetPositionAtOffset \nGetPositionAtOffset \nReturns the position of the character at \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eofs\u003C/span\u003E\n characters after the current position."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html#TryExpandPastOffset","title":"CharStream.TryExpandPastOffset","content":"CharStream.TryExpandPastOffset \nTryExpandPastOffset \nTries to load the \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eofs\u003C/span\u003Eth character after the stream\u0027s\n current position. If it does not exist, returns false. This function invalidates\n the stream\u0027s \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/characterbuffer\u0022\u003ECharacterBuffer\u003C/a\u003E but keeps the indices of the new buffer\n valid."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html#ObjectStore","title":"CharStream.ObjectStore","content":"CharStream.ObjectStore \nObjectStore \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html#CurrentPosition","title":"CharStream.CurrentPosition","content":"CharStream.CurrentPosition \nCurrentPosition \n\n The position of the next character the stream has to read.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html#CharacterBuffer","title":"CharStream.CharacterBuffer","content":"CharStream.CharacterBuffer \nCharacterBuffer \n\n A read-only span of characters that contains all\n available characters at and after the stream\u0027s current position.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstreamerrorreportingextensions.html","title":"CharStreamErrorReportingExtensions","content":"CharStreamErrorReportingExtensions \nExtension methods to the \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E\n type that have to do with error reporting. \nCharStreamErrorReportingExtensions.FailAtOffset \nFailAtOffset"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstreamerrorreportingextensions.html#FailAtOffset","title":"CharStreamErrorReportingExtensions.FailAtOffset","content":"CharStreamErrorReportingExtensions.FailAtOffset \nFailAtOffset \nThrows a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parserapplicationexception.html\u0022\u003EParserApplicationException\u003C/a\u003E at\n \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eoffset\u003C/span\u003E characters after \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Estream\u003C/span\u003E\u0027s\n current position."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-lalrparser.html","title":"LALRParser","content":"LALRParser \n\n Functions to syntactically parse a series of tokens using the LALR algorithm.\n \nLALRParser.parse \nparse"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-lalrparser.html#parse","title":"LALRParser.parse","content":"LALRParser.parse \nparse \nParses and post-processes tokens with the LALR(1) algorithm."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-defaulttokenizer.html","title":"DefaultTokenizer","content":"DefaultTokenizer \nFarkle\u0027s default tokenizer, powered by a DFA. \nCustom tokenizers are recommended to inherit\n this class to still have access to Farkle\u0027s tokenizer\n through the base \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/getnexttoken\u0022\u003EGetNextToken\u003C/a\u003E method. \nDefaultTokenizer.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-defaulttokenizer.html#\u0060\u0060.ctor\u0060\u0060","title":"DefaultTokenizer.\u0060\u0060.ctor\u0060\u0060","content":"DefaultTokenizer.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-expectedsymbol.html","title":"ExpectedSymbol","content":"ExpectedSymbol \n\n A symbol that was expected at the location of a syntax error.\n \nExpectedSymbol.Terminal \nTerminal \nExpectedSymbol.EndOfInput \nEndOfInput"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-expectedsymbol.html#Terminal","title":"ExpectedSymbol.Terminal","content":"ExpectedSymbol.Terminal \nTerminal \n\n A terminal was expected.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-expectedsymbol.html#EndOfInput","title":"ExpectedSymbol.EndOfInput","content":"ExpectedSymbol.EndOfInput \nEndOfInput \n\n The input was expected to end.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parseerrortype.html","title":"ParseErrorType","content":"ParseErrorType \n\n The type of an error the parser encountered.\n \nParseErrorType.UnexpectedEndOfInput \nUnexpectedEndOfInput \nParseErrorType.LexicalError \nLexicalError \nParseErrorType.SyntaxError \nSyntaxError \nParseErrorType.UnexpectedGroupEnd \nUnexpectedGroupEnd \nParseErrorType.UnexpectedEndOfInputInGroup \nUnexpectedEndOfInputInGroup \nParseErrorType.UserError \nUserError"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parseerrortype.html#UnexpectedEndOfInput","title":"ParseErrorType.UnexpectedEndOfInput","content":"ParseErrorType.UnexpectedEndOfInput \nUnexpectedEndOfInput \n\n Unexpected end of input.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parseerrortype.html#LexicalError","title":"ParseErrorType.LexicalError","content":"ParseErrorType.LexicalError \nLexicalError \n\n A character was not recognized.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parseerrortype.html#SyntaxError","title":"ParseErrorType.SyntaxError","content":"ParseErrorType.SyntaxError \nSyntaxError \n\n A symbol was read, while some others were expected.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parseerrortype.html#UnexpectedGroupEnd","title":"ParseErrorType.UnexpectedGroupEnd","content":"ParseErrorType.UnexpectedGroupEnd \nUnexpectedGroupEnd \n\n A group did end, but outside of any group.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parseerrortype.html#UnexpectedEndOfInputInGroup","title":"ParseErrorType.UnexpectedEndOfInputInGroup","content":"ParseErrorType.UnexpectedEndOfInputInGroup \nUnexpectedEndOfInputInGroup \n\n Unexpected end of input while being inside a group.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parseerrortype.html#UserError","title":"ParseErrorType.UserError","content":"ParseErrorType.UserError \nUserError \n\n A custom error was raised by calling the \u0060error\u0060 function\n or by throwing a \u0060ParserApplicationException\u0060.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parsererror.html","title":"ParserError","content":"ParserError \n\n A parse error. It contains the position it was encountered and its type.\n \nParserError.ParserError \nParserError"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-parsererror.html#ParserError","title":"ParserError.ParserError","content":"ParserError.ParserError \nParserError \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-token.html","title":"Token","content":"Token \n\n A token is an instance of a \u0060Terminal\u0060.\n Tokens carry post-processed terminals,\n as well as their position in the text.\n \nToken.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nToken.Data \nData \nToken.Symbol \nSymbol \nToken.IsEOF \nIsEOF \nToken.Position \nPosition \nToken.CreateEOF \nCreateEOF"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-token.html#\u0060\u0060.ctor\u0060\u0060","title":"Token.\u0060\u0060.ctor\u0060\u0060","content":"Token.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-token.html#Data","title":"Token.Data","content":"Token.Data \nData \n\n The object the \u0060PostProcessor\u0060 created for this token.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-token.html#Symbol","title":"Token.Symbol","content":"Token.Symbol \nSymbol \n\n The \u0060Terminal\u0060 whose instance is this token.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-token.html#IsEOF","title":"Token.IsEOF","content":"Token.IsEOF \nIsEOF \n\n Whether the token signifies that input ended.\n When this property is set to true, the \u0060Token.Symbol\u0060\n and \u0060Token.Data\u0060 properties have undefined values.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-token.html#Position","title":"Token.Position","content":"Token.Position \nPosition \n\n The \u0060Position\u0060 of the token in the input string.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-token.html#CreateEOF","title":"Token.CreateEOF","content":"Token.CreateEOF \nCreateEOF \n\n Creates a token that signifies the end of input at the given position.\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizer.html","title":"Tokenizer","content":"Tokenizer \nA class that breaks down the characters of a\n \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E into \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-token.html\u0022\u003EToken\u003C/a\u003Es. \nUser code can inherit this class and implement additional\n tokenizer logic by overriding the \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/getnexttoken\u0022\u003EGetNextToken\u003C/a\u003E\n method. \nTokenizer.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTokenizer.GetNextToken \nGetNextToken"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizer.html#\u0060\u0060.ctor\u0060\u0060","title":"Tokenizer.\u0060\u0060.ctor\u0060\u0060","content":"Tokenizer.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizer.html#GetNextToken","title":"Tokenizer.GetNextToken","content":"Tokenizer.GetNextToken \nGetNextToken \nGets the next \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-token.html\u0022\u003EToken\u003C/a\u003E\n from a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-io-charstream.html\u0022\u003ECharStream\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizerfactory.html","title":"TokenizerFactory","content":"TokenizerFactory \nA class that creates \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizer.html\u0022\u003ETokenizer\u003C/a\u003Es. \nTokenizerFactory.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTokenizerFactory.CreateTokenizer \nCreateTokenizer"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizerfactory.html#\u0060\u0060.ctor\u0060\u0060","title":"TokenizerFactory.\u0060\u0060.ctor\u0060\u0060","content":"TokenizerFactory.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizerfactory.html#CreateTokenizer","title":"TokenizerFactory.CreateTokenizer","content":"TokenizerFactory.CreateTokenizer \nCreateTokenizer \nCreates a \u003Ca href=\u0022https://teo-tsirpanis.github.io/Farkle/reference/farkle-parser-tokenizer.html\u0022\u003ETokenizer\u003C/a\u003E."},{"uri":"https://teo-tsirpanis.github.io/Farkle/advanced-features.html","title":"Advanced features\r\n","content":"# Advanced features\r\n\r\nFarkle has a couple of features that were not covered in other guides because they are less likely to be useful. In this guide, we will take a look at some of these features that truly push Farkle\u0027s capabilities to the fullest. So, are you ready? Let\u0027s do this!\r\n\r\n## The untyped API\r\n\r\nThe first feature we are going to discuss is a different API for creating grammars, which is called the untyped API. Usually, when we write our designtime Farkles, we do not only state how our grammar is structured, but also what should our parser do when he encounters a specific symbol. There are times however that we do not want to do the latter thing: we just want Farkle to create a grammar. Let\u0027s take a look at the following grammar which matches matching parentheses:\r\n\r\n\u0060\u0060\u0060\r\n\u003CS\u003E ::= \u003CS\u003E ( \u003CS\u003E )\r\n\u003CS\u003E ::= \u003C\u003E\r\n\u0060\u0060\u0060\r\n\r\nIn Farkle, one way to write this grammar, is to just write it, but return dummy types like units on every production:\r\n\r\n\u0060\u0060\u0060 fsharp\r\n// In all our examples, we always open this namespace.\r\nopen Farkle.Builder\r\n\r\nlet S = nonterminal \u0022S\u0022\r\n\r\nS.SetProductions(\r\n    !% S .\u003E\u003E \u0022(\u0022 .\u003E\u003E S .\u003E\u003E \u0022)\u0022 =% (),\r\n    empty =% ()\r\n)\r\n\u0060\u0060\u0060\r\n\r\nOn larger grammars however, this habit of adding \u0060=% ()\u0060 to the end of each production tends to be repetitive. Also imagine if we had more complex terminals. We would have done something like this:\r\n\r\n\u0060\u0060\u0060 fsharp\r\nlet X =\r\n    myComplexRegex\r\n    |\u003E terminal \u0022X\u0022 (T(fun _ _ -\u003E ()))\r\n\u0060\u0060\u0060\r\n\r\nThe parentheses-ridden delegate definition at the end would have to be repeated, for every terminal we would have to create.\r\n\r\nFor this reason, the untyped API was created, to minimize code duplication. Let\u0027s first see how we would write our terminal:\r\n\r\n__F#:__\r\n\u0060\u0060\u0060 fsharp\r\nlet X =\r\n    myComplexRegex\r\n    |\u003E terminalU \u0022X\u0022\r\n\u0060\u0060\u0060\r\n\r\n__C#:__\r\n\u0060\u0060\u0060 csharp\r\nDesigntimeFarkle X = Terminal.Create(\u0022X\u0022, myComplexRegex);\r\n\u0060\u0060\u0060\r\n\r\nIn F#, we use the \u0060terminalU\u0060 function (guess what the U stands for), and in C# we just omit the delegate (it would have otherwise appeared between the name and the regex).\r\n\r\nAs you might have seen, the terminal is of type \u0060DesigntimeFarkle\u0060, without a generic parameter at the end. This means it can be normally used from other grammars (even typed), but it cannot be the significant member of a production. You can write for example \u0060!@ W .\u003E\u003E X\u0060 (or \u0060W.Extended().Append(X)\u0060 in C#), but not \u0060!@ W .\u003E\u003E. X\u0060 (or \u0060W.Extended().Extend(X)\u0060).\r\n\r\n\u003E If you don\u0027t remember how to use an API from C#, [this guide](csharp.html) can help you.\r\n\r\n### Defining untyped nonterminals\r\n\r\nThe nonterminals use a slightly different approach. Let\u0027s see how we would write the nonterminal that recognizes the balanced parentheses:\r\n\r\n__F#:__\r\n\u0060\u0060\u0060 fsharp\r\nlet S = nonterminalU \u0022S\u0022\r\n\r\nS.SetProductions(\r\n    !% S .\u003E\u003E \u0022(\u0022 .\u003E\u003E S .\u003E\u003E \u0022)\u0022,\r\n    empty\r\n)\r\n\u0060\u0060\u0060\r\n\r\n__C#:__\r\n\u0060\u0060\u0060 csharp\r\nvar S = Nonterminal.CreateUntyped(\u0022S\u0022);\r\n\r\nS.SetProductions(\r\n    new ProductionBuilder(S, \u0022(\u0022, S, \u0022)\u0022),\r\n    ProductionBuilder.Empty\r\n);\r\n\u0060\u0060\u0060\r\n\r\nFor F# we use the \u0060nonterminalU\u0060 function to define an untyped nonterminal, and after that we set its productions, just like the typed nonterminals. We use the familiar production builders syntax to do it but with some changes: we always chain the members of the production with the \u0060.\u003E\u003E\u0060 operator since none of its members are significant, and we don\u0027t finish the production builder in the end with \u0060=\u003E\u0060 or \u0060=%\u0060. \u0060S\u0060 is of type \u0060Farkle.Builder.Untyped.Nonterminal\u0060, which implements only the untyped \u0060DesigntimeFarkle\u0060 interface.\r\n\r\nFor C# we could use production builders without extending or finishing them like in F#, but there is another shorter way. We use the \u0060ProductionBuilder\u0060\u0027s constructor which accepts a variable amount of objects (or none, but this is essentially the empty one). You can pass designtime Farkles to be used in the resulting production as they are, or strings or characters to be used as literals. To avoid boxing, it\u0027s better to not pass characters at all, but not prohibited. If you pass any other type, an exception will be thrown.\r\n\r\nIn earlier versions of Farkle we could not reliably use the production builder syntax due to a compiler limitation. If you are getting weird syntax errors about type mismatches, use the \u0060ProductionBuilder\u0060\u0027s constructor instead.\r\n\r\n---\r\n\r\nTo show how to define non-recursive productions, let\u0027s take a look at a different example. Consider this F# designtime Farkle:\r\n\r\n\u0060\u0060\u0060 fsharp\r\nlet number = Terminals.uint32 \u0022Number\u0022\r\n\r\nlet adder = \u0022Add\u0022 ||= [!@ number .\u003E\u003E \u0022\u002B\u0022 .\u003E\u003E. number =\u003E (\u002B)]\r\n\u0060\u0060\u0060\r\n\r\nIt does exactly what you think it does. It gets a string of the form \u0060X \u002B Y\u0060, and returns an unsigned integer containing their sum.\r\n\r\nA grammar that recognizes the same language without returning anything can be defined like this:\r\n\r\n\u0060\u0060\u0060 fsharp\r\nlet number = Terminals.uint32 \u0022Number\u0022\r\n\r\nlet adder = \u0022Add\u0022 |||= [!% number .\u003E\u003E \u0022\u002B\u0022 .\u003E\u003E number]\r\n\u0060\u0060\u0060\r\n\r\nThere are four differences in the untyped terminal. We use the \u0060|||=\u0060 operator instead of \u0060||=\u0060, \u0060!%\u0060 instead of \u0060!@\u0060, \u0060.\u003E\u003E\u0060 instead of \u0060.\u003E\u003E.\u0060 and omit finishing the production builder with \u0060=\u003E\u0060. In C# we can do the same thing with the \u0060ProductionBuilder\u0060 like that:\r\n\r\n\u0060\u0060\u0060 csharp\r\nDesigntimeFarkle\u003Cuint\u003E Number = Terminals.UInt32(\u0022Number\u0022);\r\nDesigntimeFarkle Adder = Nonterminal.CreateUntyped(\u0022Adder\u0022, new ProductionBuilder(Number, \u0022\u002B\u0022, Number))\r\n\u0060\u0060\u0060\r\n\r\n### Building untyped designtime Farkles\r\n\r\nBuilding these untyped designtime Farkles is actually surprisingly simple and can be done this way:\r\n\r\n__F#:__\r\n\u0060\u0060\u0060 fsharp\r\n// This is of type \u0060RuntimeFarkle\u003Cunit\u003E\u0060.\r\nlet adderRuntime = RuntimeFarkle.buildUntyped adder\r\n\u0060\u0060\u0060\r\n\r\n__C#:__\r\n\u0060\u0060\u0060 csharp\r\n// The object it returns will always be null.\r\nRuntimeFarkle\u003Cobject\u003E AdderRuntime = Adder.BuildUntyped();\r\n\u0060\u0060\u0060\r\n\r\n\u0060buildUntyped\u0060 creates a \u0060RuntimeFarkle\u0060 that does not return anything meaningful, and succeeds if the input text is valid. On F# it returns a unit and on C# an object that is always \u0060null\u0060.\r\n\r\n## Syntax checking\r\n\r\nIt is sometimes useful to just check if a string is syntactically valid, instead of giving it a meaning by returning an object out of it.\r\n\r\nThis is what the untyped API does, and we can call \u0060buildUntyped\u0060 on a typed designtime Farkle to achieve the same.\r\n\r\nBecause building a designtime Farkle is expensive, if we already have a runtime Farkle, we can create a new one with the same grammar, but with a post-processor that does nothing. This post-processor is called a _syntax checker_. We can change the post-processor of a runtime Farkle this way:\r\n\r\n__F#:__\r\n\u0060\u0060\u0060 fsharp\r\nopen Farkle.PostProcessor\r\n\r\nlet designtime: DesigntimeFarkle\u003Cint\u003E = foo()\r\n\r\nlet runtime: RuntimeFarkle\u003Cint\u003E = RuntimeFarkle.build designtime\r\n\r\n// syntaxChecker is of type RuntimeFarkle\u003Cunit\u003E.\r\nlet syntaxCheck = RuntimeFarkle.changePostProcessor PostProcessors.syntaxCheck runtime\r\n\u0060\u0060\u0060\r\n\r\n__C#:__\r\n\u0060\u0060\u0060 csharp\r\nDesigntimeFarkle\u003Cint\u003E Designtime = Foo();\r\n\r\nRuntimeFarkle\u003Cint\u003E Runtime = Designtime.Build();\r\n\r\nRuntimeFarkle\u003Cobject\u003E SyntaxCheck = Runtime.SyntaxCheck();\r\n// or\r\nRuntimeFarkle\u003CUnit\u003E SyntaxCheck = Runtime.ChangePostProcessor(PostProcessors.SyntaxChecker);\r\n\u0060\u0060\u0060\r\n\r\nChanging the post-processor is extremely cheap; no new grammar objects are created, and the syntax-checking post-processor is the same.\r\n\r\n\u003E Actually, the post-processor used in both the F# and the C# example is the same object too. Post-processors are [covariant][covariance] like designtime Farkles, because they are interfaces. Runtime Farkles on the other hand are classes and therefore not variant at all.\r\n\r\n## Custom tokenizers\r\n\r\nFarkle\u0027s default tokenizer is relatively simple. It splits the input text into tokens, without any regard for these tokens\u0027 location. There are some more complex grammars however that need a smarter tokenizer, for example indentation-based languages like F# and Python. Using Farkle\u0027s standard facilities is not enough to determine when a block begins or ends.\r\n\r\nFor these advanced cases, Farkle provides a way to write additional tokenizing logic on top of the default tokenizer. There is [an extensively commented sample][indent-based] where we write a parser for a simple indentation-based language. Our indentation level detection logic only kicks in when we are at the beginning of a line, and we defer to Farkle\u0027s default tokenizer to take care of the rest.\r\n\r\n---\r\n\r\nFarkle has more APIs for various little features that would make this document too lengthy. Fortunately, [they are well-documented in this site](reference/index.html), as well as while you code thanks to IntelliSense.\r\n\r\nSo, I hope you enjoyed this little guide. If you did, don\u0027t forget to give Farkle a try, and maybe you feel especially untyped today, and want to hit the star button as well. I hope that all of you have a wonderful day, and to see you soon. Goodbye!\r\n\r\n[covariance]: https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/covariance-contravariance/\r\n[indent-based]: https://github.com/teo-tsirpanis/Farkle/blob/mainstream/sample/Farkle.Samples.FSharp/IndentBased.fs\r\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/choosing-a-parser.html","title":"Choosing a parser for your .NET project\r\n","content":"# Choosing a parser for your .NET project\r\n\r\nBesides Farkle, there are many other general-purpose parsing projects for the .NET ecosystem. Farkle\u0027s main competitors are FsLexYacc and FParsec to a lesser degree. In this guide we will examine the strengths and weaknesses of each parser library and help you decide which one to use for your next project. So, are you ready? Let\u0027s do this!\r\n\r\n## Farkle vs FParsec vs FsLexYacc\r\n\r\nThe comparison between Farkle, [FParsec] and [FsLexYacc] is outlined in the following table. A more detailed explanation is following.\r\n\r\n\u003E __Note:__ All projects we will discuss support .NET Standard.\r\n\r\n| |Farkle|FParsec|FsLexYacc|\r\n|-|-|-|-|\r\n|Type|Library|Library|Parser generator|\r\n|Grammar definition language|Code|Code|Separate files|\r\n|Parsing algorithm|LALR|Recursive descent|LALR|\r\n|Lexer|Less decoupled|No|More decoupled|\r\n|Lexing algorithm|DFAs|N/A|DFAs|\r\n|Left recursion support|Yes|No|Yes|\r\n|Operator precedence support|Yes|Yes|Yes|\r\n|Whitespace/Comment handling|Easy|Harder|Hard|\r\n|Parsing speed|Good|Good|Subpar|\r\n|MSBuild integration|Optional|N/A|Required|\r\n|C# support|Yes|No|No|\r\n|Maturity|Ever-evolving|Mature|Mature|\r\n\r\n### Grammar definition language\r\n\r\nFsLexYacc follows more closely the paradigm of the traditional \u0060lex\u0060/\u0060yacc\u0060 tools and its users write their grammars in separate files (having the extension \u0060.fsl\u0060 and \u0060.fsy\u0060). These files are not F# code which means that they do not support features like IntelliSense or instant error reporting.\r\n\r\nIn Farkle and FParsec, the languages are specified in code, resulting in higher productivity and a smoother learning curve. Furthermore, the grammars for these languages are first-class language objects that can be easily composed and extended. This is very hard to do in parser generators like FsLexYacc.\r\n\r\n### Parsing\r\n\r\nFParsec uses parser combinators which are little functions that parse fragments of text and can be composed into bigger ones. FParsec\u0027s parsers are therefore the most flexible of the three libraries, allowing context-sensitive grammars with infinite lookahead and their behavior can be fully customized by arbitrary code. This immense flexibility parser combinators bring to the table makes the library user responsible to keep their parser\u0027s performance adequate and predictable. Furthermore, parser combinator libraries use a form of recursive descent parsing, prohibiting the use of left recursion.\r\n\r\nThe other two libraries use a universal LALR parser whose behavior is customized with parsing tables generated from a grammar. While it restricts the allowed grammars to those who adhere to a set of parsing formalisms, this erga omnes approach makes the parser\u0027s performance more predictable, guaranteeing it will finish in linear time, but it also means that if the parser is slow, there are little things the user can do; only the library\u0027s author can make it faster. Custom code can be injected in far fewer places than anywhere, namely when the parser reduces a production and between the lexer and the parser. Context-sensitive grammars can still be created with a bit of creativity.\r\n\r\nAs stated before, FsYacc uses an external grammar definition language. Farkle sits between FsYacc and FParsec, supporting composing grammars from smaller grammars (called _designtime Farkles_). Designtime Farkles however are not parser combinators; they are backed by a formal grammar element, either a terminal or a nonterminal.\r\n\r\nParsing text with all three libraries ends up with the parser returning a custom object, usually representing an Abstract Syntax Tree (AST). Farkle supports easily changing the returned object of a grammar (for example to just perform syntax checking without creating an AST).\r\n\r\n### Lexing\r\n\r\nFParsec does not use a discrete lexing stage, performing both parsing and lexing at the same time.\r\n\r\nIn Farkle and FsLexYacc, lexing (called _tokenizing_ in Farkle) is performed separately from the actual parsing. Both projects use Deterministic Finite Automata (DFAs) to perform the lexing based on regular expressions, but Farkle uses a more efficient algorithm that generates smaller automata than FsLexYacc.\r\n\r\nIn FsLexYacc, the lexer is a completely separate product simply called FsLex from the parser which is called FsYacc. One could use a custom lexer with FsYacc or the opposite.\r\n\r\nIn Farkle the tokenizer and the parser are separate but using them separately to extend the tokenizer\u0027s power is hard. An API to make it easier will be available in a future release, but Farkle already has first-class support for advanced lexing features like lexical groups, noise symbols and comments.\r\n\r\n### Operator precedence support\r\n\r\nFParsec and FsYacc support operator precedence and associativity to more intuitively write grammars (and automatically resolve LALR conflicts in the latter case). The former does it [via a special type][FParsec-operators], and the latter has direct support in the grammar definition files.\r\n\r\nFarkle added support for operator precedence and associativity in version 6.0.0, through objects named _operator scopes_. [The quick start guide has been updated](quickstart.html#Operator-Precedence) to talk about them.\r\n\r\n### Whitespace/comment handling\r\n\r\nFParsec\u0027s approach to handling whitespace and comments is the most tedious of the three. Users have to manually state every place whitespace might appear. Comments are not directly supported either.\r\n\r\nComments in FsLex are still nontrivial but more manageable since their presence does not affect FsYacc at all, thanks to the lexer/parser separation.\r\n\r\nFarkle ignores whitespace by default with an option to disable. __In fact, automatic whitespace handling was one of the features that FParsec didn\u0027t have and prompted Farkle\u0027s creation.__ It also supports adding both line and block comments in a grammar with just one line of code. Furthermore, more complicated symbols that match a regex (called _noise symbols_) can be automatically ignored (such as pre-processor pragmas).\r\n\r\n### Parsing speed\r\n\r\nThis is quite the controversial topic. Farkle was made with performance in mind, lots of time has been invested to increase it, and it\u0027s getting faster with each release. [Its performance is benchmarked][Farkle-benchmarks] against the other two libraries by parsing JSON files of various sizes (185 bytes, 3.72 KB and 73.3 KB) with [Chiron] (which uses FParsec), Farkle and FsLexYacc. In all three cases, Farkle was shown to be faster and allocating less memory than the other two libraries.\r\n\r\nStill, Farkle\u0027s performance is not a finished business and more improvements are planned for future releases.\r\n\r\n\u003E __Note:__ FParsec comes in another flavor called \u0022Big Data Edition\u0022 which uses unsafe code for increased performance. The performance of that alternative edition was not taken into account because it only targets the .NET Framework.\r\n\r\n\u003E __Disclaimer:__ The performance of a parsing library is a subjective value that depends on the hardware it is running, the way the application uses the library and lots of other things. Parsing JSON files is just a narrow measurement. If you are writing a parser for a performance-sensitive app, you should profile it yourself and only trust your numbers.\r\n\r\n### MSBuild integration\r\n\r\nFParsec does not have any reason to integrate with MSBuild.\r\n\r\nFsLexYacc requires a tool to generate the source files for the lexer and the parser (there is a reason it\u0027s called a parser _generator_). Fortunately this tool can be integrated with MSBuild and transparently generate the source files when the project is built.\r\n\r\nFarkle integrates with MSBuild [to generate the parsing tables for a grammar ahead of time](the-precompiler.html) for increased start-up performance and error checking. It does not generate any source file but serializes the grammar into a binary file which is embedded in the compiled assembly. This feature is totally optional. Moreover, Farkle\u0027s MSBuild integration is more robust than FsLexYacc\u0027s, using custom MSBuild tasks, instead of FsLexYacc calling external command-line tools. In a future release, more things will be possible with Farkle and MSBuild.\r\n\r\n### C\\# support\r\n\r\nWhile all three libraries support parsing text from C# with a grammar written in F#, Farkle is the only of them [to fluently support C# for creating grammars](csharp.html).\r\n\r\nIt is impossible to generate C# code from FsLexYacc without substantially modifying the tool and it almost certainly is not a feature worth implementing, given the tool\u0027s exclusive focus on F#.\r\n\r\nSince FParsec is just a library and does not require tooling support, C# users can theoretically write an FParsec parser but the sheer amount of F# custom operators and idiomatisms it uses would definitely result in very unreadable code.\r\n\r\n### Maturity\r\n\r\nAnother tough topic. FParsec and FsLexYacc are mature projects, used in various applications for a long time, and their feature set seems stabilized. Owing to their longevity, they have a community around them. Even Microsoft is using them in some of its products: FParsec in [the parser][QSharp-parser] for the Q# programming language and FsLexYacc in [the parser][FSharp-parser] [and lexer][FSharp-lexer] for F# itself.\r\n\r\nFarkle on the other hand is relatively new. It started being developed in 2017 and did not become a standalone parsing library until version 5.1.0 was released in January 2020. It is still actively developed, with lots of big features slated to arrive. It also means that Farkle\u0027s API is still unstable, with minor breaking changes even in minor releases. Its development is a one-man show but other developers are more than welcome to contribute.\r\n\r\n## Some C\\# parsing projects\r\n\r\nTo further convince the indecisive C# users to use Farkle, we will also take a brief look at some parsing libraries made for C#.\r\n\r\n\u003E __Disclaimer__: Not all the libraries below were actually tried. And this is not an objective evaluation, but more of a subjective review. If any comment made is wrong, feel free to open a GitHub issue or pull request to fix it.\r\n\r\n### Sprache\r\n\r\n[Sprache] is a parser combinator library, just like FParsec. It creatively uses the LINQ query expression syntax to easily define parsers.\r\n\r\nThe problem with Sprache is that it is slow. Sprache\u0027s performance was going to be benchmarked against the three other libraries but the code was not committed because it was significantly slower than all of them.\r\n\r\n### Pidgin\r\n\r\n[Pidgin] is another parser combinator library written in C#, advertising more features than Sprache. It is focused on performance as well, and unpublished benchmarks showed that it\u0027s _faster_ than Farkle. A disadvantage of it is that its latest and not-yet-released version will only target .NET 5 or higher.\r\n\r\nIf you develop a project on a modern framework and want a pure parser combinator library go ahead, Pidgin is a fine choice.\r\n\r\n### Irony\r\n\r\n[Irony] is interesting. Like Farkle, it uses the LALR algorithm while being a library, not a parser generator, requiring no external tools. Its API is object-oriented; each grammar is a subclass of a \u0060Grammar\u0060 class and the initialization is performed at the constructor and takes advantage of overloading the \u0060|\u0060 and \u0060\u002B\u0060 operators to succinctly define productions, more simply than the admittingly verbose C# API of Farkle. It supports features like comments and operator precedence. The lexer\u0027s output can be customized by what Irony calls \u0060Scanner Filters\u0060.\r\n\r\nIrony is used by Microsoft to parse Android API definition files and generate the bindings for \u0060Xamarin.Android\u0060.\r\n\r\nUnlike Farkle however, Irony\u0027s grammars are not composable, and unlike all the three libraries, Irony does not support returning strongly-typed objects from grammars. Instead, each nonterminal (not production) can be assigned a delegate via the \u0060AstConfig.NodeCreator\u0060 property which forces the user has to manually cast the production\u0027s members from object and combine them. Irony\u0027s performance was not evaluated for this guide but might be in the future.\r\n\r\nA more serious problem with Irony is that its development is fragmented between two projects called \u0060Irony\u0060 and \u0060Irony.NetCore\u0060 (eventually the first package got .NET Core support as well), making it a little hard to choose which one to use.\r\n\r\n### ANTLR\r\n\r\nThe Abrams tank of parser generators, [ANTLR] is a tool written in Java but supports generating parsers for other languages including C# but not F#. A very mature and well-known project, it uses a variation of the LL algorithm called Adaptive LL (ALL) that supports left recursion.\r\n\r\nANTLR\u0027s problems are the same with any parser generator, mainly looser integration between the grammar and the rest of the program. The language independence ANTLR and other tools offer is good but not really amazing; only large projects would make use of that feature. ANTLR\u0027s use of syntax tree listeners and visitors steeps up the learning curve compared to Farkle, FsLexYacc or a parser combinator library. Furthermore, using ANTLR to a .NET project would add a dependency to Java in its build process.\r\n\r\nIt is this guide\u0027s recommendation to use ANTLR only if other parsers are inadequate for the project and after carefully considering the benefits and drawbacks ANTLR would bring.\r\n\r\n### GOLD Parser\r\n\r\n[GOLD Parser][gold]\u0027s approach is rather unique. Instead of generating source code for each language it supports (though it optionally supports that too), it creates a binary file with the grammar\u0027s parsing tables which can be read by libraries called _engines_ that can be written in any language. Farkle started as an engine for GOLD Parser, even though its support for GOLD Parser is being gradually phased out.\r\n\r\nThe biggest problem with GOLD Parser is that it is unmaintained. The latest version of the builder (the tool that creates the grammar tables) was released in 2012. Moreover, the tools are running on .NET Framework but can run in non-Windows operating systems with Mono. And these tools are closed-source, under a license that looks like MIT. For these reasons, GOLD Parser is not recommended for new projects. Older ones are encouraged by this guide to migrate to other parsers for increased performance and maintainability.\r\n\r\n## When to use a specialized parsing library\r\n\r\nA parsing library or parser generator like the ones we described above is not a silver bullet. Sometimes using a parser that specializes in parsing one file format is preferable.\r\n\r\n* __There is already one:__ If you are going to parse a well-known and popular file format and a library that parses it already exists, chances are that using this library is better than writing your own parser and would provide better performance and facilities suited for that format. You wouldn\u0027t write a parser for JSON, XML, HTML, C# or F#, would you? Farkle\u0027s codebase has a JSON parser for benchmarking (two identical ones actually, written in C# and F#) but will not be published to NuGet. \u0060Newtonsoft.Json\u0060 and \u0060System.Text.Json\u0060 are much faster JSON parsers than Farkle\u0027s and have much more features to warrant another JSON parser being released.\r\n\r\n* __Custom binary files:__ This is a bit controversial, as some parser combinator libraries support parsing binary files, but the guide\u0027s recommendation is to write your own binary file parser using framework classes like \u0060Stream\u0060, \u0060BinaryReader\u0060 or pipelines for increased performance, which is the main reason to use binary files in the first place.\r\n\r\n---\r\n\r\nSo I hope you enjoyed this little comparison. If you did, don\u0027t forget to give Farkle a try, and maybe you feel especially left-recursive today, and want to hit the star button as well. I hope that all of you have a wonderful day and to see you soon. Goodbye!\r\n\r\n[FParsec]: https://www.quanttec.com/fparsec/\r\n[FsLexYacc]: https://fsprojects.github.io/FsLexYacc/\r\n[FParsec-operators]: https://www.quanttec.com/fparsec/reference/operatorprecedenceparser.html\r\n[Farkle-benchmarks]: https://github.com/teo-tsirpanis/Farkle/tree/mainstream/performance/reports\r\n[Chiron]: https://github.com/xyncro/chiron\r\n[QSharp-parser]: https://github.com/microsoft/qsharp-compiler/tree/main/src/QsCompiler/TextProcessor\r\n[FSharp-parser]: https://github.com/dotnet/fsharp/blob/main/src/fsharp/pars.fsy\r\n[FSharp-lexer]: https://github.com/dotnet/fsharp/blob/main/src/fsharp/lex.fsl\r\n[Sprache]: https://github.com/sprache/Sprache\r\n[Pidgin]: https://github.com/benjamin-hodgson/Pidgin\r\n[Irony]: https://github.com/IronyProject/Irony\r\n[ANTLR]: https://github.com/antlr/antlr4/tree/master/runtime/CSharp\r\n[gold]: http://www.goldparser.org/\r\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/csharp.html","title":"Using Farkle from C#\r\n","content":"# Using Farkle from C\\#\r\n\r\nFarkle is a library written in F#, but supporting the much more used C# is a valuable feature. Because these two languages are quite different, there is a more idiomatic API for C# users. In this tutorial, we will assume that you have read [the F# quickstart guide][fsharp].\r\n\r\n\u003E The API described here is available in F# as well.\r\n\r\n## Building grammars\r\n\r\nF# programs using Farkle use an operator-laden API to compose designtime Farkles. Because C# does not support custom operators, we can instead use a different API based on extension methods.\r\n\r\n### Creating regexes\r\n\r\nRegular expressions are created using [members of the \u0060Regex\u0060 class][regex], which is well documented. Predefined sets are in the [\u0060PredefinedSets\u0060][predefinedsets] class. Let\u0027s see a comparison:\r\n\r\n\u0060\u0060\u0060 fsharp\r\nopen Farkle.Builder\r\nopen Farkle.Builder.Regex\r\n\r\nlet regex1 = regexString \u0022Hello\u002B\u0027 \u0027?World!*\u0022\r\n\r\nlet regex2 = concat [\r\n    string \u0022Hell\u0022\r\n    char \u0027o\u0027 |\u003E plus\r\n    char \u0027 \u0027 |\u003E optional\r\n    string \u0022World\u0022\r\n    char \u0027!\u0027 |\u003E star\r\n]\r\n\u0060\u0060\u0060\r\n\r\n\u0060\u0060\u0060 csharp\r\nusing Farkle.Builder;\r\nusing static Farkle.Builder.Regex;\r\n\r\nRegex regex1 = FromRegexString(\u0022Hello\u002B\u0027 \u0027?World!*\u0022);\r\n\r\nRegex regex2 = Join(\r\n    Literal(\u0022Hell\u0022),\r\n    Literal(\u0027o\u0027).AtLeast(1),\r\n    Literal(\u0027 \u0027).Optional(),\r\n    Literal(\u0022World\u0022),\r\n    Literal(\u0027!\u0027).ZeroOrMore()\r\n);\r\n\u0060\u0060\u0060\r\n\r\n### Cerating \u0026 building designtime Farkles\r\n\r\nThe following table highlights the differences between the F# and C# designtime Farkle API.\r\n\r\n|F#|C#|\r\n|--|--|\r\n|\u0060terminal \u0022X\u0022 (T (fun _ x -\u003E x.ToString())) r\u0060|\u0060Terminal.Create(\u0022X\u0022, (_, x) =\u003E x.ToString(), r)\u0060|\r\n|\u0060\u0022S\u0022 ||= [p1; p2]\u0060|\u0060Nonterminal.Create(\u0022S\u0022, p1, p2)\u0060|\r\n|\u0060!@ x\u0060|\u0060x.Extended()\u0060|\r\n|\u0060!% x\u0060|\u0060x.Appended()\u0060|\r\n|\u0060!\u0026 \u0022literal\u0022\u0060|\u0060\u0022literal\u0022.Appended()\u0060|\r\n|\u0060empty\u0060|\u0060ProductionBuilder.Empty\u0060|\r\n|\u0060newline\u0060|\u0060Terminal.NewLine\u0060|\r\n|\u0060x .\u003E\u003E y\u0060|\u0060x.Append(y)\u0060|\r\n|\u0060x .\u003E\u003E. y\u0060|\u0060x.Extend(y)\u0060|\r\n|\u0060x |\u003E asIs\u0060|\u0060x.AsIs()\u0060|\r\n|\u0060x =\u003E (fun x -\u003E MyFunc x)\u0060|\u0060x.Finish(x =\u003E MyFunc(x))\u0060\r\n|\u0060x =% 0\u0060|\u0060x.FinishConstant(0)\u0060|\r\n|\u0060RuntimeFarkle.build x\u0060|\u0060x.Build()\u0060|\r\n|\u0060RuntimeFarkle.buildUntyped x\u0060|\u0060x.BuildUntyped()\u0060|\r\n\r\nIf you want to define productions with a single member, you can omit the calls to \u0060Appended()\u0060 or \u0060Extended()\u0060 as follows:\r\n\r\n|F#|C#|C# but shorter|\r\n|--|--|--------------|\r\n|\u0060!\u0026 str =\u003E fun () -\u003E v\u0060|\u0060str.Appended().Finish(() =\u003E v)\u0060|\u0060str.Finish(() =\u003E v)\u0060\\*|\r\n|\u0060!% x =\u003E fun () -\u003E v\u0060|\u0060x.Appended().Finish(() =\u003E v)\u0060|\u0060x.Finish(() =\u003E v)\u0060\\*|\r\n|\u0060!@ x =\u003E f\u0060|\u0060x.Extended().Finish(f)\u0060|\u0060x.Finish(f)\u0060|\r\n|\u0060!\u0026 str =% v\u0060|\u0060str.Appended().FinishConstant(v)\u0060|\u0060str.FinishConstant(v)\u0060|\r\n|\u0060!% x =% v\u0060|\u0060x.Appended().FinishConstant(v)\u0060|\u0060x.FinishConstant(v)\u0060\\*|\r\n|\u0060!@ x |\u003E asIs\u0060|\u0060x.Extended().AsIs()\u0060|\u0060x.AsIs()\u0060|\r\n\r\n\u003E Methods with an asterisk (\\*) were introduced in Farkle 6.5.0.\r\n\r\nThe \u0060Build\u0060 and \u0060BuildUntyped\u0060 extension methods accept an optional \u0060CancellationToken\u0060 and will throw an \u0060OperationCanceledException\u0060 if it gets triggered.\r\n\r\n### A complete example\r\n\r\nLet\u0027s take a look at [the calculator we made at the quick start guide](quickstart.html#Writing-more-complex-nonterminals) written in C#:\r\n\r\n\u0060\u0060\u0060 csharp\r\nusing System;\r\nusing Farkle.Builder;\r\nusing Farkle.Builder.OperatorPrecedence;\r\n\r\npublic static class SimpleMaths\r\n{\r\n    public static readonly DesigntimeFarkle\u003Cdouble\u003E Designtime;\r\n    public static readonly RuntimeFarkle\u003Cdouble\u003E Runtime;\r\n\r\n    static SimpleMaths()\r\n    {\r\n        DesigntimeFarkle\u003Cdouble\u003E number = Terminals.Double(\u0022Number\u0022);\r\n\r\n        DesigntimeFarkle\u003Cdouble\u003E expression = Nonterminal.Create\u003Cdouble\u003E(\u0022Expression\u0022);\r\n        expression.SetProductions(\r\n            number.AsIs(),\r\n            expression.Extended().Append(\u0022\u002B\u0022).Extend(expression).Finish((x1, x2) =\u003E x1 \u002B x2),\r\n            expression.Extended().Append(\u0022-\u0022).Extend(expression).Finish((x1, x2) =\u003E x1 - x2),\r\n            expression.Extended().Append(\u0022*\u0022).Extend(expression).Finish((x1, x2) =\u003E x1 * x2),\r\n            expression.Extended().Append(\u0022/\u0022).Extend(expression).Finish((x1, x2) =\u003E x1 / x2),\r\n            \u0022-\u0022.Appended().Extend(expression).WithPrecedence(out object NEG).Finish(x =\u003E -x),\r\n            expression.Extended().Append(\u0022^\u0022).Extend(expression).Finish(Math.Pow),\r\n            \u0022(\u0022.Appended().Extend(expression).Append(\u0022)\u0022).AsIs());\r\n\r\n        OperatorScope opScope = new OperatorScope(\r\n            new LeftAssociative(\u0022\u002B\u0022, \u0022-\u0022),\r\n            new LeftAssociative(\u0022*\u0022, \u0022/\u0022),\r\n            new PrecedenceOnly(NEG),\r\n            new RightAssociative(\u0022^\u0022));\r\n\r\n        Designtime = expression.WithOperatorScope(opScope);\r\n        Runtime = Designtime.Build();\r\n    }\r\n}\r\n\u0060\u0060\u0060\r\n\r\nNotice how we called the \u0060WithPrecedence\u0060 method. In F# we were passing an object to the \u0060prec\u0060 function. In C# we let the method create and return that object to us, taking advantage of C# 7.0\u0027s \u0060out\u0060 variable declarations. We can still pass an object if we want.\r\n\r\n### Customizing designtime Farkles\r\n\r\nTo customize things like the case-sensitivity of designtime Farkles, there are some extension methods for them that reside in the \u0060Farkle.Builder\u0060 namespace. Let\u0027s take a look at an example:\r\n\r\n\u0060\u0060\u0060 csharp\r\nRuntimeFarkle\u003Cdouble\u003E customized =\r\n    SimpleMaths.Designtime\r\n        .AddBlockComment(\u0022/*\u0022, \u0022*/\u0022)\r\n        .AddLineComment(\u0022//\u0022)\r\n        .AutoWhitespace(false)\r\n        .CaseSensitive(false)\r\n        .MarkForPrecompile()\r\n        .Build();\r\n\u0060\u0060\u0060\r\n\r\n## Parsing\r\n\r\nTo parse text, there are some extension methods for runtime Farkles that reside in the \u0060Farkle\u0060 namespace. These functions return an F# result type that can nevertheless be used from C# like this:\r\n\r\n\u0060\u0060\u0060 csharp\r\nusing Microsoft.FSharp.Core;\r\n\r\nDesigntimeFarkle\u003Cdouble\u003E designtime = /*...*/;\r\nRuntimeFarkle\u003Cdouble\u003E runtime = designtime.Build();\r\n// Parsing strings.\r\nFSharpResult\u003Cdouble, FarkleError\u003E result = runtime.Parse(\u0022foobar\u0022);\r\n\r\nif (result.IsOk)\r\n    Console.WriteLine(\u0022Success. Result: {0}\u0022, result.OkValue);\r\nelse\r\n    Console.WriteLine(\u0022Failure. Error message: {0}\u0022, result.ErrorValue);\r\n\r\n// Parsing ReadOnlyMemories\r\nruntime.Parse(\u0022foobar\u0022.AsMemory());\r\n// Parsing TextReaders\r\nusing (TextReader f = File.OpenText(\u0022foobar.txt\u0022))\r\n{\r\n    runtime.Parse(f);\r\n}\r\n// Parsing files\r\nruntime.ParseFile(\u0022foobar.txt\u0022);\r\n\u0060\u0060\u0060\r\n\r\n---\r\n\r\nSo, I hope you enjoyed this little guide. If you did, don\u0027t forget to give Farkle a try, and maybe you feel especially sharp today, and want to hit the star button as well. I hope that all of you have a wonderful day, and to see you soon. Goodbye!\r\n\r\n[fsharp]: quickstart.html\r\n[regex]: reference/farkle-builder-regex.html\r\n[predefinedsets]: reference/farkle-builder-predefinedsets.html\r\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/index.html","title":"What is Farkle?\r\n","content":"# What is Farkle?\r\n\r\nFarkle is a text parser library for .NET, featuring the best of both worlds: __LALR parser combinators__. Users define the terminals and nonterminals of their grammars, what to do when each of them is encountered, and Farkle takes care of the rest.\r\n\r\nThe Farkle library can be \u003Ca href=\u0022https://nuget.org/packages/Farkle\u0022\u003Einstalled from NuGet\u003C/a\u003E:\r\n\u0060\u0060\u0060\r\ndotnet add package Farkle\r\n\u0060\u0060\u0060\r\n\r\n## Features\r\n\r\n* __Speed__: Farkle is fast. Its performance is a top priority and lots of time has been invested in its optimization.\r\n* __Language compatibility__: Farkle is usable from both C# and F#, with an intuitive API for each language. __It even supports C# 8.0\u0027s nullable reference types!__\r\n* __Fast development cycle__: Unlike parser generators, Farkle does not generate any source files. Your grammars are type-safe and created entirely from code, allowing features like IntelliSense and real-time syntax error reporting.\r\n* __Integration with MSBuild__: Farkle can optionally integrate with MSBuild to enable features like [ahead-of-time grammar building](the-precompiler.html) which drastically reduces startup times and catches grammar errors like LALR conflicts at compile time.\r\n* __Large file support__: Farkle can parse large files without entirely reading them to memory.\r\n* __Grammar introspection__: Farkle provides [APIs that allow your grammars to be inspected from code](reference/farkle-grammar-grammar.html).\r\n* __Wide framework support__: Farkle targets .NET Standard 2.0 at minimum, supporting .NET Framework 4.6.1\u002B, .NET Core 2.0\u002B, Xamarin, UWP and Unity.\r\n* __Templating__: Farkle supports [creating templated text files from grammars](templates.html) using [Scriban][scriban].\r\n\r\n[Learn more](choosing-a-parser.html) about Farkle\u0027s features, compared with other .NET parsers.\r\n\r\n## Documentation\r\n\r\nThe library comes with comprehensible documentation.\r\n\r\n * [Quick Start: Creating a calculator](quickstart.html) to get started with writing a simple calculator in F#.\r\n\r\n * [Using Farkle with C#](csharp.html) to learn what changes when using Farkle in a C# project.\r\n\r\n * [API Reference](reference/index.html) contains automatically generated documentation for all types, modules and functions in the library.\r\n\r\n## Samples\r\n\r\n* A __JSON parser__ powered by Farkle and written in both [C#][json-csharp] and [F#][json-fsharp].\r\n\r\n* A __mathematical expression parser__ powered by Farkle and written in [F#][simple-maths], also showcasing some more advanced features.\r\n\r\n* I used Farkle to write [a linear programming problem parser for a university assignment](https://github.com/teo-tsirpanis/uom/tree/master/s4/linear-and-network-programming/LinearProgrammingProblemParser). The code is extensively commented in Greek.\r\n\r\n* A simple indent-based language parser that supports virtual terminals written in [F#][indent-based]. The most advanced example; it explains how to write a custom tokenizer.\r\n\r\n## Contributing and copyright\r\n\r\nThe project is hosted on [GitHub][gh] where you can [report issues][issues], fork the project and submit pull requests.\r\n\r\nThe library is available under the MIT license, which allows modification and\r\nredistribution for both commercial and non-commercial purposes. For more information see the [License file][license] in the GitHub repository.\r\n\r\n  [nuget]: https://nuget.org/packages/Farkle\r\n  [scriban]: https://github.com/lunet-io/Scriban\r\n  [json-csharp]: https://github.com/teo-tsirpanis/Farkle/blob/mainstream/sample/Farkle.Samples.CSharp/JSON.cs\r\n  [json-fsharp]: https://github.com/teo-tsirpanis/Farkle/blob/mainstream/sample/Farkle.Samples.FSharp/JSON.fs\r\n  [simple-maths]: https://github.com/teo-tsirpanis/Farkle/blob/mainstream/sample/Farkle.Samples.FSharp/SimpleMaths.fs\r\n  [indent-based]: https://github.com/teo-tsirpanis/Farkle/blob/mainstream/sample/Farkle.Samples.FSharp/IndentBased.fs\r\n  [gh]: https://github.com/teo-tsirpanis/Farkle\r\n  [issues]: https://github.com/teo-tsirpanis/Farkle/issues\r\n  [license]: https://github.com/teo-tsirpanis/Farkle/blob/mainstream/LICENSE.txt\r\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/quickstart.html","title":"Quick Start: Creating a calculator\r\n","content":"(*** hide ***)\n#r \u0022nuget: Farkle, 6.5.1\u0022\n\n(**\n# Quick Start: Creating a calculator\n\nHello everyone. This guide will help you use Farkle. We will be using F#, but during the process, you will learn some useful things about Farkle itself. There\u0027s [another guide that explains what\u0027s different with C#][csharp]. Familiarity with context-free grammars and parsing will be very helpful.\n\n## How Farkle works\n\nWhile parser combinator libraries like FParsec combine many small parsers into a big parser, Farkle combines simple _grammars_ (i.e. descriptions of languages) into more complex ones, and has a single, multi-purpose parser. These composable grammars are called _designtime Farkles_ and implement the \u0060Farkle.Builder.DesigntimeFarkle\u0060 interface.\n\nAlso, as with FParsec, a designtime Farkle can \u0022return\u0022 something. In this case it also implements the \u0060DesigntimeFarkle\u003CTResult\u003E\u0060 interface. For our calculator, our designtime Farkles will return a number, which is the numerical result of our mathematical expression.\n\n\u003E __Warning:__ Despite designtime Farkles being interfaces, implementing it in your code is not allowed and will throw an exception if a custom designtime Farkle implementation is somehow passed to Farkle.\n\nTo be able to use a designtime Farkle, we will first give it to a component called the _builder_. The builder will check the grammar for errors, create the necessary structures for the parser, and give us another special object called a _runtime Farkle_. With a runtime Farkle, we can parse text to our heart\u0027s desires, but in contrast with a designtime Farkle, we cannot compose it.\n\n10: By the way, Farkle means \u0022FArkle Recognizes Known Languages Easily\u0022.\n\n20: And \u0022FArkle\u0022 means (GOTO 10).\n\n30: I guess you can\u0027t read this line.\n\n## Designing our grammar\n\nWe want to design a grammar that represents mathematical expressions on floating-point numbers. The supported operations will be addition, subtraction, multiplication, division, and unary negation. The operator precedence has to be honored, as well as parentheses.\n\nA similar grammar but on the integers, can be found [here][calculator]\n\nFor those that don\u0027t know, a context-free grammar is made of _terminals_, _nonterminals_ and _productions_.\n\n* Terminals are elementary symbols that correspond to characters from our source text.\n\n*\n    Nonterminals are composite symbols made of terminals and other nonterminals.\n\n    One of the nonterminals is designated as the _start symbol_, and it is the nonterminal from which parsing will start.\n\n* Productions are the rules that define what symbols can be placed inside a nonterminal, and at which order.\n\n### The terminals\n\nWe don\u0027t have to explicitly write a terminal for the mathematical symbols. They are just symbols that can have only one value and do not contain any meaningful information other than their presence. Farkle calls these types of symbols _literals_ and treats them specially to reduce boilerplate.\n\nSo we are now left with one terminal to define; the terminal for our decimal numbers. In Farkle, terminals are made of a regular expression that specifies the text that can match to this terminal, and a delegate called _transformer_ that converts the text to an arbitrary object.\n\nThere are three ways to create this terminal, starting from the simplest:\n\n---\n\nThe \u0060Farkle.Builder.Terminals\u0060 has functions that allow you to create some commonly needed terminals, like integers or floating-point numbers. We create our terminal this way:\n*)\n\nopen Farkle\nopen Farkle.Builder\nopen System\n\nlet number = Terminals.genericReal\u003Cfloat\u003E false \u0022Number\u0022\n\n(**\nThe boolean parameter specifies whether to allow a minus sign at the beginning (we don\u0027t). The last parameter is the terminal\u0027s name, used for error reporting.\n\nThe \u0060Terminals\u0060 module has more functions. You can see them all [in the documentation](reference/farkle-builder-terminals.html).\n\n---\n\nIf Farkle doesn\u0027t have a ready to use function for your terminal, we have to create the terminal ourselves. The most easy way to do it is to write a regex using a string:\n*)\n\nlet numberStringRegex =\n    Regex.regexString @\u0022\\d\u002B(\\.\\d\u002B)?(e[\u002B-]?\\d\u002B)?\u0022\n    |\u003E terminal \u0022Number\u0022 (T(fun _ x -\u003E float (x.ToString())))\n\n(**\nThe \u0060regexString\u0060 function uses a quite familiar regex syntax. You can learn more about it [at its own documentation page][stringRegexes].\n\nLet\u0027s take a look at the \u0060terminal\u0060 function. Its last parameter is the regex, which we passed at the beggining for convenience and its first parameter is the terminal\u0027s name; nothing unusual here. Its second parameter is called a _transformer_ and is a delegate that converts the characters matched by our regex to an arbitrary object; in our case an integer.\n\n#### Writing a transformer\n\nThe transformer\u0027s first parameter is an object of type [\u0060ITransformerContext\u0060](reference/farkle-itransformercontext.html) and is useful if you want to access the token\u0027s position or share some state between transformers, and its second parameter is a \u0060ReadOnlySpan\u0060 of the characters matched by our regex, which will be converted to a floating-point number by our transformer.\n\n\u0060T\u0060 is the delegate\u0027s F# name. Because you have to specify it due to the language\u0027s limitations it was shortened to one letter for brevity.\n\nYou can view transformers as little parsers that always parse well-formatted text. In our example, the transformer for \u0060Number\u0060 does not usually have to worry about exceptions from invalid input since the regex we specified guarantees the kind of input it expects. There are exceptions to this, like the user passing an extremely high integer. Such inputs will cause an exception to be raised. The built-in terminals the \u0060Farkle.Builder.Terminals\u0060 module provides will handle the exception a little more gracefully but still fail the parsing.\n\nSpeaking of graceful errors, you can raise errors in your transformer by calling the \u0060error\u0060 function, or the \u0060errorf\u0060 function if you want formatted strings. If you are using C# or want to customize the exact position of the error, you can directly throw a \u0060Farkle.ParserApplicationException\u0060. They will be caught by the parser and can be uniformly handled like Farkle\u0027s own errors, as we will see later.\n\n---\n\nFor the most advanced use cases, Farkle allows you to construct a regex from code. Directly constructing a regex from code is rarely useful for the average user of Farkle, but might come in handy when for example the regex\u0027s structure is not known at compile time, or it is complex enough to merit some code reuse.\n*)\n\nopen Farkle.Builder.Regex\n\nlet numberConstructedRegex =\n    // Regexes are composable!\n    let atLeastOneNumber = chars PredefinedSets.Number |\u003E atLeast 1\n    // You can freely mix string regexes and constructed regexes.\n    // let atLeastOneNumber = regexString @\u0022\\d\u002B\u0022\n    concat [\n        atLeastOneNumber\n        optional \u003C| (char \u0027.\u0027 \u003C\u0026\u003E atLeastOneNumber)\n        [chars \u0022eE\u0022; chars \u0022\u002B-\u0022 |\u003E optional; atLeastOneNumber]\n        |\u003E concat\n        |\u003E optional\n    ]\n    |\u003E terminal \u0022Number\u0022 (T(fun _ x -\u003E float (x.ToString())))\n\n(**\nYou can learn more about the functions above [at the documentation](reference/farkle-builder-regexmodule.html). More character sets of the \u0060Farkle.Builder.PredefinedSets\u0060 module can also be found [at the documentation](reference/farkle-builder-predefinedsets.html)\n\n\u003E __Note:__ The regexes\u0027 type is \u0060Farkle.Builder.Regex\u0060. They are totally unrelated to .NET\u0027s \u0060System.Text.RegularExpressions.Regex\u0060. We can\u0027t convert between these two types, or directly match text against Farkle\u0027s regexes.\n\nThe terminal we created is of type \u0060DesigntimeFarkle\u003Cfloat\u003E\u0060. This means that we can use it to parse floating-point numbers from text, but we want to create something bigger than that. As we are going to see, we can compose designtime Farkles into bigger ones, using nonterminals.\n\n## The nonterminals.\n\n### Writing simple nonterminals.\n\nBecause the calculator\u0027s nonterminals are a bit complicated, we have to take a brief interlude and tell how to create simpler ones.\n\nSay we want to make a very simple calculator that can either add or subtract two numbers together. And let\u0027s say that an empty string would result to zero. This is the grammar of our calculator in [Backus-Naur Form][bnf]:\n\n\u0060\u0060\u0060\n\u003CExp\u003E ::= Number \u002B Number\n\u003CExp\u003E ::= Number - Number\n\u003CExp\u003E ::= \u003C\u003E\n\u0060\u0060\u0060\n\nFor those that don\u0027t understand the snippet above, we define a nonterminal named \u0060Exp\u0060, that has three productions associated with it, meaning an \u0060Exp\u0060 can be made in three ways: either by taking a sequence of the \u0060Number\u0060 terminal, either the \u0060\u002B\u0060 or the \u0060-\u0060 terminal, and another \u0060Number\u0060 terminal, or by no symbols at all.\n\nWriting the same thing in Farkle is actually surprisingly simple:\n*)\n\nlet justTwoNumbers = \u0022Exp\u0022 ||= [\n    !@ number .\u003E\u003E \u0022\u002B\u0022 .\u003E\u003E. number =\u003E (fun x1 x2 -\u003E x1 \u002B x2)\n    !@ number .\u003E\u003E \u0022-\u0022 .\u003E\u003E. number =\u003E (fun x1 x2 -\u003E x1 - x2)\n    empty =% 0.0\n]\n\n(**\nLet\u0027s explain what was going here. With the \u0060||=\u0060 operator, we define a nonterminal with its productions. In its left side goes its name, and in its right side go the productions that can produce it.\n\nSee these strange symbols inside the list? They chain designtime Farkles together and signify which of them have information we care about. \u0060!@\u0060 starts defining a production with its first member carrying significant information (the first operand). To start a production with a designtime Farkle that does not carry significant information, we can use \u0060!%\u0060.\n\nThe \u0060.\u003E\u003E\u0060 and \u0060.\u003E\u003E.\u0060 operators resemble FParsec\u0027s ones. \u0060.\u003E\u003E\u0060 chains a new designtime Farkle we don\u0027t care what contains, and \u0060.\u003E\u003E.\u0060 chains one we do.\n\nWith \u0060.\u003E\u003E\u0060, we can also chain string literals, instead of creating a terminal for each. We can also start a production with a literal using the \u0060!\u0026\u0060 operator.\n\nThe \u0060=\u003E\u0060 operator finishes the creation of a production with a function that combines its members that we marked as significant. Such functions are called _fusers_. In the first production we added the numbers and in the second we subtracted them. So, depending on the expression we entered, \u0060_justTwoNumbers\u0060 would return either the sum, or the difference of them. Obviously, all productions of a nonterminal have to return the same type.\n\nIn the third case, we defined an empty production using \u0060empty\u0060 (what a coincidence!) We used \u0060empty =% 0.0\u0060 as a shortcut instead of writing \u0060empty =\u003E (fun () -\u003E 0.0)\u0060.\n\nAn unfinished production is called a _production builder_. You can mark up to 16 significant members in a production builder.\n\nYou can pass an empty list in the right hand of the \u0060||=\u0060 operator but the grammar will be invalid. A nonterminal must always have at least one production.\n\n### Writing more complex nonterminals\n\nWe want our calculator to implement the following grammar [taken from Bison\u0027s documentation][bison-calculator]:\n\n\u0060\u0060\u0060\n%left \u0027-\u0027 \u0027\u002B\u0027\n%left \u0027*\u0027 \u0027/\u0027\n%precedence NEG\n%right \u0027^\u0027\n\nexp:\n    NUM\n    | exp \u0027\u002B\u0027 exp        { $$ = $1 \u002B $3;      }\n    | exp \u0027-\u0027 exp        { $$ = $1 - $3;      }\n    | exp \u0027*\u0027 exp        { $$ = $1 * $3;      }\n    | exp \u0027/\u0027 exp        { $$ = $1 / $3;      }\n    | \u0027-\u0027 exp  %prec NEG { $$ = -$2;          }\n    | exp \u0027^\u0027 exp        { $$ = pow ($1, $3); }\n    | \u0027(\u0027 exp \u0027)\u0027        { $$ = $2;           }\n;\n\u0060\u0060\u0060\n\nAnd this is how to implement it in Farkle:\n*)\n\nopen Farkle.Builder.OperatorPrecedence\n\nlet expression =\n    let NEG = obj()\n\n    let expression = nonterminal \u0022Expression\u0022\n    expression.SetProductions(\n        !@ number |\u003E asIs,\n        !@ expression .\u003E\u003E \u0022\u002B\u0022 .\u003E\u003E. expression =\u003E (fun x1 x2 -\u003E x1 \u002B x2),\n        !@ expression .\u003E\u003E \u0022-\u0022 .\u003E\u003E. expression =\u003E (fun x1 x2 -\u003E x1 - x2),\n        !@ expression .\u003E\u003E \u0022*\u0022 .\u003E\u003E. expression =\u003E (fun x1 x2 -\u003E x1 * x2),\n        !@ expression .\u003E\u003E \u0022/\u0022 .\u003E\u003E. expression =\u003E (fun x1 x2 -\u003E x1 / x2),\n        !\u0026 \u0022-\u0022 .\u003E\u003E. expression |\u003E prec NEG =\u003E (fun x -\u003E -x),\n        !@ expression .\u003E\u003E \u0022^\u0022 .\u003E\u003E. expression =\u003E (fun x1 x2 -\u003E Math.Pow(x1, x2)),\n        // We use |\u003E asIs instead of =\u003E (fun x -\u003E x).\n        !\u0026 \u0022(\u0022 .\u003E\u003E. expression .\u003E\u003E \u0022)\u0022 |\u003E asIs\n    )\n\n    let opScope =\n        OperatorScope(\n            LeftAssociative(\u0022\u002B\u0022, \u0022-\u0022),\n            LeftAssociative(\u0022*\u0022, \u0022/\u0022),\n            PrecedenceOnly(NEG),\n            RightAssociative(\u0022^\u0022)\n        )\n\n    DesigntimeFarkle.withOperatorScope opScope expression\n\n(**\nAs you see, our grammar in Farkle looks pretty similar to the one in Bison. Let\u0027s take a look at some newly introduced things:\n\n### Defining recursive nonterminals\n\nThe \u0060nonterminal\u0060 function is useful for recursive nonterminals. It creates a nonterminal whose productions will be set later with the \u0060SetProductions\u0060 method. We can only once set them, all together. Calling the method again will have no effect.\n\nOur nonterminal is of type \u0060Nonterminal\u003Cfloat\u003E\u0060, but implements the \u0060DesigntimeFarkle\u003Cfloat\u003E\u0060 interface.\n\n### Operator Precedence\n\nWe specify the operator associativity and precedence using an _operator scope_ that is made of _associativity groups_. There are four associativity group types: \u0060LeftAssociative\u0060, \u0060RightAssociative\u0060, \u0060NonAssociative\u0060 and \u0060PrecedenceOnly\u0060 that behave similarly to Bison\u0027s \u0060%left\u0060, \u0060%right\u0060, \u0060%nonassoc\u0060 and \u0060%precedence\u0060. Their difference is best explained [at Bison\u0027s documentation][bison-assoc-types].\n\nThe groups in an operator scope are sorted by precedence in ascending order. In our grammar, the \u0060\u002B\u0060 and \u0060-\u0060 symbols have the lowest precedence, followed by \u0060*\u0060 and \u0060/\u0060. Until now, all these operators are left-associative, meaning that \u00601 \u002B 2 \u002B 3\u0060 is interpreted as \u0060(1 \u002B 2) \u002B 3\u0060.\n\nNext in the precedence hierarchy is the unary negation. We can\u0027t define \u0060-\u0060 again; instead we use the \u0060prec\u0060 function to assign the unary negation\u0027s production a _contextual reflection token_, which is a dummy object that represents the production in the operator scope. This way, Farkle will recognize that \u0060-\u0060 has higher precedence in unary negation than in subtraction. That new group is of type \u0060PrecedenceOnly\u0060, meaning that it doesn\u0027t specify associativity; only precedence.\n\nAnd at the highest priority we have the exponentiation operator, which is right associative, meaning that \u00602 ^ 3 ^ 4\u0060 is interpreted as \u00602 ^ (3 ^ 4)\u0060.\n\nWe set this operator scope to our designtime Farkle using the \u0060DesigntimeFarkle.withOperatorScope\u0060 function. There are some more things to be careful about when using operator scopes:\n\n* Setting a second operator scope to a designtime Farkle will discard the one that was previous set.\n\n* An operator can belong in only one operator scope. Otherwise undefined behavior will occur.\n\n## Building our grammar\n\nWith our nonterminals being ready, it\u0027s time to create a runtime Farkle that can parse mathematical expressions. The builder will create tables for the parser using the LALR algorithm, and a Deterministic Finite Automaton (DFA) for the tokenizer. It also creates a special object called a _post-processor_ that is responsible for executing the transformers and fusers.\n\nAll that stuff can be done with a single line of code:\n*)\n\nlet myMarvelousRuntimeFarkle = RuntimeFarkle.build expression\n\n(**\n## Using the runtime Farkle\n\nNow that we got it, it\u0027s time to put it to action. Farkle supports parsing text from various sources, namely strings, arbitrary character buffers on the heap (like substrings, arrays or parts of arrays) using \u0060System.ReadOnlyMemory\u003Cchar\u003E\u0060, files and \u0060System.IO.TextReader\u0060s.\n\nThe functions return an F# \u0060Result\u0060 type whose error value (if it unfortunately exists), can show exactly what did go wrong.\n\n\u003E __Note:__ If a grammar is invalid (has an LALR conflict, two terminals are indistinguishable or something else), building would still succeed, but parsing would fail every time.\n\nLet\u0027s look at some some examples:\n*)\n\nopen System.IO\n\n// You can consume the parsing result like this:\nmatch RuntimeFarkle.parseString myMarvelousRuntimeFarkle \u0022103 \u002B 137\u002B281\u0022 with\n| Ok result -\u003E printfn \u0022The answer is %f\u0022 result\n// The %O format specifier (or alternatively, calling ToString())\n// will create human-readable error messages.\n| Error err -\u003E printfn \u0022Error: %O\u0022 err\n\n// You can parse any Memory\u003Cchar\u003E, such a substring or even an array of characters!\nlet mem = \u0022The answer is 45\u0022.AsMemory().Slice(14)\nRuntimeFarkle.parseMemory myMarvelousRuntimeFarkle mem\n\nRuntimeFarkle.parseFile myMarvelousRuntimeFarkle \u0022example.txt\u0022\n\nlet myStringReader = new StringReader(\u002245 \u002B 198 - 647 \u002B 2 * 478 - 488 \u002B 801 - 248\u0022)\nRuntimeFarkle.parseTextReader myMarvelousRuntimeFarkle myStringReader\n\n(**\n## Customizing our designtime Farkle\n\nBefore we finish, let\u0027s take a look at one more thing; how to further customize a designtime Farkle.\n\n* Most programming languages have comments, so why would Farkle not support them as well? We can create a designtime Farkle that adds support for comments in another one. Both block and line comments are supported. They cannot be nested.\n\n* By default, grammars are not case sensitive. But we can make them if we want.\n\n* By default, whitespace characters are ignored. We can change it once again.\n\n* We can also specify a symbol that will be discarded when encountered by the parser. These symbols are called _noise symbols_ and are defined by regexes.\n\nWe will see some customizations as an example:\n*)\n\nlet _customized =\n    expression\n    // You can add as many types of block or line comments as you want.\n    |\u003E DesigntimeFarkle.addBlockComment \u0022/*\u0022 \u0022*/\u0022\n    |\u003E DesigntimeFarkle.addLineComment \u0022//\u0022\n    |\u003E DesigntimeFarkle.caseSensitive true\n    // Whether to ignore whitespace between terminals; true by default.\n    |\u003E DesigntimeFarkle.autoWhitespace false\n    // Adds an arbitrary symbol that will be ignored by Farkle.\n    // It needs a regex, and a name for diagnostics purposes.\n    |\u003E DesigntimeFarkle.addNoiseSymbol \u0022Letters\u0022 (chars AllLetters)\n\n(**\n\u003E __Note:__ These customizations have to be done at the top-level designtime Farkle that is going to be built (or they will have no effect) and always apply to the entire grammar.\n\n---\n\nSo, I hope you enjoyed this little tutorial. If you did, don\u0027t forget to give Farkle a try, and maybe you have any question, found a bug, or want a feature, and want to [open a GitHub issue][githubIssues] as well. I hope that all of you have a wonderful day and to see you soon. Goodbye!\n\n[csharp]: csharp.html\n[calculator]: https://github.com/teo-tsirpanis/Farkle/blob/2ecc66d6b7b43a1b52b889aec78e865c0c5cf325/sample/Farkle.JSON.FSharp/SimpleMaths.fs#L68\n[predefinedSets]: http://goldparser.org/doc/grammars/predefined-sets.htm\n[stringRegexes]: string-regexes.html\n[bnf]: https://en.wikipedia.org/wiki/Backus-Naur_form\n[bison-calculator]: https://www.gnu.org/software/bison/manual/html_node/Infix-Calc.html\n[bison-assoc-types]: https://www.gnu.org/software/bison/manual/html_node/Using-Precedence.html\n[githubIssues]: https://github.com/teo-tsirpanis/farkle/issues\n*)"},{"uri":"https://teo-tsirpanis.github.io/Farkle/string-regexes.html","title":"Farkle\u0027s string regexes\r\n","content":"# Farkle\u0027s string regexes\r\n\r\nIn Farkle, terminals are defined by regular expressions or _regexes_. Defining a non-trivial regex used to take several lines of code like this example of a number with an optional sign at the beginning:\r\n\r\n\u0060\u0060\u0060 fsharp\r\nopen Farkle.Builder.Regex\r\n\r\nlet number = concat [\r\n    chars \u0022\u002B-\u0022 |\u003E optional\r\n    plus Number\r\n]\r\n\u0060\u0060\u0060\r\n\r\nNot anymore. Starting with Farkle 6, a regex can be defined much more simply and intuitively with a string. Here is the previous example, using a string regex:\r\n\r\n\u0060\u0060\u0060 fsharp\r\nopen Farkle.Builder\r\n\r\nlet number = Regex.regexString \u0022[\u002B-]?\\d\u002B\u0022\r\n\u0060\u0060\u0060\r\n\r\nAnd in C#:\r\n\r\n\u0060\u0060\u0060 csharp\r\nusing Farkle.Builder;\r\n\r\nvar number = Regex.FromRegexString(\u0022[\u002B-]?\\\\d\u002B\u0022);\r\n\u0060\u0060\u0060\r\n\r\nThese regexes are full-blown \u0060Regex\u0060-typed objects. They are composable, reusable and can be used anywhere instead of constructed regexes. Despite their similarity however, the language of regex strings is not the same with the language of popular regex libraries like PCRE or .NET\u0027s own \u0060System.Text.RegularExpressions.Regex\u0060. In this guide we will take a look at what is supported in regex strings, what isn\u0027t and what is different. So, are you ready? Let\u0027s do this!\r\n\r\n## Supported string regex constructs\r\n\r\n### Character classes\r\n\r\nIn Farkle\u0027s string regexes, you can define character classes mostly in the same way with PCRE regexes Here\u0027s what is supported:\r\n\r\n* You can define a regex that recognizes only one character -say \u0060A\u0060- surprisingly simply, by typing \u0060A\u0060.\r\n* You can define a regex that recognizes only some characters -say \u0060A\u0060, \u0060D\u0060, \u0060O\u0060 and \u0060U\u0060-, by typing \u0060[ADOU]\u0060. If you want your regex to match any character except of the four that were mentioned before, you can do that by typing \u0060[^ADOU]\u0060.\r\n* You can define a regex that recognizes all characters in a range -say between \u0060A\u0060 and \u0060Z\u0060-, by typing \u0060[A-Z]\u0060. Similarly, you can match all characters that don\u0027t lie between \u0060A\u0060 and \u0060Z\u0060 by typing \u0060[^A-Z]\u0060.\r\n* Since Farkle 6.2.0, you can combine the two previous rules and recognize multiple character sets and ranges on the same regex construct. For example you can match all valid Base64 characters (excluding the padding) by typing \u0060[A-Za-z\u002B/]\u0060 and you can match all characters except of those that appear in valid Base64 by typing \u0060[^A-Za-z\u002B/]\u0060.\r\n* You can define a regex that recognizes all characters in a predefined set -say \u0060Katakana\u0060- by typing \u0060\\p{Katakana}\u0060. The predefined sets\u0027 names are the same in the [\u0060Farkle.Builder.PredefinedSets\u0060 module](reference/farkle-builder-predefinedsets.html). Similarly you can match all characters except of Katakana by typing \u0060\\P{Katakana}\u0060. Since Farkle 6.4.0, you can also use the prefedefined set\u0027s property name in addition to the GOLD Parser name. For example, you can match the \u0060All Letters\u0060 predefined set by typing both \u0060\\p{All Letters}\u0060 and \u0060\\p{AllLetters}\u0060.\r\n* Decimal digits can be matched by typing \u0060\\d\u0060. All characters except of decimal digits can be matched by typing \u0060\\D\u0060.\r\n* Whitespace can be matched by typing \u0060\\s\u0060. All characters except of whitespace can be matched by typing \u0060\\S\u0060. Carriage return, line feed, space and horizontal tab are considered whitespace.\r\n* You can match any other character by typing \u0060.\u0060. Just be careful of [the caveats](#The-dot-regex).\r\n* You can match a literal sequence of characters by enclosing them into single quotes. For example \u0060\u0027[ADOU].\u0027\u0060 will literally match the seven characters inside the single quotes without treating them specially. A single quote can be escaped by typing \u0060\u0027\u0027\u0060.\r\n\r\n\u003E __Note:__ Prior to Farkle 6.2.0, single quotes could be escaped with \u0060\\\u0027\u0060. After that version the regex parser was improved but some constructs like that are no longer possible to maintain unambiguity. \u0060\\\u0060 is not anymore specially treated in literal strings.\r\n\r\n* In character sets and ranges you have to use \u0060\\\u0060 to escape the following characters: \u0060-\\]^\u0060. For example, to match either left or the right brackets you have to type \u0060[\\[\\]]\u0060.\r\n* The backslash character itself can be escaped with \u0060\\\\\u0060.\r\n\r\n### Quantifiers\r\n\r\nAs with PCRE regexes, quantifiers like the \u0060*\u0060, \u0060\u002B\u0060 or \u0060?\u0060 mean \u0022zero or more\u0022, \u0022one or more\u0022, and \u0022zero or one\u0022 respectively. Less known quantifiers like \u0060{m,n}\u0060, \u0060{m,}\u0060 and \u0060{m}\u0060 mean \u0022between \u0060m\u0060 and \u0060n\u0060 times\u0022, \u0022at least \u0060m\u0060 times\u0022 and \u0022exactly \u0060m\u0060 times\u0022 respectively.\r\n\r\nYou can also stack quantifiers; \u0060\\d{4}?\u0060 will match either four decimal digits or none.\r\n\r\n\u003E __Note:__ Prior to Farkle 6.2.0, the regex above did not work due to a bug; you had to write \u0060(\\d{4})?\u0060.\r\n\r\n### Precedence and grouping\r\n\r\nThe regex disjunction operator \u0060|\u0060 takes precedence over regex concatenation, which means that \u0060foo|bar\u0060 matches either \u0060foo\u0060 or \u0060bar\u0060, not \u0060fo\u0060, either \u0060o\u0060 or \u0060b\u0060, and then \u0060ar\u0060. You can specify a custom operator precedence with parentheses. For example, \u0060fo(o|u)\u0060 matches only either \u0060foo\u0060 or \u0060fou\u0060.\r\n\r\n\u003E __Note:__ Parentheses exist only for defining operator precedence. Capturing groups is not supported.\r\n\r\n## Caveats\r\n\r\n### The dot regex\r\n\r\nWhen I was describing the \u0060.\u0060 regex, I intentionally told it matches any _other_ character and not _any_ character. In other words, __the \u0060.\u0060 regex is matched only if no other regex can be matched__. The difference is subtle but can have a difference in certain scenarios.\r\n\r\nLet\u0027s take a look at a simple regex for a string enclosed in double quotes that also supports escaping them: \u0060\u0022(.|\\\u0022)*\u0022\u0060.\r\n\r\n\u003E __Note:__ You will need additional escaping to write the above regex in code.\r\n\r\nThe dot in the above regex will be never matched to a double quote because it also can be matched to the double quote at the end which has a higher priority. In essence, the regex above is the equivalent to \u0060\u0022([^\u0022]|\\\u0022)*\u0022\u0060.\r\n\r\nNow, what if we required the string to have at least one character? The regex would have turned into \u0060\u0022(.|\\\u0022)\u002B\u0022\u0060.\r\n\r\nBut the regex above would match strings like \u0060\u0022\u0022foo\u0022\u0060. The reason to this is actually surprisingly simple. Generally \u0060x\u002B\u0060 is equivalent to \u0060xx*\u0060, making the regex above equivalent to \u0060\u0022(.|\\\u0022)(.|\\\u0022)*\u0022\u0060. In \u0060\u0022\u0022foo\u0022\u0060, the first double quote is matched to the first double quote in the regex, the second one is matched to the regex\u0027s first dot, and the third is matched to the regex\u0027s final double quote. So if you want a regex that matches strings with at least one character you have to explicitly write \u0060\u0022([^\u0022]|\\\u0022)\u002B\u0022\u0060.\r\n\r\n### Whitespace\r\n\r\nIn Farkle\u0027s string regexes, you can have arbitrary whitespace everywhere except of literal strings and character sets and ranges. This means that \u0060f o o ( bar ) ?\u0060 is equivalent to \u0060foo(bar)?\u0060. If you want to match a literal space you can escape the space (\u0060\u0027 \u0027\u0060) or use a character set (\u0060[ ]\u0060).\r\n\r\nThis deliberate deviation from the typical regex syntax was made due to Farkle\u0027s philosophy that whitespace is automatically handled by default, and allows you to write big regexes in a more clean and less compact way.\r\n\r\n### Escaping\r\n\r\nWhen using \u0060\\\u0060 in regexes, be careful with the string escaping performed by programming languages themselves. To match a decimal digit, F# allows you to write an unrecognized escape sequence like \u0060\u0022\\d\u0022\u0060, but C# doesn\u0027t, failing with an error and you have to use a verbatim string like \u0060@\u0022\\d\u0022\u0060.\r\n\r\nIn a more complicated example, if you want to match the literal sequence of characters \u0060\\d\u0060, the regex is either \u0060\u0027\\d\u0027\u0060 or \u0060\\\\d\u0060, which you would write as either \u0060\u0022\u0027\\\\d\u0027\u0022\u0060 or \u0060\u0022\\\\\\\\d\u0022\u0060, or as either \u0060@\u0022\u0027\\d\u0027\u0022\u0060 or \u0060@\u0022\\\\d\u0022\u0060 with a verbatim string.\r\n\r\nSimilarly, writing \u0060\u0022\\n\u0022\u0060 somewhere in a regex will be ignored because it is whitespace, as we saw earlier. If you want to match the literal sequence of characters \u0060\\n\u0060, you would follow the example we saw in the previous paragraph. If you want to match an actual line feed character, you would either write it with a literal string as \u0060\u0022\u0027\\n\u0027\u0022\u0060, or with a character set as \u0060\u0022[\\n]\u0022\u0060.\r\n\r\n### Unicode categories\r\n\r\nMatching characters that belong in a Unicode category is not yet possible. Support might be added in a future version of Farkle if there is demand for it.\r\n\r\n## How do they work\r\n\r\nFinally, let\u0027s take a look at how string regexes work. It\u0027s actually surprisingly simple. These strings are parsed and converted to constructed regexes using Farkle itself. That parsing happens when you build a designtime Farkle containing a string regex. If a syntax error occurs in a regex string, building the designtime Farkle will fail.\r\n\r\nYou can parse strings into regular expressions yourself by using the objects in the [\u0060Farkle.Builder.RegexGrammar\u0060 module](reference/farkle-builder-regexgrammar.html).\r\n\r\n---\r\n\r\nSo I hope you enjoyed this little tutorial. If you did, don\u0027t forget to give Farkle a try and maybe you feel especially quantified today and want to hit the star button as well. I hope that all of you have a wonderful day, and to see you soon. Goodbye!\r\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/templates.html","title":"Templating Reference\r\n","content":"# Templating Reference\r\n\r\nFarkle comes with a templating system which further helps developers work with the grammars they create. This system is a more powerful edition of both GOLD Parser\u0027s [\u0022Create Webpage\u0022][gold-webpage] and [\u0022Create Skeleton Program\u0022][gold-skeleton] tools. In this guide, we will first see how to create an HTML page describing our grammar, and next we will see how to create our own templates. So, are you ready? Let\u0027s do this!\r\n\r\n## Preparing ourselves\r\n\r\nBefore we start, we first have to install [Farkle\u0027s CLI tool from NuGet][farkle-tools-nuget] by opening a command prompt and running\r\n\r\n\u0060\u0060\u0060\r\ndotnet tool install -g Farkle.Tools\r\n\u0060\u0060\u0060\r\n\r\n### Supported input types\r\n\r\nThe CLI tool can work with grammars from three kinds of files:\r\n\r\n* GOLD Parser 5.0 Enhanced Grammar Tables files with the \u0060.egt\u0060 extension.\r\n* .NET assemblies with [precompiled](the-precompiler.html) grammars. These assemblies can target any framework and their dependencies don\u0027t have to be present. Because precompiled grammars are stored in the assembly\u0027s embedded resources, no code from them is executed.\r\n* .NET projects with precompiled grammars. The projects must have already been built; Farkle does not do it by itself at the moment.\r\n\r\nIf we don\u0027t explicitly specify an input, the CLI tool will try to find a project in the current directory. If only one is found, it will be used. Otherwise the tool will fail with an error.\r\n\r\n### Dealing with multiple precompiled grammars\r\n\r\nIf the assembly or project passed to the CLI tool has only one precompiled grammar, it will be automatically used. If it has more than one however, we can tell it which one to use by adding a \u0060::MyGrammar\u0060 to the end of the input path.\r\n\r\nTo see an example, if you want to pick a specific grammar from an assembly or project, you can do it by writing \u0060MyAssembly.dll::MyGrammar\u0060 or \u0060MyProject.csproj::MyGrammar\u0060 respectively. If the current directory has only one project and you are bored to type it, you can write \u0060::MyGrammar\u0060.\r\n\r\nYou can see the names of all precompiled grammars with the \u0060farkle list\u0060 command which also takes an assembly, a project, or tries to find one on its own.\r\n\r\n## Creating HTML pages\r\n\r\nFor the rest of this guide, we will assume that we have a project with a precompiled grammar next to us. Once we build it, we can create an HTML page by running \u0060farkle new\u0060.\r\n\r\nIf everything went well, we will see a file named like \u0060MyAwesomeGrammar.html\u0060. It describes the grammar\u0027s syntax, its LALR states, its DFA states and more. If you are just watching, take a look at a sample [HTML file generated for a JSON grammar](JSON-generated.html) to get a better idea.\r\n\r\nThese HTML files can be customized by omitting the state tables, the CSS styling, or by adding custom content at the end if their \u0060\u003Chead\u003E\u0060. Run \u0060farkle new --help\u0060 to get all the available options.\r\n\r\nYou can automatically generate an HTML file from your project\u0027s precompiled grammars by adding the following lines in it:\r\n\r\n\u0060\u0060\u0060 xml\r\n\u003CPropertyGroup\u003E\r\n  \u003CFarkleGenerateHtml\u003Etrue\u003C/FarkleGenerateHtml\u003E\r\n\u003C/PropertyGroup\u003E\r\n\u0060\u0060\u0060\r\n\r\nThe HTML files will be generated to your project\u0027s build output directory and cannot be customized in any way. They are intended for development use; for most customizability it is recommended to use the CLI tool.\r\n\r\n## Creating your own templates\r\n\r\nInstead of GOLD\u0027s custom and limited templating language, Farkle\u0027s templates use [Scriban], which features a much more powerful templating language. If you want to create your own templates, I recommend to first learn it from [Scriban\u0027s official documentation][scriban-doc].\r\n\r\n### Variables\r\n\r\nFarkle\u0027s templates can use the following Scriban variables:\r\n\r\n* \u0060file_extension\u0060: This variable is used to change the default extension of the output file. For example if you are creating an HTML template you would add a \u0060{{ file_extension = \u0022.html\u0022 }} at the beginning.\r\n\r\n* \u0060farkle.version\u0060: The version of the CLI tool.\r\n\r\n* \u0060grammar\u0060: A Farkle \u0060Grammar\u0060 object that represents the input grammar.\r\n\r\n  * \u0060grammar.productions_groupped\u0060: A \u0060System.Linq.IGrouping\u003CNonterminal,Production\u003E\u0060 object that groups productions by their head nonterminal.\r\n\r\n* \u0060grammar_path\u0060: The path to the given input file; either a grammar file or an assembly. When processing project files this variable will have the project\u0027s underlying assembly.\r\n\r\n* \u0060properties\u0060: An object that holds custom properties passed by the \u0060-prop\u0060 CLI argument. For example, if you pass \u0060-prop foo bar\u0060 to the CLI tool and write \u0060{{ properties.foo }}\u0060 in your template, it will be evaluated as \u0060bar\u0060.\r\n\r\nScriban imports all properties of Farkle\u0027s objects but changes their names. Take a look at [Farkle\u0027s built-in templates][builtin-templates] to get an idea how to write your own template, but keep in mind that the HTML templates use some constructs not available to custom templates, like Scriban\u0027s \u0060import\u0060 statement and some other internal functions.\r\n\r\n### Functions\r\n\r\nThe templates can furthermore use the following functions:\r\n\r\n* \u0060to_base_64 \u003Cbool\u003E\u0060: Returns the grammar file as a Base64-encoded string. If you pass \u0060true\u0060, it will add line breaks every 76 characters.\r\n\r\n\u003E __Note:__ Precompiled grammars from an assembly or project are encoded in a format called EGTneo which is incompatible with GOLD Parser\u0027s EGT\u0027s format. When creating a template from an EGT file however, the \u0060to_base_64\u0060 function will return the Base-64 representation of that file.\r\n\r\n* \u0060group_dfa_edge \u003Cdfa_state\u003E\u0060: Returns an \u0060IGrouping\u0060 object that groups the edges of a DFA state by their action.\r\n\r\n* \u0060fmt \u003Cterminal or production\u003E \u003Ccase\u003E \u003Cseparator\u003E\u0060: Formats a terminal or a production to a string. You can specify the case of the generated string (\u0060upper_case\u0060, \u0060lower_case\u0060, \u0060pascal_case\u0060, \u0060camel_case\u0060), as well as the separator between the members of the production.\r\n\r\n### Using custom templates\r\n\r\nA custom template can be rendered by writing \u0060farkle new -t MyCustomTemplate.scriban\u0060. Of \u0060farkle new\u0060\u0027s arguments, custom templates only support \u0060-prop\u0060, as explained above.\r\n\r\n---\r\n\r\nSo, I hope you enjoyed this little guide. If you did, don\u0027t forget to give Farkle.Tools a try, and maybe you feel especially willing to create some templates today, and want to hit the star button as well. I hope that all of you have a wonderful day, and to see you soon. Goodbye!\r\n\r\n[gold-webpage]: http://www.goldparser.org/doc/builder-cmd/goldwebpage.htm\r\n[gold-skeleton]: http://www.goldparser.org/doc/builder-cmd/goldprog.htm\r\n[scriban]: https://github.com/scriban/scriban\r\n[scriban-doc]: https://github.com/scriban/scriban/blob/master/doc/language.md\r\n[builtin-templates]: https://github.com/teo-tsirpanis/Farkle/tree/mainstream/src/Farkle.Tools.Shared/builtin-templates\r\n[farkle-tools-nuget]: https://nuget.org/packages/Farkle.Tools\r\n"},{"uri":"https://teo-tsirpanis.github.io/Farkle/the-precompiler.html","title":"Farkle\u0027s precompiler\r\n","content":"(*** hide ***)\n#r \u0022nuget: Farkle, 6.5.1\u0022\n\n(**\n# Farkle\u0027s precompiler\n\nEvery time an app using Farkle starts, it builds the parser tables for its grammars. This process takes some time and it will take even more if the app does not reuse the runtime Farkles it creates.\n\nMost apps need to parse a static grammar whose specification never changes between program executions. For example, a compiler or a JSON parsing library will parse text from the same language every time you use them. Farkle would spend time building these parsing tables that do not depend on user input and will always be the same. It wouldn\u0027t hurt a program like a web app parsing lots of input strings, but for a compiler that parses only one file per invocation, building that grammar every time the program runs would impose an unnecessary overhead, maybe more than the time spent for the rest of the program if the grammar is big.\n\nWhat is more, Farkle does not report any grammar error (such as an LALR conflict) until it\u0027s too late: text was attempted to be parsed with a faulty grammar. Wouldn\u0027t it be better if these errors were caught earlier in the app\u0027s development lifecycle?\n\nOne of Farkle\u0027s new features that came with version 6 is called _the precompiler_. The precompiler addresses this inherent limitation of Farkle\u0027s grammars being objects defined in code. Instead of building them every time, the grammar\u0027s parser tables are built _ahead of time_ and stored in the program\u0027s assembly when it gets compiled. When that program is executed, instead of building the parser tables, it loads the precompiled grammar from the assembly, which is orders of magnitude faster.\n\n\u003E [__Using the precompiler with Visual Studio for Windows requires extra steps.__](#Building-from-an-IDE)\n\n## How to use it\n\nUsing the precompiler does not differ very much from regularly using Farkle.\n\n### Preparing the your code\n\nIn F# designtime Farkles can be marked to be precompiled by applying the \u0060RuntimeFarkle.markForPrecompile\u0060 function at the end. To build them, instead of using \u0060RuntimeFarkle.build\u0060, you have to use \u0060RuntimeFarkle.buildPrecompiled\u0060 like in the example:\n*)\n\nopen Farkle\nopen Farkle.Builder\n\nlet precompilableDesigntime =\n    let int = Terminals.int \u0022Integer\u0022\n    \u0022My complicated language\u0022\n    ||= [!@ int .\u003E\u003E \u0022\u002B\u0022 .\u003E\u003E. int =\u003E (fun x y -\u003E x \u002B y)]\n    |\u003E DesigntimeFarkle.addLineComment \u0022//\u0022\n    |\u003E DesigntimeFarkle.addBlockComment \u0022/*\u0022 \u0022*/\u0022\n    |\u003E RuntimeFarkle.markForPrecompile\n\nlet runtime = RuntimeFarkle.buildPrecompiled precompilableDesigntime\n\n(**\nUntyped designtime Farkles can be marked for precompilation with the \u0060markForPrecompileU\u0060 function and can be built using the \u0060RuntimeFarkle.buildPrecompiledUntyped\u0060 function.\n\n---\n\nIn C# you have to call the \u0060MarkForPrecompile\u0060 extension method and store its result in a field of type \u0060PrecompilableDesigntimeFarkle\u0060 like the example:\n\n\u0060\u0060\u0060 csharp\nusing Farkle;\nusing Farkle.Builder;\n\npublic class MyLanguage {\n    public static readonly PrecompilableDesigntimeFarkle\u003Cint\u003E Designtime;\n    public static readonly RuntimeFarkle\u003Cint\u003E Runtime;\n\n    static MyLanguage() {\n        Designtime =\n            Nonterminal.Create(\u0022My complicated language\u0022,\n                beginning.Extended().Extend(middle).Extend(end).Finish((b, m, e) =\u003E b \u002B m \u002B e))\n            .AddLineComment(\u0022//\u0022)\n            .AddBlockComment(\u0022/*\u0022, \u0022*/\u0022)\n            .MarkForPrecompile();\n\n        Runtime = Designtime.Build();\n    }\n}\n\u0060\u0060\u0060\n\nAs you see, the building methods in C# have the same name as before. The type for untyped precompilable designime Farkles is \u0060PrecompilableDesigntimeFarkle\u0060, without a type parameter.\n\n### The rules\n\nA precompilable designtime Farkle will be discovered and precompiled if it is declared in a \u0060static readonly\u0060 _field_. In C# static properties with a getter are equivalent, as is in F# a let-bound value in a module, but it must not be mutable. Also, \u0060static let\u0060s in class declarations will not be recognized because they are not compiled as \u0060readonly\u0060.\n\nThis field can be of any visibility; public, internal, private, it doesn\u0027t matter. It will be detected even in nested classes or nested F# modules. It _cannot_ however be declared in a generic type.\n\nIn addition, the precompilable designtime Farkle must be marked in the assembly it is declared. Let\u0027s see a counterexample:\n\n\u0060\u0060\u0060 csharp\n// Assembly A\npublic class AssemblyA {\n    public static readonly PrecompilableDesigntimeFarkle\u003Cint\u003E Designtime;\n\n    static AssemblyA() {\n        Designtime =\n            // ...\n            .MarkForPrecompile();\n    }\n}\n\n// Assembly B\npublic class AssemblyB {\n    public static readonly PrecompilableDesigntimeFarkle\u003Cint\u003E WillNotBePrecompiled =\n        AssemblyA.Designtime;\n\n    public static readonly PrecompilableDesigntimeFarkle\u003Cint\u003E WillBePrecompiled =\n        AssemblyA.Designtime.InnerDesigntimeFarkle.MarkForPrecompile();\n}\n\u0060\u0060\u0060\n\nThe precompiler will raise warnings to help you abide by the rules above.\n\nAll precompilable designtime Farkles within an assembly must have different names, or an error will be raised. You can use the \u0060DesigntimeFarkle.rename\u0060 function or the \u0060Rename\u0060 extension method to rename a designtime Farkle before marking it as precompilable.\n\nMultiple fields referencing the same precompilable designtime Farkle do not pose a problem and will be precompiled only once.\n\n### Preparing your project\n\nWith your designtime Farkles being ready to be precompiled, it\u0027s time to prepare your project file. Add a reference to [the \u0060Farkle.Tools.MSBuild\u0060 package][msbuild] like that:\n\n\u0060\u0060\u0060 xml\n\u003CItemGroup\u003E\n    \u003C!-- The example\u0027s version numbers might be outdated. --\u003E\n    \u003CPackageReference Include=\u0022Farkle\u0022 Version=\u00226.3.0\u0022 /\u003E\n    \u003CPackageReference Include=\u0022Farkle.Tools.MSBuild\u0022 Version=\u00226.3.0\u0022 PrivateAssets=\u0022all\u0022 /\u003E\n\u003C/ItemGroup\u003E\n\u0060\u0060\u0060\n\n\u003E __Important:__ The packages \u0060Farkle\u0060 and \u0060Farkle.Tools.MSBuild\u0060 must be at the same version. You will get a warning since Farkle 6.4.0 if they are not.\n\nIf you build your program now, you should get a message that your designtime Farkles\u0027 grammars got precompiled. Hooray! Your app\u0027s startup time will be now much faster.\n\n__If you have marked your designtime Farkles as precompiled, using the precompiler is mandatory.__ Parsing will always eventually fail if you build a precompilable designtime Farkle without having used the precompiler.\n\n## Conflict reports\n\nSince Farkle 6.3.0, if a grammar you were going to precompile has LALR conflicts, Farkle will not display each of them as build errors, but will generate an HTML report containing all the parser\u0027s states, including their conflicting actions. You can take a look at [a sample conflict report](sample-conflict-report.html) for [the quick start guide\u0027s](quickstart.html) mathematical expression grammar, if we had not added operator precedence and associativity.\n\nThis feature is enabled by default and is expected to make diagnosing grammars with conflicts much easier. However if you want for some reason to disable conflict reports, you can see how to do it on the next section.\n\nThe conflict reports are stored in a temporary location and will be cleaned by MSBuild rebuilding or cleaning the project. Their paths are written to the \u0060@(FarkleGeneratedConflictReports)\u0060 item, which can be used by a custom MSBuild target to do things like copy them elsewhere or upload them as CI artifacts. Such targets need to run after \u0060FarkleRunPrecompiler\u0060.\n\n## Customizing the precompiler\n\nThe precompiler\u0027s behavior can be customized by the following MSBuild properties you can set in your project file:\n\n\u0060\u0060\u0060 xml\n\u003CPropertyGroup\u003E\n    \u003C!-- Set it to false to disable the precompiler. As stated above however,\n    disabling it will cause parsing these precompiled grammars to fail. --\u003E\n    \u003CFarkleEnablePrecompiler\u003Efalse\u003C/FarkleEnablePrecompiler\u003E\n    \u003C!-- If set to true, Farkle will generate an HTML page\n    describing each precompiled grammar. Defaults to false. --\u003E\n    \u003CFarkleGenerateHtml\u003Etrue\u003C/FarkleGenerateHtml\u003E\n    \u003C!-- If set to false, Farkle will not generate an HTML report if any\n    grammar has conflicts but display each of them as build errors.\n    Obsolete since Farkle 6.4.0. --\u003E\n    \u003CFarkleGenerateConflictReports\u003Efalse\u003C/FarkleGenerateConflictReports\u003E\n    \u003C!-- New in Farkle 6.4.0, can allow both detailed build errors and\n    conflict reports to be emitted when the precompiler encounters conflicts.\n    Allowed values are: Both, ErrorsOnly, ReportOnly. If present,\n    FarkleGenerateConflictReports will be ignored. --\u003E\n    \u003CFarklePrecompilerErrorMode\u003EBoth\u003C/FarklePrecompilerErrorMode\u003E\n\u003C/PropertyGroup\u003E\n\u0060\u0060\u0060\n\nThe \u0060FarkleGenerateHtml\u0060 property uses Farkle\u0027s templating engine which is described [in its own page](templates.html#Creating-HTML-pages).\n\nFurthermore, Farkle\u0027s precompiler is based on [Sigourney], which can be globally disabled by setting the \u0060SigourneyEnable\u0060 property to false.\n\n## Some final notes\n\n### Composability\n\nThe name \u0022precompilable designtime Farkle\u0022 is a bit misleading, because these objects do not implement the \u0060DesigntimeFarkle\u0060 interface. This means that you cannot compose a precompilable designtime Farkle to form a bigger grammar, as you can do with an actual designtime Farkle. This incompatibility ensures that you are using the \u0060markForPrecompile\u0060 family of functions correctly, by applying them once at the end.\n\nTo get the actual designtime Farkle behind a precompilable one, you have to use the \u0060InnerDesigntimeFarkle\u0060 property:\n*)\n\nlet composable = precompilableDesigntime.InnerDesigntimeFarkle\n\n(**\n### Beware of code execution\n\nFarkle\u0027s precompiler executes part of your project\u0027s code; the necessary static constructors to create your precompilable designtime Farkles. This code can do literally anything, but it is your responsibility to keep it short and without adverse side-effects. Similarly, it is your responsibility to not build untrusted projects that use the precompiler. Consuming 3rd-party libraries with precompiled grammars however will not execute arbitrary code.\n\n### Beware of non-determinism\n\nFarkle\u0027s precompiler was made for grammars that are fixed, which is the reason it only works on static readonly fields: once you created it in your code, you cannot change it. Otherwise, what good would the precompiler be?\n\nYou can always call a non-deterministic function like \u0060DateTime.Now\u0060 that will make your designtime Farkle parse integers in the hexadecimal format in your birthday, and in the decimal format in all other days. If you build your app on your birthday, it will produce bizarre results on all the other days, and if you build it on a day other than your birthday, it will work every time, except on your birthday (the worst birthday present). __Just don\u0027t do it.__ Farkle cannot be made to detect such things, and you are not getting any smarter by doing it.\n\n### Using the precompiler in AOT environments\n\nThe \u0060markForPrecompile\u0060 family of functions use the \u0060Assembly.GetCallingAssembly()\u0060 method to determine the assembly the precompiled grammar is in, but this function is not supported in AOT environments.\n\nFarkle 6.5.0 introduced overloads to the \u0060MarkForPrecompile\u0060 extension method that allow manually specifying the assembly. Here\u0027s how to use them in both languages:\n*)\n\ntype Dummy = class end\n\nlet designtime = literal \u0022foo\u0022\n\n// We get the assembly of a dummy type we defined. We could have also called Assembly.GetExecutingAssembly().\n// The extension methods are the same in both C# and F#; there are no equivalent curried functions.\nlet worksInAot = designtime.MarkForPrecompile(typeof\u003CDummy\u003E.Assembly)\n\n(**\n\n\u0060\u0060\u0060 csharp\nusing Farkle;\nusing Farkle.Builder;\n\npublic class MyLanguage {\n    public static readonly PrecompilableDesigntimeFarkle\u003Cint\u003E Designtime;\n    public static readonly RuntimeFarkle\u003Cint\u003E Runtime;\n\n    static MyLanguage() {\n        Designtime =\n            Nonterminal.Create(\u0022My complicated language\u0022,\n                beginning.Extended().Extend(middle).Extend(end).Finish((b, m, e) =\u003E b \u002B m \u002B e))\n            .AddLineComment(\u0022//\u0022)\n            .AddBlockComment(\u0022/*\u0022, \u0022*/\u0022)\n            .MarkForPrecompile(typeof(MyLanguage).Assembly);\n\n        Runtime = Designtime.Build();\n    }\n}\n\u0060\u0060\u0060\n\n### Building from an IDE\n\nAnd last but not least, until version 6.3.0, the precompiler would not work when building an app on a .NET Framework edition of MSBuild, such as Visual Studio for Windows or the \u0060msbuild\u0060 command.\n\n.NET Core and .NET (these terms are used interchangeably) have APIs that allow the precompiler to dynamically load an assembly, get its precompilable grammars, and unload it. To do the same thing on .NET Framework was extremely hard, which is why Farkle runs the precompiler on an external process, known as _precompiler worker_. To setup the precompiler worker, install the .NET tool \u0060Farkle.Tools\u0060 with the following command:\n\n\u0060\u0060\u0060\ndotnet tool install Farkle.Tools\n\u0060\u0060\u0060\n\nThe version of \u0060Farkle.Tools\u0060 must be the same with the packages \u0060Farkle\u0060 and \u0060Farkle.Tools.MSBuild\u0060 you use in your project. Otherwise errors are very likely to occur. The tool must also be installed _locally_, otherwise Farkle will not see it.\n\nThe recommended way to build an app that uses the precompiler is through .NET SDK commands like \u0060dotnet build\u0060, \u0060dotnet run\u0060 and \u0060dotnet msbuild\u0060. It is faster, more stable and more supported. Visual Studio for Windows cannot run MSBuild on .NET. [A suggestion on Visual Studio Developer Community][vs-suggestion] has been filed but Microsoft responded that it won\u0027t be implemented anytime soon. Readers of this guide that are affected are encouraged to upvote the above suggestion. When not using Visual Studio for Windows, Farkle will raise a warning suggesting you to move to the .NET SDK.\n\nRider however can use the .NET edition of MSBuild with a simple workaround. Open its settings, go to \u0022Build, Execution, Deployment\u0022, \u0022Toolset and Build\u0022, \u0022Use MSBuild version\u0022, and select an MSBuild executable from the .NET SDK (it typically has a \u0060.dll\u0060 extension).\n\n![The Settings window in JetBrains Rider](img/rider_msbuild_workaround.png)\n\nThe fact that the precompiler runs on .NET Core doesn\u0027t mean that it won\u0027t work on projects targeting the .NET Framework. Precompiling a .NET Framework assembly will still load it to the .NET Core-based precompiler. While it sometimes works due to a compatibility shim, don\u0027t hold your breath that it will always work and you\u0027d better not precompile designtime Farkles in assemblies that use .NET Framework-only features like ASP.NET Web Forms. In such scenarios you are recommended to move your Farkle-specific code to a separate library targeting .NET Standard.\n\n---\n\nSo I hope you enjoyed this little tutorial. If you did, don\u0027t forget to give Farkle a try, and maybe you feel especially precompiled today, and want to hit the star button as well. I hope that all of you have an wonderful day, and to see you soon. Goodbye!\n\n[msbuild]: https://www.nuget.org/packages/Farkle.Tools.MSBuild\n[Sigourney]: https://github.com/teo-tsirpanis/Sigourney\n[vs-suggestion]: https://developercommunity2.visualstudio.com/t/Allow-building-SDK-style-projects-with-t/1331985\n*)"}]