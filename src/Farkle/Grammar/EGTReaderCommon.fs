// Copyright (c) 2021 Theodore Tsirpanis
// 
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT


module internal Farkle.Grammar.EGTFile.Common

open Farkle.Grammar
open System
open System.Collections.Generic

let internal createProperties source (x: IReadOnlyDictionary<_,_>) =
    let name = x.GetOrDefault("Name", "")
    let caseSensitive =
        x.GetOrDefault("Case Sensitive", "true")
        |> Boolean.TryParse
        |> (fun (parsed, result) -> not parsed || result)
    let autoWhitespace =
        x.GetOrDefault("Auto Whitespace", "false")
        |> Boolean.TryParse
        |> snd
    let generator = x.GetOrDefault("Generated By", "")
    let generatedDate =
        x.GetOrDefault("Generated Date", "")
        |> DateTime.TryParse
        |> snd
    {
        Name = name
        CaseSensitive = caseSensitive
        AutoWhitespace = autoWhitespace
        GeneratedBy = generator
        GeneratedDate = generatedDate
        Source = source
    }
